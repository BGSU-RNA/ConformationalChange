%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Figure 4.pdf
%%Creator: Adobe Acrobat 11.0.10
%%For: r-rahrig
%%CreationDate: 8/26/2015, 2:43:56 PM
%%BoundingBox: 0 0 358 281
%%HiResBoundingBox: 0 0 357.6424 280.6682
%%CropBox: 0 0 357.6424 280.6682
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1100 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2015-08-26T14:43:49-04:00"
   xmp:CreateDate="2015-08-26T14:41:55-04:00"
   xmp:MetadataDate="2015-08-26T14:43:49-04:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:a4b9f852-6e25-45bf-b6d5-090eaa938ea6"
   xmpMM:InstanceID="uuid:79139436-2620-482f-9238-63c7c53bc073"
   pdf:Producer="GPL Ghostscript 8.15">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft Word - Rahrig and Zirbel JPJB Article</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>r-rahrig</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -280.668 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 280.668 li
357.642 280.668 li
357.642 0 li
cp
clp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: GLAAAA+Times-Roman Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /GLAAAA+Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 5 /fi put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 78 /N put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
def
/UniqueID 5020931 def
/FontBBox {-70 -218 932 915} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
62 dict dup begin
/fi <1C60D8A8C9B7EF32570AFF8231DCF4BCE981C75D06856924F81F4F42006
607403BCBC1694E70468A446C6EB0E4807D7403870C64F8AE816EE603090F152
E3E37302366B8C49FB06227A8824A7676469F0DD7A4B58B75817F1653B6D3AF1
C8B6CC27DE75FB0AA5C5C48DD37015F6F9A12D9F3D566544674838125FC5B36E
7BB300C1E6E0657FCBAC160C5880CEA69F88DB4C09BD33DE6BA600E88AA1ADD5
77A7E933ED4D07AD69B3CC2806B> |-
/space <1C60D8A8C9B8707C25> |-
/parenleft <1C60D8A8C9B81F2C76FCF1DA4D86968C820C1AC714DCC217B6D4
918842E47D5835F9377A08864F0B413DE41481554239DC80E8FAC166F5D95783
7085C6E6DAB3F2A70C7BD1DA46154F3525C9E90348> |-
/parenright <1C60D8A8C9B81F2C3AE0CFA7597EBFA517709206961B78365E1
CC5ED86024F1B7499C23DB3603AFD99AB0DFB2842BDFCCC1E2C33DCD9A29B6DE
DA1EBBE890CD740B353D14EBDF479204E46C9625423> |-
/comma <1C60D8A8C9B8707CF500A7A5894D1725992EFBC166CFF23147B7E69F
A1C74D97FCC273949B74B78FD40D5AC4A1B125071E6B26B97A4F1E4CC9C60D79
492C> |-
/period <1C60D8A8C9B8707CDCC340460CEA5ADD57470B284F11F11D9BA6B6B
35C641C183CE2> |-
/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A68144D7948D
5D72AF545A4D3C0513F795E10E78346C3F1E06A3A564CAE7C700C7FDC9B087C8
E6354649236E324B711B953A69EB07058EA7506E73C4971A2CD8E7B56CC9E4E9
FEA40EB905B2E375D63C0419CF10FC6C14A0C10D77A69> |-
/one <1C60D8A8C9B7A73DC5490245C8C7708C9C1A86CF69CA79CAAB63EAA648
EA2E6C78033E5C58FDA70BC8454AA911A757A9E5E1438DF9CC83414C3826EDA2
E8DBF29FCDC2AA63CD78AFFC717ED254D55F2212> |-
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B744F8
D4F54DF812628245A65EF24CEAADD5DE190FFD56148C6E385D5491D13046F140
F2584C73B6FA05C320B018358B9C23ED6C9E586FC4F73E174BDB9E859FD3482F
BC3EE225AB5583DDBB> |-
/three <1C60D8A8C9B7A73DB6464B30656D3130691DF7EFD1FCAA812FB718AE
797868078CE6DF2DF1E2A66ED4BF5348B6C69083E458153AE071004D8F2BF947
6082ED69D4C391407465B1B45C31A02715A00C98BC5B726516258E8947B375AC
1D99C71671CE1B20010EB708F68C157CA780D8CEDD82E4EFEA36957D1E9D620F
21062F862D959015173AB7F66F545DC094D5CD0481B86047A6A1B0DDD60A5F4A
F425FC6CC8FF071AFB500BB581> |-
/four <1C60D8A8C9B7A73DC573E0FDE75419407F972C08C3639F0C2B88697D9
65911F927EC9BA1D198F0542C84E63BAAD35D5257F2E465BEACEDA053C385BE6
F65260697BDCE0DD0EE> |-
/five <1C60D8A8C9B7A73DB6618B179C618EEEE62C835764F1684C24CA05200
AF5AE57E4C08C1599733FC0861BA8394C4D03249B7CAF109B14283888355181A
B9FDD6CF3CA0B3080D36BB77F0DAA149B4554BA104A9261184D17B987ADE7E62
A8B052B5A7265B5BC5C8873B92C63646566095B07464EA249CA6A982D71D90FF
5F1FAFFD28BED759B45ED375506F9> |-
/six <1C60D8A8C9B7A73D33BF1B90A18439D8A405D7C2C2CE39F3D6CF44883E
BC665B1BC22C1A295E570F87EE932C7C5AE5AD7FD71556D1DD18D897666F411A
91C0C83F9464A64F6DBA41188C7B70D6EB3CB783FF623CD0556DEA7D75906C65
3696A52A8075AF3CF1D8B71CA3050CC39364621D99C880412847981F1F9B66A2
73E16CCD8B82> |-
/seven <1C60D8A8C9B7A73DCDE67133A541ABA65396C23713A3895CD074A7FB
B7EAEA6542C060A837CD08D17D443BCAC7FF22453FC5C05C4320> |-
/eight <1C60D8A8C9B7A73D33BF1B919D39902809837F97034A94861503C048
89F425DC7EF46E69B04AE4A6186F4408E8BD4F6FF8BE1E2F4FF4BA3CC4B02EA1
8BE6180EDDF7139DF5FA84390B65E4527838A09D707AE37023E29A7D3C55AF94
037A66D712F21421B60032B01D813F91C1537F12424620A5BB11C78B148B28D9
D60195321A7398779485EEB8A44AB4B35814919AC0832BB90C81597402ACDCC9
3B8E850BA94732718C0C3ED3F170C10E3E696D938F0491ACC9E2B4DAFFE73FB8
BDA831407C> |-
/nine <1C60D8A8C9B7A73DB9A4910DA0CCBBECA0DA0457CCEED7C0B85BCFC74
0C9425D3AF4F4BACEB188E066E6BE4F3DA436C327064AF2261A34CD99BEFFFE6
B6FF2AA1244BDD13BD025281BA4C467887C2D62FBBC0DD16260FB36FE913403B
C342417F0E77DAB0CE788308B714C512BE4F6B74FB8DB31CCD4DC3E5D7B719CB
60C1B99C194> |-
/A <1C60D8A8C9B6079F1E48848039BAD53EE39881B4B3F26C99EF9FE1522DFF
6F26943C1ECA24C164AF5F61B2C92DFAD07FA0C8B1B904B41F6CF6DDF9C07D4A
1CF222F4352E2EA60050F34CA043EEEB5AF553D582858BCF9E068F5065DBCBB4
5B5119EB0191891F126AB93C9835C0B66D0D57B60965> |-
/B <1C60D8A8C9B64EDF88216CF024BDC8993EE8739690407CCCBA55622B12AC
48FEFE3DCAE07F0CBF39ACC150B70A014A2B646D4A751B6DDC0D2B13BD5D6CEE
01BD67C9FFEB84FBDBC48B3EE28E0517804499F9A0FC624A20A720435236E9BF
53158723393EFCC5345C492D3EFF902DE61BFDBE47319621EE5C882DE19F24B9
AE2B150687106210D6E977DC59E6CB624E12B935C78AE78A8ABCAAE90A93033D
EFDDF124BC49F384A4B7C44ADC1331F180C35A49EFD4A528CFAE92F4B9D28FEB
3EF40550D1ADB90EC8B85A4EF23E69E01BE8E7E172164F3A968027C496C4F917
0123422B3839DDD3C7F3FD410276FBBF6760DEC3D20C> |-
/D <1C60D8A8C9B6079F1E48848E88AD51DC6ED69C153D805D359CD16B637290
64DD81A2E086ACC88AA9933467C087E32D51AB7970DAB223AA9CE5637BC18C61
8CABF104004FBEA01A2E7B133A51991F9FBCBF1B66FD4F47A5F4CEBF4A65900E
F910BD5938520CE1232DD95B540F2FC099A1E40622A557A0E92AFBEDBA4F6AC4
69C67392AA3D3724155E5206173D6053C725C9264E36615A6467491FB68D3E21
5E8809EA4038A37E9B38DBA0E3C30413150F017162> |-
/E <1C60D8A8C9B7D8BE6A6FAF13E57A5D0DB8CAD299B66F5484A231D46412F4
B2D9BB0BF4B942DF800D163DA88D45841317BB509C73CB345EBC9FB96A8D7FB9
FBE7C285E3AB1AD253C34B31E29243E79691A59A6025C1346CC6D5FAA6D4C8FA
B62A2B704C81118F87B7D555769B9E7B1AF058AB69E772D95C4038FF2A2ED8E4
4948F6289C97FFBBCC7879D756C8E0BE2EC8EF87969D9B00C38949EA329A647E
45959386C7733FA859A4DBDCEDE50DBB12FF22D6CB4FE7E7921EB63DF912B31A
B6D8AFFB7D1CEEE130C94A5A9EBFBA> |-
/F <1C60D8A8C9B7EF32570E39CCED07FE55F4D489D683B4BDEF2A3D51C9569C
543F2187EF19C092854624A46F2F8AFB5EBBC2396CF78755C8CBFB37CC0F86E3
E3D901AEDD7B3C54FEA5ABACD9D003329865D271B89FB326AB694448BEA9DCAE
A1D0338CF67C81D387E88330E7593651968480FE5C48F9FC5067EA453017D667
6F5D76651C3A251991557F46DFB75528> |-
/G <1C60D8A8C9B6079FE80B2D9B8A220BAA4FBC7D1081589311CE1674D6528E
3FCACB0B2609497099135F8BE2B7EB64671E0A3FAB575B5E9292F50742C37E72
BC15F9DA8087CB5532A4F9726A808CA76505654A52B7BC2C8AC78B1ED19941BD
F5558EC6A1F700573944B578C4F5CAD471A427FEE113600EE7731FF3E37AD689
F855539D6A8D4AB0D5752A4F4D15E9059E30A900E9BD66C92B40A23C6C9A3A92
90BA417D5720ED04BDA9997A3081> |-
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090DF6EB484
CEA0815D83DD608CC775FE83C31EDE164D077FF80BB002D9CA37B26EA5372CD4
FEE69909A5383B74A93FDCDCA1E7577D38E8B9431EDF4F2AED0BB7B71858AF38
E98C9DD8D402A49E8B0C6A4E0841C41D036EDF21A21312F4AE79B0046CA7EE30
82CAAB0BAB2FA41410BA4687> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7A4C9904C14F3C78DD8A216
6C79F417AFFBE3B86093B7A5C9E5643BE68ED9E3DF5945A598D6DBA4A9E1182E
708E6DE986B0C684C3> |-
/J <1C60D8A8C9B7361F880F413C1C9D6C86FEA00697E36B5763F3D600E6E512
CBB521E5C58BD7FE4FC436D4585A39A4417A2503D8A2290C1270AA4224EC5999
0BE6D6F5C4A98BC8426B0DB3A2EF57566AB690B6519C0F43> |-
/N <1C60D8A8C9B6079F1534F6C8E692D973723DE6031A3B5247D087FFE4A106
9EF5AA2ED9CE6750557213920A2601F63AA9186C4B637471D2717C43982E5DE5
975183D58FD09BCCEFC04163A8B508E94886BB91859D1CAB39CA1162F98C4274
76503341FDEDDBCF373DBABCD740A8641CA5146DDFD724AEC5CD70E2413BB0E2
8069823741CF24EA09359E1146813E12AB381F01CCF0E77A826311> |-
/O <1C60D8A8C9B6079FE817D875D2CBFFB503E7661914031DEF82D48C90EF37
02517DD03C8E65B1C85769ED6887A24289D9AB99F5B1BDE82993DEACC2DDC39A
E11851296B5BD32A727B69731E92C7B0DB7ABEFABCF42140BCA1DA9DAA31FC27
FA6483912C36637F02E27FBD8C9B9BE19A703CEB20A6852E97F86CBFE152A658
3E5E69CA94CEFA79FBBF39D4558C7345137E92> |-
/Q <1C60D8A8C9B6079F6E1D84815EAD6D850D4730CB1BCC143B6E3561CFBAE0
D6BC7279F59272254D340691859D247192351A06B16DFFF97241D1A8807CDE5B
81CC42D0BF19DE1BDEAC98012398C3F714FB99919B7E72726FBF0B59596C14A0
8AF8AED90975250BCD49CC8BFDBB0095B9065577172158D390CB294393629642
8B742FFF198DE20A19456F82B31AD6028351C3449AE68EE95F4E143751627A5E
0D7D1962A93EA44E0C234A57FF6A> |-
/R <1C60D8A8C9B64EDF88216CFE5F8DFCBA0C87020125FFE68F648662328DE9
C1A1DF31A7DE97BECC9EB17FCA8DD332DD4812FF5DE1CE92FFC13C6702F8E100
D5C302CE8AEBBA4E6D509D4F61A757D25EB9AFF99525EBE12113FD0E2BDACF13
FDC73B33B0956762647E5946EAE2456E78CDD4DAC75A87FFA1680522E027A14A
D924BAEE216B0EB4A6158424B00B8C4E556A359180D5A753AEC63CE538C838ED
AA185F89A5ED72EAAF45AC4AAE1D791EDFFA8CA9FAA76098D0BDEC653D593730
C982ABCFAC6D77C8C41797> |-
/S <1C60D8A8C9B7EF32A2AA3EDC3AEBF2A2F19576F7CB05821A922FBC1006D0
FBDB6BAB99F79B2745AC017D80EE25A753D1504184EC2C1EB4ACE2A3A1A90611
2E88FA430FD73C40B7FD88348424E34E5911D100DCA496AA1F13BA94FD51F923
2C2EDE79A13288594EDC6E676484E3CFA238A8E02670366319C5B8B1AAD4D8DD
E249E907E38DA97F3EF2C5BB4A08D4318B08E7E005120688FB583FF4C2D01AF7
C51BB2664ED343CD02CBEC0E8A628DF82EFEBA6530A019275D759362C55545EA
8DF5762A584001897DB3EEC8B33A17C2DF10CB13D73E0A9A4B06> |-
/T <1C60D8A8C9B7D8BE6A419732DB5F024C0509628A5C1F3C8AEF4E7D00CBC1
830EA50E7630715A3443152766048C069B0A4C72A78E94AB6D91F59E64DF9B5E
3A2935C3883FA28660A00DBD8C0553BBB6DF7158E8BBDF61D18A> |-
/V <1C60D8A8C9B6079F1534F6C8E692D97DCE3893C7E5D024A5BABDC05E08DE
1A1496B27A897C1AF9807F997865893EB1137039FC3707318E9EBA1BA6BE3A9B
9D9B20F9C43B7EF3277E99629F542020D269779A25947EEE35F756BF9A4CB4BD
FA29AB7B422808DB17B31F> |-
/W <1C60D8A8C9B5D6EF3599A55361F1151112E2F93E219FC62105E6CEC64AA1
C45D0FDA0691756064A76EDE1A6D39D789F3B1D2680E1D581562D972A7ABAEB9
59798F8D10A33BD9C819F3711A67793F93B3FC3506909E04DE00ABC64E4E16B3
6A80F6FD8F2BA3C890634A26FF2EB40C7ECFA3BFA719DBD630CE7F3BEA51454D
FCD018CBD43E73A882544A9F9DC39916BB67508716E3DCBE9DEF2D7EC28B98D0
87C52ECD> |-
/Y <1C60D8A8C9B6079F1E48848E88AD51D8AA3C768145CDCFEDAB6B83C487B3
230E92BD9AB55ED86CD86A45A2522A5640FB8517DA7F8A79CB54DA11875BF926
EB1BE1DB9355F54EE57A1A55C3561D6871D3E1F86488E4C81AF8B58D6FB95306
56C562B8462CF724351D1CFF58D5DB72E9158FF2BDB5E28DDE7B6F87169F095A
3E2713B6E5373EB6AC> |-
/bracketleft <1C60D8A8C9B81F2C36B2094B9ED0E07AA432BA5CE2E16D09DB
E94F578B72BBBB31B68E690F62B9641352789F0E43476B5B076476BF5E> |-
/bracketright <1C60D8A8C9B81F2C36B2094B9ED0E07AB0AE245978D415C9B
35A8D321C0AFE31914517F88ADB7E422E89E84FA69E241776020CB3FEA2> |-
/a <1C60D8A8C9B77FE2B8A5A0E626F00B8601A4BA9209EC2E016D4D036CA837
D40018AF5D883914271001CC13D63142E54E44E57E51B320560B15FC95D18FCE
EF8CD8075D1040681986EADBF626EC2E8E567B8A1C0AB941E9F8EEFE622B52F8
0E823FD579174CB71B7CA2C77149B2CB1CEEC94DAB2B42DA3AED040F2C6D8124
95CE1305747ED87528F28B652850DC377AB3CD210EE247F0421628E769D40A81
8F259CB944CA4D11CECAD8776E638C71B59E73E45735D08DDAB10FA7287CF7D8
75DC687B127A36DC3727C7C6CF37C9> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5D3508B11AE282C299523D8D2A309C1
7B70A170029C0F65CF90DD2BE591B98673683525C4890D287920F2AE4A535CEF
E47857E6491D69196894FC8103DF0EDDDC2D4539CDA22F565FDFB14A75B6689D
6F3BBF9428A6B06753AEFCDF61504E25> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD7913AEB5D830EAFE
778D8CA9FE61C9F1D7F341AAC32F9CA6E189A5065ADF2D5F773BF6F8A8426463
FFD760FDD2A3FB2FF93A8F0D901F4D79430D0C49AB088DDE46CA955357CE80E9
61F17603291AD5A9BCF763> |-
/d <1C60D8A8C9B7A73DCF5C5F7CCFE122187512091E589982F98FAF3DF4AFB2
6428CA057084F988581279721A9CDFA89D7D5D728C8AA7A8F756703C0C662A68
79257053482B50BB2E4489C4205E805205B4B64F372E91646DE7AD39FC7B62DC
1B6A56CDD32E41B185135CA415F5400D188F24ECEAFA41A7E31A68913DFE4FF1
0A713F5C795938F283BD17A14C2E71CB> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB594EDE3BC5D157320F43FE1905DBDEA
268A522568351ADAC6B86C248A6852E1F9625ACFC451FA9615B7C2F6583CDEF7
72C1728DC46ABC29D5E568995D04B2CDDE09CB13AB14912CE1E81EEC2F220DA5
35E9945F138D4E330E5FDB8EF32E28F8> |-
/g <1C60D8A8C9B7A73DB582976F06005DEAE574E3F47714D50364275AF1FA6A
29103B9BB5C96C7CD0A11F62D89E71D69CE3C6BAE57A2631895135068EDCE48A
F433FC753CDC3876905438D49D6BF5D32383D090F347E91867606AD029186A73
0586908F950C664407730D46B77580407C8B001617FDA670573C440F5B1F6D5C
7AADB205EDC540E7025C8945276060680B96447D86DA4C3B88F507A33822DBE7
FBFD347281C5DC1A4ACC65E0835D93114A26AF7B2698BBCD9A3484D376D8607F
1D698030C56853A263C52AEC1694C5C9690DCE81C476D985C84AD37B5F378E7F
1E30F111331B0FA123A53BA99A7FA928FF5169169AABEE5B7469F11D304EAAD1
29306DB67830113B411B00CC988095D47A26CBD7641839E1798F599524545304
6A44A6BB4774E4A8D9D28E8F3BBC4B1F050DFB734E20F3292566B6C7D5D8785D
EB7FA4A0707685D1109D5E124E5EA3F298FFFEAFD1> |-
/h <1C60D8A8C9B7A73DC549024A8346FE9FE9D7E1CFA5F3A3542DDBE4C5A916
A5024A59CE0EA5149D6EA79ED65490BEFEF9C3C348201E7A69F357C223E56920
09826F3A927DADAF422165EC130205D6C94EDE841416A6709F1685CEE6DEF083
AF9B4CF1705AC60AB37B96773E8FE945D56F9115B299614B0DC15F528F328117
D5F2914E00B04A31> |-
/i <1C60D8A8C9B854D08887A954F0E7BEB51C5982B53B5CAD5D73C8962176EB
1E9C65A876A6B7558F486B98A9FD96E51C21DC337D871FE32AB98114B9ABD7DF
EE4F173A4E4D7B9C155D04F0D2F7A0007612F8655B908646055ED93B89CDD24E
B4FE929F> |-
/k <1C60D8A8C9B7A73DC549024AE1CA2340A69E9AFD2632EA02404594531132
89A656A4C5BBCFC7E00E6FB2794DD5DF7091593C4B2459CA385C1A12A2D5E7FB
C8B8FF0A9BA6850C8F69E58CA774D023FB9DCE74AC81C1C2176D84DCE969405A
1CDAC93C0D42A11B542E5DC51CC00F84BA2BD0C4AC5392069AA02344972EF5F6
34F299EA12B650E75C7C97BBEC58BC5DFF30C2CFF0EB5EFA30B6EB13F542E497
3B3D5E8E41D5EF2A2B260326982F1B14A6> |-
/l <1C60D8A8C9B854D08887A941088E15019368529A0C411CDB31B6270BDB21
E6F24215DA6EAB48951C8DAFF38285C17967F3E2D31A5645B4CB7848E783EC24
2D0750B83BCD4D9A2F> |-
/m <1C60D8A8C9B6FF8689426298A5A57B87257CB9CD84E4CD878BEC2EDABD3E
5326D7BD4AE0A6D140BA0E3216B39C8654DB21991A84B9E982A8015C6F0752B5
6AA1774EAE24B2C9274A3AB9C77F8CBAE9BA22641A37A18507E511B84BEE094F
83EBB4A7AD2923309AE98051C1443250D40607AA633432E05E81D23CA0822D9A
FADF3789C3D9196D35EAC0BE7AA00A2BCCCCED6A450F7A5AF65893714081045D
FD49C0B1A38CFE25C77490854734FC5B04D3B787176C63D6A9E3BB1B43699A6F
AC01C8B5F7F27679> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C630F986F2AB3ECE6D2
578D5DEC50402B578B4E6CE0632E8947CBBCEB7543031081448F167C88EBA303
B4D2C70599E4B2DBCDA2B9DA37C571B7CFFA556EE2B6CDE54270E5EAA3F80E68
09540E2D41E62BFC6D0AC69B3E0C88DD3AF2AA5C4EA7ABFC511536F434A8C9EA
34BFE186> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34D2E8E7AB07F99
F61992CA50ADD51C5A93B4B134C15D36CEC8323CBBE9C0D3A63155E9EC74B781
308A5B21C88AA604D5E026CDBDC830C30107F5FE4F678EF57725AF37DE4B> |-
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4985F11AF
5F5448F91B1C2A01F58B9957C8855694597A60CA2B92AB31B984FEBC59BE8CF6
E7EF6DB3B14559D06BB7739382C6027AF92BEFB98E1A603D7056AFD6AA0FF259
7DFEEA0FFB1798FB4C6E84595EBEC102A8193F825669ED2F947357F69596E0C8
3EFC7781D458786FEAC85DA3B598C42CBC0B528C20FF8C818D9C84ECB381C23D
071D6067D6D4ABED6B76C08E84FD88E35B541B7A> |-
/q <1C60D8A8C9B7A73DB5811938DD329AF57CAAB18EA332E17E6FC9FCAE9BBC
B5F9590FF4947C8E9F161EC21E6E33A099FB56096B2E09BB00A572B4EE5B3509
C9502CE450097F5DC5FDBE71DD4AB7CD401B40E6C4DA045984C56107DD86065E
BE62446721AB0980E2963C69C5F3756AD9386A3C697ADDBFCE761761BCF86B28
0BC2EA1A3FEC23FAF0550F64A365F1461E7FBB22BD491C238AB4E23AF83C1D9B
DA967E33320C3142F515A0C562CFA36A4FD8331DAA666235ED87844702941982
B9B59AFD> |-
/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C25EEF2743C3E656EB551C4E9
F85B6D5E0B0DE85DBE3E7E4330ECBBEF17373BC110F8AA9A8802264B862269B3
95A499FF180502591DB209090308DBFD470E3B7383A5816A971D899F067B57A8
BF0B52B29D18703F2FF2F8A07A35B18E67> |-
/s <1C60D8A8C9B7361F743FE5C0927B8E9DCFFF4919DB63FDCB2558416309EA
06E6C28295E9D479721D8B634ACC34106E2C9A487CA6E0AEF9ADAD9F963F5645
30ECC07E9331AAD9B72BE665CA2BE7A9F1D5521C8D2C976125A1A3741D7662CB
FBCE794ACA96C46765DB1C78DC2914BD7E2704926DEE8EC699BEB58B49EBF6D1
D04699A40188A52BF539445DC822AF58F2BEA81D3AB8FC83A58427D447CA5ED3
25B82EF06D4D7599FB26DED3D15079B8A67EDF0A37F9615BD13758E07476052E
56F28989D3111E88586DA9E15045219808ECB35651BC7D3092AF0164CB88> |-
/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF06F
2E3E32F668F05F953BFA64D347D99A040CC844D89086AAF3FCF728CEA889D9B0
6DDE6504D8612EF9460D7A61A7A128A2B345F4935E35D3D66C8379B117E42A3C
7BD8F24EA780> |-
/u <1C60D8A8C9B7A73DCF26D255EF9FD179C9641AFB7910AEE050AD16FE1F32
9C2A0B78CFA20EB402C5F33CE208D4BB50A4703EB6374C1421C6FFB807E0EA15
D97B35B822F41CB2EF7E7519B6D341000C277158D898E0E10407BF48EB293312
807156D1EA8DA5083D327F0DDADA04B1087C398AA0C8C33CE7C870371CB59C91
9E5A4AC0C09FD7D2D4B02DFD573CB4EA12A1634414E792> |-
/v <1C60D8A8C9B7A73DB6FD8624184F2427FE4C13B4B36F553CD0D55662E4C1
7B97AE4389BB398EABA6F9F3944230C8C1E65768EF2962ADEAAD5D518AB099EF
AEEAACC96CD3FE82D6176FD312E386294390F847ABD6AD7600C8E885C3636D47
A8B8BEF6E5984ABDD2AD10EB6B55C32F63A0> |-
/w <1C60D8A8C9B6079F6DCEA23647EFB791CDC764E84E981383B3CAA1C57658
085645C159DFD8563F150210B20F18301E76245BE7E7995710B3B35A7AC4BBE2
CE400D7E4B737242F3F440EC08733475986CAA912E03E55D18A800D4D1E750AC
DD7515C35EAA73DBF357BF238F1657E30FB471A39A003A70C8FA36CBBD0B5776
B5FB1F1B172060E5DA1775C76EC574469344D9D31975C6AB30CA38CA98045762
B3C1694506181D37CCD05520> |-
/x <1C60D8A8C9B7A73DC549024AEE55A01C267BE7535ADEB970EDB07A73DA22
21D1A8AE1158F2B7D8953BCEA0B19CC5ECEC1855158D435D5C5C09DE58859906
6B8470EE1510DBC77D586430AD2B8797624E5AC9501A45152AF0862CE273E2C8
52811AB8C4683227AD9D14B265283271F88672D21F87AE19B99EAA0145B81FB5
8F05F66CC9D659279921FC888BFD9D9B5EEC0425DE32EEB21C812079B626FA7C
3B10F1E848A98AAB> |-
/y <1C60D8A8C9B7A73DB582A24DD1B3BC5A4A7008353519B1F8F3FDF00AF134
F3FB6C772D7285D9452DF22BBFABC7E114B04A90F7F244187DE14019FC93B665
AB3C11B81DC96191082155D9C7281591E7BB925319D6F886180B47D2AF409CD5
9ED774A3983C8B0B16DF7B9DA5C32337940DC73C1E748CBE98E7956FE2102ACF
E2D78F8255846560B343F1AE3D66DE97809DE237C9A59F02241F77> |-
/z <1C60D8A8C9B77FE2B2232EA49D913A831C97B47563501A79DCA41E417E74
E20F3E3020C6B422D96B1171C7F6A868EEF4F80EC234E8C81C6D5907680692B3
D53F97E8CC04C61D64F59B524A639C52> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DJABXL+Times-Roman /GLAAAA+Times-Roman findfont ct_VMDictPut
/DJABXL+Times-Roman*1 
[5{/.notdef}rp /fi 26{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /.notdef /period /.notdef /zero /one /two /three 
/four /five /six /seven /eight /nine 7{/.notdef}rp /A 
/B /.notdef /D /E /F /G /H /I 
/J 3{/.notdef}rp /N /O /.notdef /Q /R /S 
/T /.notdef /V /W /.notdef /Y /.notdef /bracketleft 
/.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 133{/.notdef}rp]
DJABXL+Times-Roman nf
DJABXL+Times-Roman*1 [11.9771 0 0 -12 0 0 ]msf
359.804 280.713 mo
( )sh
%ADOBeginSubsetFont: GISAAA+Times-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /GISAAA+Times-Bold def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 51 /three put
dup 52 /four put
dup 67 /C put
dup 70 /F put
dup 72 /H put
dup 77 /M put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
def
/UniqueID 5020933 def
/FontBBox {-57 -206 981 694} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 461 481 676 696] def
/StdHW [33] def
/StdVW [140] def
/StemSnapH [33 66] def
/StemSnapV [140 163] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
22 dict dup begin
/space <1C60D8A8C9B8707C25> |-
/period <1C60D8A8C9B8707CDCC3589D17FCB9D3D211C01378CF4E9421E1066
E9CD3B879DD359C> |-
/three <1C60D8A8C9B7A73D33EFE60D131FA94829BAA63BF1253B9FDDFB032E
C666F7A23CCB62C7CB5712F25B05478BE82E7DC956584D99DAB2DD342B1BCE36
F34EC074159C88C65DCB61929E644DDCB061D6730AEECAB8E1894A8606E5E9EE
46A4F1E0F55133C675D1C9FA1FB599AD1D88D1C4AF24DD47978368E4B5E83CC4
B575DAF5C21C8FFD3ED93DBAF2C2E51B08C97C16EBAAE94B5CF6C6> |-
/four <1C60D8A8C9B7A73DC573E0FDF8A30F56C5D243FC7C4EDA659BF78BF8A
D1D30C2B3FEF36C9176DDC41DA600D8A71D6D670CD6088BC63F26C4A86069AEC
98B16F6155D31C66A356020399FB8A78E4BFFC343> |-
/C <1C60D8A8C9B6079FED7B811C9CB98FDD2CBB73B766F3FE85D1EE3FD8DDB8
5BC465FE2BC61BAC5B5A2E845BEE1CB687D5EE8D92148AD0E5427DF74A90FB77
64CC177867BD76CAA04E6A69E28967CFA88BC3AFAA5442996A11E6CC11B0F6FF
8397EAA6B27261E6142CA88F1F81F940028FBB254EA09ADA6B07E53027E92E31
55E780021CD9D0624FD2956F4909DA2DFB0985C4CAA47E89EB6E5704D7E476A9
38E410D5> |-
/F <1C60D8A8C9B7D8BE6A7B5A60358C2DC3F9E337157989208C111F4E1B2EE3
7FB597A9807D05EFB79764C4C12F783C86D450E0437B9EFCD409161977BE9DBC
DFAB2DB139D0C16AEBCF37FD57D3619927C15F7AA477808E0C18EBA23BAE740B
F0530B372A43456378311149C68030AE62DA319DA010A273CF2D30763BBE824A
0379727B5D4A28F631F5C7953A1E5C> |-
/H <1C60D8A8C9B6FF86897C29919E38C6A18551382CF78CE4A010663E2998EC
D55DA33DDB83C6431019130C745600A90C824E8C23DC2FC97ED42AB45F18FE8B
F4D8392672A0F5EA74B9ADF0A3BA2269AFF6D345153525AAD7C50D31A0BF6CAE
AECCA66F133A3DE969830A535EC20D9F9DB011AFC516AFEC6D9DBB68AB3AA5C5
4DDB7EE4A499168F2987597C264E> |-
/M <1C60D8A8C9B5D6EF3EDF823525D67884CFE5E6E2D79F528AEFD30B8C24F3
F84A353EB328441BFBAE386C2334F111D031C740693356DADDA62C1815C8D910
A43D21FE1312019BC32369117BA43F900FACF9D0C8E6A1E3B5E69EA1CA878962
F0DD93613312CC0C6EF96DA429093C1285F13F509BB821E55B44A0AA1CD034> |-
/a <1C60D8A8C9B7A73DB6F7EF3346BAF85A0A28C42D4FE84B3E797799B76D92
124177E7F1227DEDCBB5F33A00E73C8888855FBB7D2E9B86E6C50901D3A297A9
569684EBC9564D985D5C31CB7668A9579315B7187BF8AD29F4EA181055D767DD
6C009E1BE9AEC10B33B06E2FF90C3146CF6AAAE451848EFFB38D7EC5EBCCBD02
F0D6620BA9C1690F55E7BF9441F8BA2EF80E0AD9DC4B0E563DCDDDCB91FA4E46
F08F48336E4A78A8F2FB8E6AEF61C492AEA71670C2777439B431F16F80FD> |-
/c <1C60D8A8C9B77FE2C1ECE687FEE45CEEE1941C010E93C63B8C573F394F28
F87418633C514CCC2198DEF989AEE899EB3419E0F649DA61421410AC8298685D
1788564C52B0DD9ADFF7EE28F21A00595C47702906BD1ECBEE6E7398AE4D9D57
F6C1CF69> |-
/e <1C60D8A8C9B77FE24404D6FC75C46E8B158C7975D79013EBB5DCD53440E2
1332CFC4ECC341E7AFADF9585DB658612EC8ED47CB15CBF662FC73FBEE0045FF
CB1EC723F1B412304D1100168E2128E2060163C1E9CBFAF33B361B5A6E493F9D
F06D41DD478FF2FA297D0668847F9C36D5F5C238CA> |-
/g <1C60D8A8C9B7A73DB58EABCA6C08DB76FCF627F458D619457FE59009F5C5
7A6D91A26698D6E05350D75FA7D83412DFF935A62992AB160439980755ABF079
64EA41DFACF0F1777C2705F19AFE8B711AA78A58372DAC819549D74ABCC09508
E3C7EDCD53C31841158CB80EFFE364E0363E34AD926809ADB48153F142AF84FF
AB215A174E74487C6C073ECC39D97F830D5AB027EE61E89EA30193D4CD1FCE31
F42CB61C87B14F51334009EC2F1D52809A6CB0E7CD59C89C9884BE7A7AE13C2B
C74A35343639FADB34527810D7B76CC61FA4E73C48AED7D294A4708DFEBADFD3
9E3E8D444A13B1ED902A19F8328D7C20130C829868C9B3D5D350F4FA29487D63
2F6464D4E8D57BF91F77514D01B0C0E164C5604C83940D2BB958A1F655404333
0C5E0D027112F31D73186F5FD3434CCFFD84B3D4D31ADC8C7E4EF9458294B5D8
53A0C4> |-
/i <1C60D8A8C9B854D088BD32B2B10E3AC6E8E0416B5A6DB49FBB92DFF38631
96E8853E18B30F35328C123FCDDDFF2F7F20ED8EC4283E3842E494C0DE55D1DE
31107E2C3EC8D8771946AA4EF6AFE782976E4C959491D40720B0416C4F1A> |-
/l <1C60D8A8C9B854D088BE0307DDE29E2DC8A57E14CCBDD0429C9D43FFDCE5
7C1979D6548F9F5B47CC0F21039A42929DCC89E93721E673DC46552B4818AF30> |-
/m <1C60D8A8C9B6B41CC7BD9B0C00CEE1B9CEE53E1607671C3DF447BC1CD7F1
3365CED0D574519E28EE99C39E2200A633C71A65AA5FF1932FB267253AE97AE6
32203708C9E11A54BB16C7E1E794AC2BC356AB1AA0FD9F57DCEE47DA902586B7
C3B686AE12927E4C96595BC807B9C159D07988B79F1E5E1A9AF1F46DC454B6E3
7AF598448BEE91007B9720B80A5269CAA2E28DC2515D440816663D82E54CC68C
E2C3348213058F925E827148463FDAA6667205B64AFA5982EE885A5A02B7BD9B
4AF1F3> |-
/n <1C60D8A8C9B7EF3257330F56CDBE5E6BC9CB1552505740B6EDF546B7A2F6
59060503EC81AF4588770359DD56CEA71F9E97B8F49CBFE5A626AC11107C5186
29BD014A0EC8DF9EE795013127D1DB5B5E326C3ACD80A996D3F693B6F491CB43
D819DE554F13601C467EA7F8B87FD0DFB2AD5E05307F9C245693D9ED28CF5113
30C2> |-
/o <1C60D8A8C9B7A73D33B29FF9A975322B3362DC44B144D77C192E90E503AC
52DEE198FC9B9A0BE397FE5C900774EEEF1E745C0E1E84056DE211BFA2C0DD56
BD867F1CEE2D1CAF0E57E72D77AF929D1611EB127B9A6B678E> |-
/p <1C60D8A8C9B7EF3227BDC1102CFD43DA9F65341B30D68CD39AF6E600EF01
4AA835480C26BF676168A53EBB7D56B269F6A7EB486F9F4F95FF9AD0A1FC1A4B
106056A41C9306AA32F30375360628415BA007987844DC162B3346089114825F
13EC10B35299ADA93F01C475E5C36DA7B3B69746C8A4C2BBE693339A851F9D2F
5DDC7EE4583282D70F5F77864F0084B587AC3D8AE0A8F5E5EEA248C9197EBE38
50D5EB> |-
/r <1C60D8A8C9B77FE2B2290770D44CC430BF6AF79602E44809DC88D3C54004
27379EAC0B160CEE8AF2E8F72C87C0147E60F09C5282EDD102E5F476C901E4E6
9904CE6DB98CB80ACEE6CA70E701242491CABC5579F7BFA84D8A4C65DBAAD9B6
EE9386B064FDD8A02CB5F67EF4989E940675A48693> |-
/s <1C60D8A8C9B7361F8B8A3FF704CC7186602400C953CD36DDA2DA94B1B49D
84728EDA8CC848BD15FDAB1C11AC84C505DDB523DBD19008CC7C37DB6968ECEF
0C3F718997FC09B394218C2100719243A3CC1C3F43C4B8DD48B65E598CBD8EE0
B577A1454C4635D4ABD43E7CD48FA541300BC13AA59ADEC96E26F9F7D7BE9740
C7A5246EB7B5FB84271FB594DDD1D9744E86055ECA5BDE1AE90FB31C4C1905B6
24E96E2389C20D075D237A4DDBD2AE493C9EF65C634DD4A435E44F5B51071857
559A4DAFFA0752> |-
/u <1C60D8A8C9B7EF3224398120184D189F48E56BD3AAF6CC95E63DC2646085
6E83BE9145CA2DE3816BE87606365440121F57060503E6A94A7832D6FEF757C6
DFF2155D75008553B6414C79DECED3CA8A186253FFE7FB91662E48102D2DB26F
3D9BB152D0C95CE188E33CEA> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DJABXM+Times-Bold /GISAAA+Times-Bold findfont ct_VMDictPut
/DJABXM+Times-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 4{/.notdef}rp /three /four 14{/.notdef}rp 
/C 2{/.notdef}rp /F /.notdef /H 4{/.notdef}rp /M 19{/.notdef}rp 
/a /.notdef /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /.notdef /u 138{/.notdef}rp]
DJABXM+Times-Bold nf
DJABXM+Times-Bold*1 [9.94079 0 0 -9.96 0 0 ]msf
-54.1965 303.633 mo
(Figure 4. )
[6.11992 2.75999 5.04 5.51999 4.44 4.44 3.47999 5.04 2.51999 0 ]xsh
DJABXL+Times-Roman*1 [9.94079 0 0 -9.96 0 0 ]msf
-11.3565 303.633 mo
(Relative translation vectors between chain A of 1FJ)
[6.60007 4.43999 2.76 4.43999 2.75999 2.88 4.91998 4.44 3.47999 2.76001 3.35992 4.43999 
5.03999 3.84007 2.75999 4.44 2.75999 2.75999 5.03998 5.03997 3.48001 4.91999 4.43999 4.44 
2.75999 5.03999 3.35992 3.84007 3.48 5.03999 4.43996 2.87999 7.08002 4.44 4.55998 4.92001 
3.48001 4.44 4.91998 4.56 2.76001 4.92001 3.60001 7.19997 3.48001 5.03998 3.23993 3.60001 
5.04001 5.51999 0 ]xsh
202.483 303.633 mo
(G and chain A of 4QS0, colored by position in the )
[7.19997 3.48001 4.44 4.92001 5.04001 3.47998 4.43997 4.92 4.44 2.88 4.91998 3.59999 
7.07999 3.48001 5.16 3.23993 3.48001 5.04001 7.20001 5.51996 5.04004 2.51999 3.60001 4.44 
5.03995 2.76001 5.04001 3.35992 4.44 5.04001 3.48001 5.04001 4.80002 3.48001 5.03998 5.04004 
3.84009 2.76001 2.76004 2.76004 5.03998 4.92001 3.47998 2.88 4.92004 3.47998 2.88 4.92004 
4.56 0 ]xsh
-54.1967 326.673 mo
(sequence \(from1 to 1507\). Nucleotides in the head o)
[3.84008 4.44 5.04 4.92 4.44 4.92 4.44 4.44 2.39999 3.35993 3.23993 3.35992 
5.15999 7.55999 5.03999 2.40001 2.75998 5.03999 2.40001 5.03998 5.03999 5.03999 4.91998 3.35992 
2.52 2.39999 7.20001 4.91999 4.44 2.75998 4.43999 5.03998 2.76001 2.75998 5.03998 4.43999 
3.84009 2.39999 2.76001 4.91998 2.40002 2.75998 4.92001 4.44 2.39999 4.92 4.44 4.44 
5.03998 2.40002 0 ]xsh
154.244 326.673 mo
(ccur between positions 910 to 1380, and these are c)
[4.44 4.44 4.91997 3.35995 2.39999 5.04001 4.44 2.63998 7.07999 4.44 4.56 4.92 
2.39999 5.04001 5.04001 3.84006 2.76001 2.76001 2.75998 5.04001 4.92 3.84006 2.39999 5.04001 
5.04002 5.04001 2.39999 2.76001 5.03998 2.28003 5.04001 5.04001 4.92001 5.04001 2.40002 2.39996 
4.31998 4.92001 5.03998 2.39999 2.76001 4.91998 4.44 3.84009 4.44 2.39999 4.43997 3.35995 
4.43997 2.40002 0 ]xsh
358.723 326.673 mo
(olored yellow )
[5.04001 2.76001 5.04001 3.35992 4.44 4.92001 2.39999 4.79999 4.44006 2.76001 2.76001 5.16003 
7.19995 0 ]xsh
-54.1967 349.593 mo
(to orange in the figure. Their relative translation)
[2.75999 5.04 2.16 5.04 3.35993 4.44 4.92 4.92 4.44 2.16 2.75999 4.92 
2.16 2.88 4.91999 4.44 2.16 3.23993 2.87999 4.91999 4.91998 3.35992 4.44 2.52 
2.16002 6.23991 4.91999 4.43999 2.75999 3.35992 2.16 3.35992 4.43999 2.75999 4.43998 2.75999 
2.76001 4.91998 4.44 2.16 2.75999 3.35992 4.44 5.03999 3.84007 2.75999 4.44003 2.76001 
2.75999 5.16 0 ]xsh
135.883 349.593 mo
( vectors clearly stand apart from the others, on ei)
[2.16 4.92001 4.44 4.43997 2.76001 5.04001 3.35992 3.84004 2.16 4.44 2.76001 4.43997 
4.56 3.35992 2.88 4.79999 2.16 3.84006 2.75999 4.56 4.91998 5.04004 2.16 4.43997 
5.04004 4.44 3.35992 2.75996 2.16 3.23993 3.35992 5.04001 7.56001 2.15997 2.88 4.92001 
4.44 2.16 5.04001 2.75998 4.92004 4.44 3.35992 3.84003 2.64001 2.16003 5.03995 4.92001 
2.16 4.44 0 ]xsh
328.123 349.593 mo
(ther side of the vector )
[2.76001 4.91998 4.44 3.35992 2.16 3.84006 2.76001 5.04001 4.44 2.16 5.04001 3.2399 
2.16 2.76001 4.92001 4.43997 2.28003 4.91998 4.44006 4.44 2.76001 5.04004 3.35986 0 
]xsh
-54.1967 372.633 mo
(\(0,0,0\) representing the global translation. )
[3.35993 5.04 2.51999 5.04 2.39999 5.04 3.35992 2.51999 3.35992 4.32001 5.04 3.35993 
4.44 3.84007 4.44 4.92 2.75998 2.76001 5.03998 4.91998 2.52002 2.87999 4.92 4.44 
2.51999 4.92 2.75999 5.03998 5.03997 4.44 2.88 2.51999 2.76001 3.35992 4.43999 4.92 
3.84007 2.75999 4.43998 2.75999 2.75999 5.15999 4.92001 2.52 0 ]xsh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
-54.1965 396.633 mo
( )sh
DJABXM+Times-Bold*1 [11.9771 0 0 -12 0 0 ]msf
-54.1965 422.913 mo
(3.3 Comparing Homologous Molecules)
[6 3 6 2.99999 8.64 6.12 9.83992 6.72 5.99999 5.28 3.35998 6.72 
6 3 9.36001 5.99998 9.83992 6 3.35999 6.11999 6 5.99999 6.72 4.68008 
3 11.28 6 3.35999 5.28 5.28001 6.71996 3.36002 5.28 0 ]xsh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
143.804 422.913 mo
( )sh
-18.1965 449.433 mo
(Our examples thus far have compared two different c)
[7.92 5.52 3.71992 3.24 4.92 5.52 4.91998 8.40001 5.52 3.11999 4.91998 4.3201 
3.12 3.11999 5.51999 5.52002 4.32008 3.11998 3.71992 4.8 3.71991 3.23999 5.52002 4.91998 
5.40002 4.91997 3.23999 4.91999 5.52 8.40001 5.51997 4.92001 3.71994 4.91998 5.52002 3.23999 
3.12 7.91998 5.51997 3.12 5.51999 3 3.71991 3.71991 4.80002 3.71994 4.92 5.39999 
3.12 3.23999 0 ]xsh
220.363 449.433 mo
(rystal structures of the same molecule form )
[3.71991 5.39996 4.3201 3.12 4.92 3.12 3.12 4.32007 3 3.71989 5.51999 4.80002 
3.12 5.51999 3.59991 4.92001 4.3201 3.23999 5.39999 3.71991 3.23999 3.12 5.39996 4.92001 
3.23999 4.32007 4.92001 8.40002 4.92001 3.23999 8.40002 5.51996 3.12006 4.91998 4.91998 5.51996 
3.12006 4.91995 3.11993 3.71997 5.52002 3.71991 8.28003 0 ]xsh
-54.1964 474.993 mo
(the same organism. In this section, we analyze two )
[3.11999 5.52 4.91999 4.08001 4.20008 4.92001 8.4 4.92 4.08 5.52 3.71992 5.4 
4.92 5.52 3.11999 4.32008 8.40001 2.75998 4.20001 3.4799 5.52 4.07998 3.12 5.52 
3.11998 4.2001 4.07999 4.32008 4.92 4.92001 2.99998 3.12 5.52 5.52 2.75999 4.07999 
7.92001 4.92001 3.95999 4.92 5.52002 4.79999 3.12 5.39999 4.80002 4.92001 4.07999 3.11998 
7.92004 5.51996 0 ]xsh
184.124 474.993 mo
(homologous 16S rRNAs from di)
[5.51999 5.51999 8.39998 5.51999 3.12 5.51999 5.39999 5.51999 5.51999 4.3201 4.07997 5.51999 
5.51999 6.11995 4.08002 3.71991 7.3201 7.92001 7.91998 4.3201 4.07999 3.71991 3.71991 5.39999 
8.39999 4.07999 5.51999 0 ]xsh
%ADOBeginSubsetFont: BUZAAA+TT15Et00 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BUZAAA+TT15Et00 def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 8 /g417 put
def
/FontBBox {-1475 -2463 2868 3117} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6472030318CD4127C796377DABFD8006FC8CD7AAF10
86964F20EE651118638C13AC909581621FA1FBAC552E6A16F7B4972529EBE8A8
0E782DD8AB05FDEEBDFC49979639D0FF68DCB6E7F422169AA9A2DB1DEF4F4B41
3623F5F563C56D612D674F82D41A71448843BD967EEE7B9B5E5851CDE54BA365
2F7BDEAFCDD43D27FDE0DE42D02A7D2B502434D5DE03C37B40825A9A0E097F17
F78368B6C52A18DA8C4E8168AC56AD15BCF0B69C17FC31C7A04A95D974197259
FB36AE72A5300CDD86C2372DFF50F7695D6D8E6898504FD1B1E5E543A89FFBE6
0F42D9B97A8DA995D7DC487489AC6073B6078ACF7C0324D45E66DA26D3EFF341
1DA7FD9C5DE33005> |-
/g417 <1C60D8A8C9B7DE87DE454F6A33113FEDFAD3B313A10F40C4E315A6128
215A2FFDEAAFF0C1847519F9DFD340BD1FA49C94BF436EA6CDEE72813986C689
8AD907512C63BCD3A301C1EF664E936A219BB9793D1993A35964CC3E54E9CB47
5CED2C34658C9634767872EE074FED5C74CBED7DA6436D47754389F9B81F5464
4E381E5EA3A1FC9DBBBF6F0F52A47CB084D372911552F1F10BB80D0C277B3296
89AB772B846826C968F32BD639EB04B375428526FE0A32C0D8E708B2EE17C699
9C9B2082F64ACE9F3EA349207FDC16BF02F082663673F26BF251D2561AD78153
6909F75B3B24929CE0129C41DD1B95E0572CEA98967F86C5971C1A3F2E6F2910
882DDA0C43F85BD77333B6BFAD31B87A6DDC91D70AD111C30BB24A699D01779E
C3BDD053BE62B9314581CF2CA8CC55F651D4882DE98E2BD2FD66D4031A520551
9B4E5582F9C5174B1A780B3080B6BD3EA8C453EC6814AB25A8CB497108173704
835D72EFC2B49E5EA6BB9CF2413471276AE9824FBEA203B8D61E24F25B7914DE
951A278BD41BF3E882D5C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DJABXN+TT15Et00 /BUZAAA+TT15Et00 findfont ct_VMDictPut
/DJABXN+TT15Et00*1 
[8{/.notdef}rp /g417 247{/.notdef}rp]
DJABXN+TT15Et00 nf
DJABXN+TT15Et00*1 [11.0189 0 0 -11.04 0 0 ]msf
333.043 474.993 mo
(\010)sh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
339.763 474.993 mo
(erent organisms. )
[4.92001 3.71991 4.92001 5.39999 3.12 4.08002 5.51999 3.71994 5.39999 4.91998 5.51996 3 
4.32007 8.40002 4.32007 2.75995 0 ]xsh
-54.1965 500.793 mo
(When we compare two molecules from di)
[10.44 5.52 4.92 5.4 3.72 7.91999 4.92 3.6 4.92 5.52 8.39999 5.52 
4.91998 3.71992 4.92 3.6 3.12 7.91999 5.52 3.71999 8.40001 5.51999 3.12 4.91999 
4.92 5.40001 3.12 4.91999 4.20009 3.59999 3.71992 3.71992 5.51998 8.40001 3.72 5.51996 
0 ]xsh
DJABXN+TT15Et00*1 [11.0189 0 0 -11.04 0 0 ]msf
135.763 500.793 mo
(\010)sh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
142.483 500.793 mo
(erent organisms, we do not know a priori which nucl)
[4.92001 3.59991 4.92001 5.51999 3 3.71999 5.39996 3.71991 5.39999 4.92001 5.51999 3.12 
4.3201 8.40001 4.32007 2.76001 3.71997 7.92001 4.92001 3.60001 5.51997 5.51999 3.72 5.39995 
5.52002 2.99997 3.72 5.39996 5.52002 5.51999 7.92001 3.71997 4.92001 3.60001 5.51996 3.71991 
3.12 5.39999 3.71991 3 3.72 7.92001 5.51999 2.99997 4.92004 5.51999 3.60001 5.51996 
5.52002 4.79999 0 ]xsh
382.844 500.793 mo
(eotides )
[4.91992 5.40002 3.12 3.12006 5.39996 4.79999 4.20007 0 ]xsh
-54.1966 526.353 mo
(correspond, so an alignment of the two structures i)
[4.92 5.51999 3.71992 3.59991 4.92 4.32008 5.51999 5.40001 5.52 5.51999 2.75999 2.64 
4.32008 5.52002 2.63998 4.79998 5.52 2.64 4.91998 3 3.12 5.40001 5.52 8.39999 
4.91999 5.64 3.11998 2.64 5.51998 3.71992 2.51999 3.12 5.52 4.91999 2.63998 3.12 
7.92001 5.51998 2.52 4.3201 2.99998 3.71988 5.52002 4.79999 3.12 5.52002 3.59991 4.92001 
4.3201 2.63998 0 ]xsh
167.804 526.353 mo
(s \005rst required. Structural alignments are obtained)
[4.3201 2.63998 6 3.71991 4.2001 3.12 2.63998 3.71991 4.92 5.39999 5.51999 3 
3.71991 4.92001 5.51999 2.75998 2.64001 5.99998 3.12 3.71991 5.39999 4.92 3.12 5.39996 
3.71991 4.80005 3.12 2.63995 4.92004 3 3.12 5.39996 5.51999 8.39996 4.92004 5.51996 
3.12 4.3201 2.63998 4.92004 3.71991 4.92001 2.63998 5.51999 5.39999 3.12 4.79999 3.12 
5.52002 4.91998 0 ]xsh
387.523 526.353 mo
( using )
[2.64001 5.39996 4.32007 3.12 5.52002 5.27997 0 ]xsh
-54.1966 551.673 mo
(R3D Align [11]. )
[7.32008 5.52 7.91999 2.76 7.92 3.11999 3.12 5.39999 5.52 2.76 3.71992 5.52 
5.52 3.59991 2.63998 0 ]xsh
-18.1967 576.993 mo
(He we analyze the conformational differences betwee)
[7.92 4.92 3.11999 7.92 4.92 3.11999 4.92 5.39999 4.92 3.11999 5.39999 4.8 
4.92 3.11999 3.12 5.52 4.8 3.11999 4.91998 5.52001 5.39999 3.71992 5.52 3.7199 
8.39999 4.92001 3.11999 3 5.51999 5.51999 4.8 3.12 3.12 5.39996 3.12 3.71991 
3.59995 4.92001 3.59991 4.92003 5.51996 4.92001 4.80002 4.3201 3.12 5.51999 4.80002 3.11996 
7.92003 4.92001 0 ]xsh
220.243 576.993 mo
(n the )
[5.39999 3.12 3.12 5.51999 4.79997 0 ]xsh
%ADOBeginSubsetFont: WRBBAA+Times-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /WRBBAA+Times-Italic def
/FontInfo 6 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 69 /E put
dup 84 /T put
dup 99 /c put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 111 /o put
dup 116 /t put
def
/UniqueID 5020937 def
/FontBBox {-75 -205 704 683} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 432 452 653 673] def
/StdHW [23] def
/StdVW [78] def
/StemSnapH [23 32] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/period <1C60D8A8C9B8707CF626D085C4F5FDD8EA64E83D4C38DCDFBD12094
0265AFEC9C4> |-
/E <1C60D8A8C9B7D8BE6A73E65054057265D9D79F3AF6272CCFA77BFD5CEAD1
A8CD650A804080FD969744A4C406DBB808C498BCB203D3C78900A381FA76FAFF
904144F8725F7746D5006037BA1E91D03219EAA897ED082A7EF537C8EAF77A7D
FFF7A89BBC000F37C4123E57574F6F4EE4626349A98968BA3C47B1544D5E15C9
6289F6D8EEB8B870DA731816B4C248EA04C19AACCA8976885764862D086AB697
7D53E6A9F40AC325C9B301E856B0D099B61C3A20A935257B81C6FB56F266E5C4
822531F2> |-
/T <1C60D8A8C9B7EF32570E39C30A95730B23F8BB1CFA099C8976A51372652B
D9ADF5A19A1DCDFD57242A761F26FCA5D880303F4B5EED0D48D6BB8AA9F30EFC
24D1B3C7611140542659D76CCA6FE3F1943E0AC54C3940E236EACACBADA98A5A
17E645A24975BAC13D1CFC066B9CB1ADA75F514F2B03C3AF65A4D0> |-
/c <1C60D8A8C9B77FE2B98067ECA4D192682BFDB9F331E96A65A96B392B2129
DB7935A0FA72134F9EA79F4E3154941B5BAE5C10FA5ADBDBA0D76C9184DAF8F5
60F6350E9D11B987A626E6785F16A340E44BEB66290D758E1B5D6B36DEC6C560
BA1112C9C0A6726D7ED4FD03DB9AAA> |-
/h <1C60D8A8C9B7A73DC573E0F3D9D7E9D5476D86A6C55FD12B7252E43F0490
24C9AC10F316AB01C0C609AEC1C4B60914357608B6F501DC4462BFB2D75A7F25
A82233C056F6FA94F3A6AF817741A5B23D2FFF76A0873A7A418D3998A133A9AE
BD32C94EC2B5B62D5C14D6FE8C6135C3F80FBBC7908253E3691BAAD11C1D9B9B
6E811D8D02349C7C21FB5FBCFDB74D424C09C49B6B6753BCC226F924365AA1BD
0A2B7C98A847AA59EA5750> |-
/i <1C60D8A8C9B854D0FB606664C7B7DE9A51FECF400AD33C33EBACB53A5B63
7293FF05C9A769A4750507EBC2869EBBEF22E040A7AA8F9CEFCB55D75E523761
04F728641D5098958E8A51CCFBC4258C196259B3634C4F000F8D1C13E7362148
55D716BEDB81172022AA387C754ECB8836277326517FA4C0F9A39E55110ECB85
4B09DC06B7667ECC764DC058> |-
/l <1C60D8A8C9B854D0FA1E5B7AC2A01B061D5AED78EA8B90DFE5269D14FEC2
2C985DD11F965C8E6F97501E8F13B565BDCE7FD2D5C169115A4F9AABF1474ED2
DCE7D0B1787576124252E092438E3EF7F21C662C0144BA04FA92D4C267F83FF7
D0142FEB169EED6A92642A2B239E> |-
/o <1C60D8A8C9B7A73DCEB4B8D8F0C1B91E5FCECE20C383B5A3A04C5E300C44
73F1758AD6EBD68AF3342250ECA77E8264601968E8BB73C8BCE96E285325E4E5
F9A5427A9867F5E01A213534416D8FA7BD45D53E120FBAFC16324C55CE0B8ECC
A30F4FDCBBCADFF556EA> |-
/t <1C60D8A8C9B854D0FBF88F22FDF4CF39F38CAD0835C8F6467E1ED7691525
23E60B02266494F4FD3CA5B5FBD5FE7FA11F6B1DA97E951270920A39949CF6B0
FB69413FC94A254DA6DC428B910E26AB6B58D2194C13D09E7B2DCB05D7B3EC32
D587E4F5EE6255CDA49EBA6A454C584B8E64B3F96A51881568C60E561C7A> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/DJABXO+Times-Italic /WRBBAA+Times-Italic findfont ct_VMDictPut
/DJABXO+Times-Italic*1 
[46{/.notdef}rp /period 22{/.notdef}rp /E 14{/.notdef}rp /T 14{/.notdef}rp /c 
4{/.notdef}rp /h /i 2{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp 
/t 139{/.notdef}rp]
DJABXO+Times-Italic nf
DJABXO+Times-Italic*1 [11.0189 0 0 -11.04 0 0 ]msf
245.323 576.993 mo
(T.th)
[6.12 2.75998 3.11998 0 ]xsh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
262.843 576.993 mo
(. 1J5E [17] and )
[2.63998 3.12 5.39999 4.44009 5.51999 6.59991 3.12 3.71991 5.39999 5.51999 3.71991 2.99997 
4.92001 5.51999 5.51999 0 ]xsh
DJABXO+Times-Italic*1 [11.0189 0 0 -11.04 0 0 ]msf
334.123 576.993 mo
(E.coli)
[6.71991 2.63998 4.80002 5.51999 3.12 0 ]xsh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
359.923 576.993 mo
( 2AVY \005les )
[3.12 5.51999 7.92001 8.04001 7.91995 3.12 6 3.12 4.79999 4.32007 0 ]xsh
-54.1969 602.313 mo
([14]. A structural alignment was obtained using R3D)
[3.71991 5.52 5.51999 3.71992 2.75999 2.4 7.92 2.39999 4.32008 3 3.71991 5.52 
4.79999 3.12 5.52 3.59991 4.91998 3.11999 2.39999 4.8 3.11999 3.11999 5.40001 5.51999 
8.40001 4.91999 5.52 3.11998 2.40001 7.92001 4.92 4.32008 2.39999 5.51998 5.52 3.12 
4.92003 2.99998 5.52 4.92001 5.51999 2.39999 5.51999 4.2001 3.12 5.51996 5.39999 2.39999 
7.32007 5.52 0 ]xsh
177.043 602.313 mo
( Align. Because 1J5E and 2AVY are crystal structure)
[2.39999 8.04001 3.12 3.12 5.39999 5.51997 2.75998 2.39999 7.3201 4.92001 4.92001 4.92001 
5.51999 4.20006 4.92001 2.39999 5.39999 4.44008 5.51996 6.71994 2.39999 4.92001 5.51999 5.51999 
2.39999 5.51999 7.80002 8.03995 7.92001 2.39999 4.92001 3.71994 4.91998 2.40002 4.79999 3.71991 
5.40002 4.32007 3.12 4.79999 3.12 2.40002 4.32007 3 3.71997 5.51993 4.79999 3.12 
5.52002 3.71997 0 ]xsh
409.603 602.313 mo
(s )
[4.20007 0 ]xsh
-54.1969 627.753 mo
(of di)
[5.52 3.71992 2.87999 5.52 0 ]xsh
DJABXN+TT15Et00*1 [11.0189 0 0 -11.04 0 0 ]msf
-33.4369 627.753 mo
(\010)sh
DJABXL+Times-Roman*1 [11.0189 0 0 -11.04 0 0 ]msf
-26.8369 627.753 mo
(erent molecules, we expect there to be greater vari)
[4.92 3.59991 4.92 5.52 3.11999 2.87999 8.40001 5.51999 3.11999 4.92 4.91999 5.52 
2.99998 4.92001 4.32008 2.75999 2.88 7.92 4.91999 2.88 4.91998 5.52002 5.51998 4.92001 
4.79999 3.12 2.87998 3.11998 5.52 4.79999 3.71992 4.92 2.88002 3.12 5.51999 2.87996 
5.52002 4.91998 2.88 5.39999 3.71991 4.92001 4.80005 3.11998 4.79999 3.71991 2.88 5.52002 
4.91998 3.71994 0 ]xsh
196.123 627.753 mo
(ability in the translation and rotation vectors tha)
[4.92001 5.51997 3 3.12 3 3.12 5.39996 2.88 3.12 5.51999 2.88 3.11998 
5.51996 4.92004 2.87997 2.99998 3.71994 4.91998 5.51999 4.2001 3.12 4.80002 3.12 3.12 
5.39996 5.51999 2.88 4.92001 5.51996 5.51999 2.87997 3.71994 5.51999 3 4.91998 3 
3.12 5.52002 5.51996 2.88 5.39999 4.91998 4.91998 3.12003 5.39999 3.71991 4.32007 2.88 
3.12 5.40002 0 ]xsh
408.403 627.753 mo
(n )
[5.39996 0 ]xsh
gsave
-.315933 202.833 mo
-.315933 1.83307 li
358.844 1.83307 li
358.844 202.833 li
cp
clp
-31.5279 202.845 mo
388.856 202.845 li
388.856 -20.019 li
-31.5279 -20.019 li
cp
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 126.196 280.668 ]ct
[420.384 0 0 222.864 -157.724 77.8231 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 560 
/H 297 
/M[560 0 0 -297 0 297 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&OT>6mq#Kj`!5J.+!5Iau"2=g9^]"39
^V9c`^Wul[^\RrZ!!'e4!;jP/!!'e4!<'[q!!'e/!!'e3!<'\1!;sV2!<'[g!!'dp!<9gq!!'e4!;jP/
!!'e4!<0_5^Q\`A!;`h\!!'.n!!'.c!!',&!!'/#!!KF+!3NBL!!'.F!!'/"!;iku!;ultXo/7uXlfZa
XnVkrXo&1tXo&1sXo8>!Xk`sWXn)P`!<91_!!'/"!;inr!!'/"!<'%@!1*]^X7H>a!!'(l!!'(a!!B8%
!3?)!"KSR'X/jPH!3>_lf`2#Qr;c_qqu?_tr;cesk5YL_p](;pquH\rquHYqrW)qu!3=oU!3>/\s/Y5]
!3?%uqlBVp!3?%urN#hrJcOd1qW?r@!9WnR!9WMG"6KR`k5G>`k2l[+k4J`/!!)0*!!)0[!;kpV!!)0[
!<)'S!:^$hk4eoVk555Xk555Wk5GAZk1p";k2ZOBk5,/E!!)0[!;kpV!!)0[!<)&b!36)"^Z5@p^\@d/
^Z>Fq^\e'6^An8Kbl@aYoDem+lN$GTs1eL4!5J7.!5JL5!5JI4!5I^t!5J=0s1eL4!5JI4!5JL5!5JF3
!l"`Mr;Zi4li?VW!5IUq!5IRps1eL4!5J7.!5JL5!5JI4!5IXrJcPKE!3P;^!3Q"r!3P>_!3Q/!"0DP'
XkWpI!!'.n!!'.U!<92"!!'.q!!'/#!!'/"!!'.b!!'.u!<3'!Xo/5"Xo/5"Xo8;#Xo&/#XT5L%!!'.X
!!'._!!'.^!<92"!!'.q!!'/#!!'/"!!'-j!5\^9X5j6\X7uYpX6K]_!!'(t!!B8%!3=?E!3>_l!3=iS
s/Z(u!3>ho!3?)!!3?%u!3>;`!3>nqs/Z(u!3?%u!3?)!!3?"t!il=%r;Zhuh>dPVq#Kd^!3>/\s/Z(u
!3>ho!3?)!!3?%u!3=EGNW9(Ap&OO]!9X%V!9WAC!9X1Z"6KR`k03l+k5#)T!!)09!<;3[!!)0U!!)0\
!!)0[!!)0F!!)0W!<;3[!!)0[!!)0\!!)0Z!!;9_k5>8[k2$(<k2cRCk2ZOBk5>8[k4\iUk5G>\k5G>]
!9TOHa8c4Tj8]1pp](</jT#:qqu?i6!!'dY!!'e+!!'dh!!9n8^\n-4^\\$0!!Bt9!5JC2!5Iau!5J=0
s1eO5!5JC2"2=g9^\e'5^Au%I!!'dj!!'e*!:p0j^Z>Fs^Au%I!!'e.!!Bt9!5JC2!5HYVPQ1]cn,W+]
!3Q"r!3P>_!3Q/!"0DP'Xj$hGXn2SnXkWmXXT5L%!!'.q!!B>'!3Q+u!3PJc!3Q%ss/l8#!3Q+u"0DP'
Xo&/#XT5L&!!*)%h>dPXjT#:_jT#@a!3Q2"!3Ptq"0DP'Xnr(uXo8<P!8dbVX5j6\X7uYpX5s<]X8Dr"
WrN.#o)RMF!3>_l!3=lT!il=%r;ZhupAb;r!!'(s!!'(q!:^$hX8)bqX8W)!X8;l!WrN.#qu?f!!3?%u
!3=rV!3>2]!3>nqm/R3g!3?%u!3>ho"02D%X8;ksX0Vf,!!)0B!!)0V!!)0C!!)0Z!!D?`!9VN+!9WnR
!9WSInc/aR!9X4[!9X"U"6KR`k5,,Yk32jGk4o#Wk5G>\k5,,\jo>DDqu?f\!9X4[!9WVJo)JdQjT#;C
jT#AE!9X4[!9X"U"6KR`k5,,Yk2u_r!;6Bm^\n-8^Au"K!<0b4!!Bt9^VB^IrkJF4!5JL5rkJI5rkAL7
!5JL5rkJF4"2=iN^\Ij7^V9c`!!'b6qnN.2rkJF4"MXrO!!*#5rW!&8!5H;I!<0b3!<9e6^\n03^\Rp4
^Au$`r;ci3rrE&5!<Bn6!!'e5!!9n8!<0b3!<0b4!!Bt9^VBOD!5JI4!5J7."2=g9^[hI)^]"38^Au$`
r;Zr7^Au%G!!<59!5JL5!5JC2"2=g9^\Rp1^\n-4^\7^1^Au$`rVur5rW!;?!!'b6^V9aK^VBaJ"2=iN
^\n03^]"39^Au"K!<0b1!<0_:!5ANK!!*#5rW!2<!5H8K!5H;D!!'e4!!'e.!!Bt9!5Fd!_>jS<r;Zu&
!3H5$riQ/""0DR*Xo/8!Xo8;#Xo8>"XoAD#XTAJ&Xo8>"Xo8;&XT5K*qZ$p&!3N@'XT/@'!;inu!<0,"
!!KD(XT/A#Xo8;&XT5K*r;ci!r;ci!r;ci!q>^W"!3NC%!<0,#!<0)$!3Q5#!3Q5#!j)G&riQ,!riQ/"
"0DR*XnVkrXo/5"XnMetXT/@'o)SclrW!&&!3NC%!!B@*!3Q(t!j)I)rVur#qZ$`#!!'.t!!'/"!!'.q
!!B>'Xf_R&!3Q5#$EX:.XT5K*!!'.'rW!&&!3NC%!!'/$Xo8;'XT5I'!<0+t!<0)(!3H7'!!*##rW!2*
!3N@'!3NBu!!'/"!!'.q!!B>'!3O?CNW9'[r;[&&!36)"X/c6$rW!&$!3<1!!<0%u!!')!!<0&!!<0##
!!')!!<0%u!!B8%X/l$r#HOm*WrN.#!;ihs!<0%u!!K>&WrN/!X8W)$WrT3$r;chtr;chtr;chtq>^Vu
!3<1!!<0&!!<0#"!3?)!!3?)!!il;$ri>ttri?"u"02F&X7uYpX8N"uX7lSrWrN.#o)ScjrW!&$!3<1!
!!B:&!3>qr!il=%rVur!qZ$`!!!'(t!!3-#X8N"uX7lSrWrT3$rVur!rW!;+!!'&"X/c4#X/l4""02F&
X8N%tX8W)%WrT1#!<0%r!<0#&!36+#!!*#!rW!2(!3<.#!3<0q!!'(u!!'(o!!B8%!3?%uP5rZ(!9X4[
"Qf^H!!*#\rW!&_!9WGB!<2-[!!)0\!<2-\!<2*^!!)0\!<2-[!!D?`k2uI>"6S_GjoYS`joG;@rrE&\
rW!)`!9O7]roX1["6KUGk5>;Zk5>;Zk5>;Zk5#&[joFQ+r;ciZrrE&\!<D9]!!)0\!!;9_!<2-Z!<2-[
!!D?`k2uF=!9X4[!9X.Yr;Zr^!!)0Q!<2-[!!D?`k2uUB"6S_Gk5#&ZjoFQC!!)0Y!!D?`!9X+X!9X4[
!9X"U"6KUGk5G>\k5G>fjo>DD!9WDD!9WGC!!D?`k2uUBroX1[!9O@`jo>D\k5,/XjokbI!9O7]roX1[
#Nc$Kjo>DDk4eoVk5>8[k4\iXjo>DD_Z5o$!5JI4"M_\O!5JL5"MXp:^V9pP!5AL6^]"3;^An8K!!'e5
!!Bt9!5JL5"2=g9^]"3<^An8K^An8KqZ%2B!!'dK!!'b6!5AL6^An8KrW!2<!!'dK!!'e5!"-I@!5H8K
!5AL6^]"38^An8KrW!&8!!'e5!!'e2!!g9R!!'b6!5JL5!l"^8"2=g9^]"35^]"37^Au%J!!Bt9!5JL5
#JU6=^V9aK^\Ij0^\n01^\\!5^An8KoDem+rW!GC!!'dK!!'b6!5AL6^VBUF!l"`MrVur5qZ$W2rW)r4
r;Zi4rVus!^\7^5^V9aK^An8KrW!\J!!'dK!!'dK!!'b6!5H8K!5AL6^]"3<^An8K^An8KrVur5qZ$l9
!!'dK!!'e5!"6OA!5H8K!5H8K!5J=0!5JI4r4i+/"2=g9^\7_[!8dbVXo/5&XfVR'Xo8;-XT/@'XT/@'
!!'/#!!]P*!3H5$Xo8;&XT/@'rW!&&!!'/#!!fV+!3N@'!3Q+u&?Pp4XfVR'XT/@'!!',$!3Q5##H[t+
XfVR'Xo8;-XT/@'XT/@'!!'/#!!B>'!3Q5#"0DP'Xo8;#Xnr)'XfVR'XT/@'rW!/)!!',$!3Q5#!3Q5#
!j)I)rW!&&!!'/#!!fV+!3N@'!3Q%s!3Q2"r2ohr"0DP'Xn2SoXT/n4!3H5$XfVR'XT/@'!!'.'q>^T!
!3Q5#!3Q+u!3Q5#riQ,!!3Q2"!3Ptq#Hb*.!3H5$Xo8;8XT/@'XT/@'XT/@'!!'.'!!',$!3Q5##H[t+
XfVR'Xo8;#Xnr)(XT/@'XT/@'!"Ao.XT/@'XT/@'XT/@'q#CDsr;cbtqZ$`#!!'.&!36)"X8N#$X/c4#
X8W)+WrN.#WrN.#!!')!!!]J(!36)"X8W)$WrN.#rW!&$!!')!!!fP)!3<.#!3>ts&?>d2X/c4#WrN.#
!!'&"!3?)!#HIh)X/c4#X8W)+WrN.#WrN.#!!')!!!B8%!3?)!"02D%X8W)!X8;l%X/c4#WrN.#rW!/'
!!'&"!3?)!!3?)!!il=%rW!,&!!'&"!!iS*!!'(#!!'(q!!'(u!;rnp!!B8%!3>_l!3?)!%]]R0X/c4#
WrN.#!!'(#q>^St!3?)!!3>ts!3?)!ri>tt!3?%u!3>ho#HOm*!36)"X8W)6WrN.#WrN.#WrN.#!!'(#
!!'&"!3?)!#HIh)X/c4#X8W)!X8;l%WrN.#WrN.#rW!>,!!'(#!!'(#!!'(q!!'(u!;rnp!!B8%!3>#X
JcPKE!9X4["QnhH!9X7\$K_<gk2lXDjo>DDrW!/b!!)-]!9X7\"6KR`k5G>_jo>DDrW!2c!!)0D!!)0Y
!"e8m!9WDD!9O7]jo>DD!!)0\!!hWd!9WDD!9X7\$K_<gk2lXDjo>DDrW!,a!!)-]!!E;a!!)0\!!)0Y
!!hZK!!)-]!9X7\#3Gmcjo>DDrVur\rW!#^!9X7\"6KR`k5G>cjo>DDjo>DDq#CEWr;ccXqZ$`\!!)0R
!!)0\!"S,k!9WDD!9O7]jo>DDk5,,\!9O:DrVur\qZ$WYrW)r[r;Zi[r;Zi[pAbH\jo>DD!!)0\!#=Vr
!9WDD!9WDD!9O7]k2lXDjo>DDrW!2c!!)0D!!)0\!!)0Y!!hWd!9WDD!9X7\$g%Ehk2lXDk2lXDk4nuW
k5>;Xk5,,\jo>DDPlSZ$!5JI4!5J@1"2=g9^]"38^An8KqZ$W2qZ$`5!!'e5!!Bt9!5JL5"2=g9^]"35
^\e'4!5JL5%)2cB^An8K!!'b6!5JL5"2=g9^]"35^]"38^An8KrW!&8!!'e2!!'e5!!Bt9!5J7.!5JL5
"2=g9^]"38^An8KrW!8>!5ANK!5AL6^]"38^An8KrW!&8!!'e5!!'e0!!'e4!!'e.!!Bt9!5JL5rP/(,
"2=g9^]"38^An8KrVur5qZ$`5!!'e5!!'e2!!'e2!!L'O!!'e4!!'e.!!'e5!!Bt9!5JL5"2=g9^]"35
^]"38^An8KrW!)9!!'b6"TSP;!!'e5!!'e.!!Bt9!5JL5!5JL5"2=g9^]"35^]"35^\Ij0^\n-4^\7^1
^An8KrW)o3ciB(+!3Q2"!3Q+u"9>P(!3Q5#"0DP'Xnr(uXnr)#XT/@'rW!&&!!'/#!!B>'!3Q5#!3Q+u
!3Q5#%'9L0XT/@'!!',$!3Q5#"0DP'Xo8;#Xo8;&XT/@'rW!&&!!'.u!!'/#!!B>'!3Ptq!3Q5#"0DP'
Xo8;&XT/@'rW!8,!3H7'!3H5$Xo8;&XT/@'rW!&&!!'/#!!'.s!!'/"!!'.q!!B>'!3Q5#rN5eo"0DP'
Xo8;&XT/@'rVur#qZ$`#!!'/#!!'.u!!'.u!<9/&!!'/"!!'.q!!'/#!!B>'!3Q5#"0DP'Xo8;#Xo8;&
XT/@'rW!&&!!'/#!!B>'!3Q5#!3Ptq"0DP'Xo8;#Xo8;&XT/@'rVur#rVur#q#CDsr;Zi"pAb;t!!'/#
!!'/#Xd/t.!!'(u!!'(r!!B8%!3?)!"02D%X8;ksX8;l!WrN.#rW!&$!!')!!!B8%!3?)!!3>ts!3?)!
!36J-!36)"WrN.#!!')!!!B8%!3?)!!3?)!"02D%X8W)$WrN.#qZ$VsrW!&$!!'(o!!')!!!B8%!3?)!
"02D%X8W)*WrT1#WrT1#!3?)!"02D%X8W)$WrN.#rVur!q#CDqr;ZhuqZ-Qp"02D%X8W+tX7lSrWrN.#
rW!&$!!')!!!'(s!!B8%!3?)!!3>ts!3>ts"KSR'!3?%u!3>ho!3?)!"02D%X8W)$WrN.#rVur!rW!&$
!!')!!!B8%!3?)!"02D%X8W)!X7lSrWrN.#rVur!rW!&$!!')!!!')!!!'(q!!'(u!!'(o!!B8%!3?)!
rN"'@PQ1^Gr;Zi[q>^Z\!!)-]"TSPb!!)0Y!!)0Y!!D?`!9X7\"6KR`k5G>_jo>DDrVur\qZ$WYrW!Ah
!!)-]!9O7]jo>DDrW!&_!!)0\!!)0\!!D?`!9X7\"6KR`k5,,Yk5G>_jo>DDpAb3UrW!&_!!)0\!!;9_
!!)0\!"%cfjoFNDjo>DDrW!&_!!)0\!!D?`!9X7\!9X(W!9X4[!9X"U"6KR`k5GAZk4\iXjo>DDrW!&_
!!)0\!!)0Y!!D?`!9X7\!9X.Y!9X.Y"QnhH!9X7\!<D9V!!)0\!!D?`!9X7\"6KR`k5G>\k5G>_jo>DD
rW!&_!!)0\!!D?`!9X7\!9X"U"6KR`k5G>\k5G>_jo>DDrVur\rVur\q#CEWr;Zi[pAb<X!!)0\!<)'Z
!.k4.!!'e4!!'e4!<'Y6!!'e5!!'e5!<0b4!!'e5!<'Y6!!'e5!!Bt9!5JL5"2=g9^]"35^\\!2^]"3@
^An8K!!'b6!5AL6r4`:5!5JL5!5JKI!WW58rW!&8!!'e2!;sV2!<0b0!!'e5!!9n8!;sS5!!'e5!!p=>
^Au"K^An93^]+<3^B+B8^]"35^\Ij0^\n-4^\7^1^An8KqZ$W2q>^N1rkAL7!5JL5"2=g9^]"35^\\!5
^An8KrVur5qZ$W2q#CK2!5JI4!5J7.!5JL5"2=g9^]"38^An8KrVur5rW!&8!!'e5!!9n8!;sS5!!'e4
!<0b0!!Bt9!5JL5!P\U<!!'b6!5JL5!5JL5!5J=0!5JI4!5J7."2=g9^\\!2^U!p@!!'/"!!'/"!<'#$
!!'/#!!'/#!<0,"!!'/#!<'#$!!'/#!!B>'!3Q5#"0DP'Xo8;#Xnr(uXo8;.XT/@'!!',$!3H5$r2g##
!3Q5#r2g##!3Q5#"0DP'Xnr+rXo8>"Xni"tXo8;%XT/A!XTAJ&Xo8;+XT5I'XT5I'!;ru!!<0)'XfVR'
Xo8;#Xn_qsXo/5"XnMetXT/@'qZ$Vuq>gJr!WW5&rW!&&!!'/#!!'.u!!B>'!3Q5#!3Q+u!3Q%s!j)I)
r;Zi"pAb2qrW!&&!!'/#!!B>'!3Q5#!3Q5#"0DP'Xo8;%XT/A!XTAJ&Xo/8!Xni#"XT/@'rVur#rW!&&
!!'/#!!'/#!!'.s!!'/"!!'.q!!B>'!3Q+u!3PDaJcPKE!3?%u!3?%urMou"!3?)!!3?)!ri?"u!3?)!
rMou"!3?)!"02D%X8W)$WrN.#rVur!qZ$VsrW!>,!!'&"!36)"WrN.tWr`8$X8W+sWr`8$X8W)$WrN.#
qZ-Vrs/Z,!ri>kq!3?)!!il;$r2Tl!!3?)!#cds+!36+#!!)qtrrDtt!WW5$rVur!q#CDqr;ZhupAb;r
!!'(s!!'(r!<&r"!!')!!!B8%!3?)!!3>ts"02D%X8W)!X8;ksX8)_sWrT4!!!'(o!!')!!!B8%!3?)!
"02D%X8W)!X8W)$WrN.#rW!##!!)qt!WW5$r;chtq>^Vu!!')!!!')!!!B8%!3?)!!3?)!!3>nq!3?%u
!3>ho"02D%X8;ksX.01,!!)0[!!)0[!<)$]!!)0\!!)0\!<2-[!!)0\!<)$]!!)0\!!D?`!9X7\"6KR`
k5G>\k552[!9X7\$g%Ehjo>DD!!)-]!;ts\!!)0\!;ts\!!)0\!!D?`!9X.Yr9!tYroX%W!9X7\!p0I_
r8n%\!9X7\#j)-L!9O:D!!)rZrrDuZ!WW5_rVur\q#CEWr;Zi[pAb<X!!)0Y!!)0X!<)$]!!)0\!!D?`
!9X7\!9X.Y"6KR`k5G>\k5,,Yk4nuYjoFQB!!)0U!!)0\!!D?`!9X7\"6KR`k5G>\k5G>_jo>DDrW!)`
!!)0DroO7^!9X4[roX%W"6KR`k5G>\k5G>_jo>DDrVur\rVur\q#CEWr;Zi[pAb<X!!)0Y!!)0.!0.$Z
^\n-4^]"37^An6:!5AL6^]"35^\\!8^An8K!!'e5!!Bt9!5JL5"2=g9^]"38^An8KrVur5qZ$W2rW!AA
!!'b6!5AL6^An8KqZ$W2rVur5qZ$W2rW!&8!!'e2!!'e.!!'e2!!'e5!!Bt9!5JC2!5JL5$,6JT!5ANK
!!'e2!!'e2!!'e5!!'e0!!'e4!!'e2!!'e5!!Bt9!5JC2!5JC2!5JL5"2=g9^]"38^An8KrVur5quHW/
!WW58rW!/;^Au"K!5JF3!l"`Mr;Zi4pAb3.rW!&8!!'e5!!Bt9!5JL5!5JL5"2=g9^]"38^An8KqZ$W2
q>^N1qZ$`5!!'e5!!'e5!!Bt9!5JL5!5JL5!5J=0!5JI4!5JC2!5JL5"2=g9^\n-6!!'d"!6>-?Xo/5"
Xo8;#Xo8;&XT/@'rVur#qZ$i&!!',$!3Q5#"0DP'Xo8;&XT/@'rW!&&!!'/#!!'.u!!'/#!!',/!!',$
!3H5$XT/@'qZ$VurVur#qZ$VurW!&&!!'.u!!'.q!!'.u!!'/#!!B>'!3Q+u!3Q5#$*=30!3H7'!!'.u
!!'.u!!'/#!!'.s!!'/"!!'.u!!'/#!!B>'!3Q+u!3Q+u!3Q5#"0DP'Xo8;&XT/@'rVur#quHVr!WW5&
rW!/)XT5I'!3Q/!!j)I)r;Zi"pAb2qrW!&&!!'/#!!B>'!3Q5#!3Q5#"0DP'Xo8;&XT/@'qZ$Vuq>^Mt
qZ$`#!!'/#!!'/#!!B>'!3Q5#!3Q5#!3Q%s!3Q2"!3Q+u!3Q5#"0DP'Xnr(uXi^X.!!'(u!!')!!!')!
!!K>&!36)$!!'(s!!]J(!36)"X8W)$WrN.#rW!&$!!')!!!B8%!3?)!!3>ts!3?)!%''@.WrN.#!!'&"
!3>ts!3?)!!3>ts!3?)!"02D%X8;ksX7lSoX8;ksX8W)$WrN.#qZ$VsrW!8*!36+#!36)"X8;ksX8;ks
X8W)!X8)_qX8N"uX8;ksX8W)$WrN.#qZ$VsqZ$VsrW!&$!!')!!!B8%!3?)!!3?"tql9bu!3?)!#-4d)
WrN.#qu?f!!3?)!!<B1p!!')!!!B8%!3?)!"02D%X8W)!X8W)$WrN.#rW!&$!!'(s!!'(r!!'(s!!B8%
!3?)!!3?)!"02D%X8W)!X8W)!X8)_qX8N"uX8;ksX8W)$WrN.#qZ$VsrW%NMhZ*Z=r;Zi[rVur\rW!&_
!!)0\!!)0Y!!_Qc!9O7]k5G>_jo>DDrW!&_!!)0\!!D?`!9X7\!9X.Y!9X7\%-@Nijo>DD!!)-]!9X.Y
!9X7\!9X.Y!9X7\"6KR`k5,,Yk4\iUk5,,Yk5G>_jo>DDqZ$WYrW!8e!9O:D!9O7]k5,,Yk5,,Yk5G>\
k4nuWk5>8[k5,,Yk5G>_jo>DDqZ$WYqZ$ZZ!!N?&jo>DDrW!&_!!)0\!!)0Z!;km[!!)0\!!_TJ!9O7]
k552\joFQB!!)0U!!)0\!!D?`!9X7\"6KR`k5G>\k5G>_jo>DDrW!&_!!)0Y!!)0X!!)0Y!!D?`!9X7\
!Tj@c!!)-]!9X7\!9X7\!9X(W!9X4[!9X.Y!9X7\"6KR`k5,,Yk-G&g!!'e4!!'e5!!g7=!5H8K!5JL5
"2=g9^]"3B^An8K!!'b6!5H8K!5JL5"2=g9^]"38^An8KrVur5qZ$W2rW!AA!!'b6!5AL6^An8KrW!&8
!!'e5!!'e5!!Bt9!5JL5"2=g9^]"38^An8KrW!&8!!'e5!!'e2!!'e5!!Bt9!5JL5"2=g9^\n-4^]"35
^]"35^]"3:^An8K!!!-%^An8KrVur5q#CE0r;Zi4qZ$W2rVur5rVur5r;Zi4q>^c8!!'dK!!'e5!!Bt9
!5JL5!5J:/!5JI4!5JI4!5JL5!5JF3!l"`Mr;Zi4pAb3.rW!&8!!'e5!!Bt9!5JL5!5JL5"2=g9^]"38
^An8KrW!&8!!'e5!!'e5!!'e2!!Bt9!5JL5!5JL5"2=g9^]"35^]"35^\Ij0^\n-4^\\!2^]"35^]"35
^\n-4^ZGNJ!;6BmXo/5"Xo8;*XT/@'XT/@'rW!&&!!'/#!"H%1!3H5$XT/@'XT/@'rW!&&!!'/#!!B>'
!3Q5#!3Q+u!3Q5#%'9L0XT/@'!!',$!3Q5#"0DP'Xo8;#Xo8;&XT/@'rW!&&!!'/#!!TJ)!3H5$"9>P(
!3Q5#!3Q+u!3Q5#"0DP'Xo8;&XT/@'r;Zi"rVur#rVur#rW!&&!!'/#!!B>'!3Q5#!3Q%s!3Q2"!3Q+u
!3Q5#!3Q5#!3Q2"!3Q(t#H[t+XfVR'Xo8;&XT/@'rVur#qZ-Tq!3Q2"!3Q2"!3Q5#!3Q/!!j)I)r;Zi"
pAb2qrW!&&!!'/#!!B>'!3Q5#!3Q5#"0DP'Xo8;&XT/@'rW!&&!!'/#!!'/#!!'.u!!B>'!3Q5#!3Q5#
"0DP'Xo8;#Xo8;#Xn_qsXo/5"Xnr(uXo8;#Xo8;#Xo/5"Xd]=-!!'(u!!')!!!fP)!3<.#!3?)!"02D%
X8W).WrN.#!!'&"!3<.#!3?)!"02D%X8W)$WrN.#rVur!qu?`tX8W)-WrN.#!!'&"!36)"X8W)$WrN.#
rVur!rW!&$!!')!!!B8%!3?)!"02D%X8W)$WrN.#rVur!qZ$VsrW!&$!!')!!!B8%!3?%u!3?)!!3?)!
!3?)!"02D%X8W)$WrN.#rVur!q#CDqr;ZhuqZ$VsrVur!rVur!r;Zhuq>^c$!!'(#!!')!!!B8%!3?)!
!3>kp!3?%u!3?%u!3?)!!3?"t!il=%r;ZhupAb2orW!&$!!')!!!B8%!3?)!!3?)!"02D%X8W)%WrN.#
!!N?&WrN.#rVur!rVur!qZ$`!!!')!!!')!!!B8%!3?)!!3?)!!3>nq!3?%u!3>ts!3?)!!3?)!!3?%u
!3=EGNW9(Ar;Zi[rW!#^!!!/ajo>DDrW!&_!!)0\!"J&j!9O7]jo>DDjo>DDrW!&_!!)0\!!D?`!9X7\
!9X.Y!9X7\%-@Nijo>DD!!)-]!9X7\"6KR`k5G>\k5G>_jo>DDrW!&_!!)0\!!D?`!9X7\"6KR`k5G>\
k5,,Yk5G>_jo>DDrW!&_!!)0[!!)0\!!)0\!!)0\!!D?`!9X7\"6KR`k5G>\k4nuWk5>8[k5,,Yk5G>\
k5G>\k5>8[k5#&_jo>DDjo>DDrW!&_!!)0\!!)0V!!)0[!!)0[!!)0\!!)0Z!!;9_k5>8[k4\iUk5G>_
jo>DDrW!&_!!)0\!!)0\!!D?`!9X7\"6KR`k5G>_jo>DDrVur\rVur\qZ$`\!!)0\!!)0\!!D?`!9X7\
!9X7\!9X(W!9X4[!9X.Y!9X7\!9X7\!9X7\!<D8I!6>-?^\n-4^\n-:^V9c`!!'e5!!'e5!<0b4!!'e5
!"-KU!5AL6^V9aK^]"64^]"35^]"35^\Rs/^Baf>^An8K!!'e5!<0b4!!'e4!<0b4!!'e5!!'e5!<0b3
!<0b3!<0b0!<'\2!<0b4!<9h5!!'e5!!'e4!<0b3!<0b4!!'e5!!'e0!!'e4!!'e2!!!#u^\e*1^\@d5
^V9c`!!'e5!!'e5!<'\-!!'e3!<'Y5!5JL5r4i42rP/:2!5JC2!5JL5!5JL5rP&C6!5JL5!5JL5!l"^8
rP/:2rkJF4!5JI4rkJ:0"2=g9^\n03^]"35^]"35^]"35^\Ij0^\n-4^\Rs0^\e*1^W6D>!!'/"!!'/"
!!fX.!3H5$XT/D&!3Q5#riQ/"!3Q5#$E^E1XT/@'XT/@'rW)r"rVur#rVur#q>gJr#QOk,!!',$!3Q5#
riQ/"!3Q2"riQ/"!3Q5#!3Q5#riQ,!riQ,!riQ"srN6"uriQ/"s/l8#!3Q5#!3Q2"riQ,!riQ/"!3Q5#
!3Q%s!3Q2"!3Q(triQ(urN5hp#-G!-XT/@'rVur#rW)o!p](;rquH\t!<B8$!;rtu!<0)#Xo/5"Xnr(u
Xo8;#Xo8>!XTAJ&Xo8;#Xo8;%XT/A"Xo/8!Xo8;#Xo/8!Xni#"XT/@'r;ci!rVur#rVur#rVur#q#CDs
r;Zi"q>gMsquH\tquD<KhZ*YWr;Zhur;[&&WrT1#!3?)!!3?)!ri?"u!3?)!$EL3-WrN.#WrN.#rW)qu
rVur!rVur!q>gJp#QOk*!!'&"!3?)!ri?"u!3?%uri?"u!3?)!!3?)!ri>ttri>ttri>kqrN#ksri?"u
s/Z,!!3?)!!3?%uri>ttri?"u!3?)!!3>nq!3?%u!3>qrri>qsrN#\n!36:(!36)"X8W)!X8W+tX7uYp
X8DtrWrW4$rW)ksrW)ntr;ZhuqZ$VsrVur!rW)nt!WW5$rVur!rW!##!!)tur;chtrVur!r;chtq>^Vu
!!'(u!!')"X8W)!X8W)!X8W)!X8)_qX8N"uX82hqX8DtrX0DZ*!!)0[!!)0[!!_TJ!9O7]k5G>\k5GA[
k5G>\k5G>bk2l[+!!)-`jo>DDrW)r[rVur\rVur\q>gKV#QOke!!)-]!9X7\roX1[!9X4[roX1[!9X7\
!9X7\roX.ZroX.ZroX%WrT=%YroX1[s5s:\!9X7\!9X4[roX.Zs5j=DrVur\rVur\q#CEWr;Zi[q>gNW
quH]Xp](N\joFND!9X7\!9X7\rT<kT!9X1ZrT4+\k5GAYk5GAZk5>8[k5,,Yk5G>\k5GA[joa`G!9X7\
!9X7\!p0I_rT=%YroX1[!9X4[roX%W"6KR`k5>;Zk5G>\k5G>\k5G>\k4nuWk5>8[k5#)Wk555Xk2cSp
!.k3&!8dbV^SLp^!.k3&!36)"Xk<]+!.k3&!.k4E!!''[!0[D7!.k3U!!)01!.k3&!.k3&!;lfs^PDlA
!.k3&!6>-?Xh4Xc!.k3&!0dH`X7-+@!.k3&!.k4.!!)/X!.k3&!.k3&!.k3&!.k3&!.k37!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!0[D7!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k37!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!0[D7!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3Q=`^[V;U!.k3&!.k4H!9L>l!.k3&!.k3X
!9L9I!.k3&!.k3&!<3&\k+D^+!.k3&!6Y?B^ZPRs^XN78!.k3&!1*ZcXmPTSmf9JH!.k3&!.k41!!'(_
r;`n3!.k3&!.k3R!!)0E!!)0O!.k3)!!9n8!.k3&!;QTp^ZPRs^UF2p!5AL6Xi19l!42_+Xlo-QXm5t=
!/ggWX8)aI!.k1P!!'(_r;`mk!.k4%!!)/a!.k3o!!)0E!!)02!.k3A!!'ds!.k3;!!'e$!;c`r^PMrB
!9aC_XdfBC!9*tYXlo-QXh=^d!42_+X3^iu!3Q;%X69E]X761A!.k1P!!)/8!.k4H!!)0E!!)/j!.k3&
!.k3X!!'ds!!'e"!.k3&!.k3&!!3-#Xlo-QXe5ZG!.k3&!6Y?BX69E]X4.-$!.k3&!1*Zck3W0G!!)/<
!.k42!!'d-!.k41!!'ds!!'dI!.k3S!!'.O!.k3R!!'.amf9K[!.k3&!;ZZqX,6n/!;QTpX69E]X1&(\
!4;e,k0F$Z!42_+k2u^Ek3E#!!.k3&!.k1P!!'ds!!'d,!.k3&!.k3o!!'.amf9K>!.k3&!.k3;!!'(e
rVQNnX,-h.!.k3&!9*tYk2u^Ek.LbH!4r42^[V:(^Y/[>!3Q;%^ZPRs^[V;U!/COSXo/7m!!'-^!.k4H
!!'.am/X8t!.k3e!!'(i!!'(L!.k3X!!'(_rW'"b!.k31!!)0U!;c`rk(s(i!!3-#k2u^Ek+D^+!.k3&
!6Y?B^ZPRs^XN78!.k3&!1*ZcXmPNQm/X8F!.k3&!.k41!!'(_rW'"4!.k3&!.k3R!!)0E!!)0O!.k3&
!.k3&!;QTp^ZPRs^UF2p!.k3&!42_+Xlo'OXm5t=!.k3&!.k1P!!'(_rW'!l!.k3&!.k3o!!)0E!!)02
!.k32!!'e-!.k3;!!'e$!;c`r^PMrB!8.>PXfDGR!9*tYXlo'OXh=^d!2TYqX5<o/!3Q;%X69H^X761A
!.k4?!!)/G!.k4H!!)0E!!)/j!.k3&!.k3X!!'ds!!'e"!.k3&!.k3&!!3-#Xlo'OXe5ZG!.k3&!6Y?B
X69H^X4.-$!.k3&!1*Zck3W0G!!)/<!.k4A!!'dp!!'d<!.k41!!'ds!!'dI!.k3b!!'.^!!'.^!.k3R
!!'.am/X9Y!.k3.!!'(r!:'UbX-is>!;QTpX69H^X1&(\!5nj;k2ZLBk2$)i!42_+k2u^Ek3E#!!.k3&
!.k1P!!'ds!!'d,!.k3&!.k3o!!'.am/X9<!.k3&!.k3;!!'(erqlZpX,-h.!.k3&!9*tYk2u^Ek.LbH
!1Nrg^Zb`M!3Q;%^ZPRs^[V;U!.k45!!'-m!.k4H!!'.akQ%`o!.k3E!!'([!.k3X!!'(_rrB+c!.k3&
!:0[ck*Q.#!!3-#k2u^Ek+D^+!.k3&!6Y?B^ZPRs^XN78!.k3&!1*ZcXmP?LkQ%`A!.k3&!.k41!!'(_
rrB+5!.k3&!.k3R!!)0E!!)0O!.k3&!9!nX^S:d\!;QTp^ZPRs^UF2p!1X#hXlob:!42_+XlnmJXm5t=
!.k46!!''j!.k1P!!'(_rrB*m!.k3W!!)0/!.k3o!!)0E!!)02!.k3N!!'df!.k3;!!'e$!;c`r^PMrB
!;-<lXcEI6!9*tYXlnmJXh=^d!5SX8X2=ph!3Q;%X69K_X761A!0$sYk4\k-!.k4H!!)0E!!)/j!.k3&
!.k3X!!'ds!!'e"!.k3&!.k3&!!3-#XlnmJXe5ZG!.k3&!6Y?BX69K_X4.-$!.k3&!1*Zck3W0G!!)/<
!.k3i!!'dK!.k41!!'ds!!'e3!!'e1!!'e5!<'\3!<'[c!.k35!!'.m!.k3R!!'.akQ%a_!!'.t!!98&
!!!#tXo8>!Xc<C5!8IPSX/H#M!;QTpX69K_X8DqtX82erX8W+tX8W+tX4%'#!1*Zck3W/#!42_+k2u^E
k552Zk5#&Xk5GAZjo>D]!<)&9!.k3&!.k1P!!'ds!!'e4!<9h2!!L'O!!'e4!!9n8^\n-4^V'W!!.k3&
!6Y?BXlnmJXo/8"Xnr)$XfVR'Xo/5$XT5L%!!'.k!.k3&!.k3;!!'(es82frX8N%uX8;l"X/c4#X8N#"
WrT4!!!''s!.k3&!.k41!!)0E!!)0[!<;3Y!!MHH!!)0[!!;9_k5>8[k1Tfe!/pmX^\@e\!3Q;%^ZPRs
^]"37^Au%G!<9h6!!'e4!!9n8^\n-4^Q/AH!7q2NXfVST!;QTpXlnXCXo8;%XT5L#!!KF+!!'/"!!98&
Xo/5"Xjd?&!0R<^X7?7B!42_+X69K_X8W)#WrT3t!!K@'!!'(u!!'&#!3?%u!3:qVJcOU,!9U0ZJcGiP
!9WGE!9X7\!p0LFqZ$c]jo>DDr;Zo]!9X4[!9UrpJcO^/!5G<0JcNso!5I[s!5JF3!5JF3"ht&P!!'e4
!!9n8^\n-4^[V;U!3?/#Xk3W*!1*ZcXmP*Ei;g"X!!'/!!!TJ)XT/@'r;Zo$!3Q2"!3N*uJcPNF!3;(Z
JcOd1!3>;_!3?"t!3?"t"fhX(!!'(u!!92$X8N"uX4dQ*!5ed:k.q%L!3Q;%k2u^Ek552Zk552^joFND
!!)0[!!;9_k5>8[k)TLo!7CiI^Tmik!;QTp^ZPRs^\e'3^\e'8^Au"K!5JI4!l"`Mr;Zi4e,Y(#N;rs\
pAfdFZiC*.kMZECqu?`!qu?o&!3H5$Xo/5"XT8F(r;Zi"M#`,-fDkoPX8mhP!WW5$kPkO_qu?_tqu?o$
!36)"X8N#"WrT4!!!'(5!.k3H!!)0>!.k3o!!)0E!!)0Z!!)0Z!!VKbjo>DDr;Zo]!9X4[!9WeOJcLB&
JcM,;rP.h%rrDu3qu?`3r;[&:!!'b6!5JI4!l"`Mr;Zi4V>u2JJcLB&iW/qZmc")Gqu?`!r;[&(!!',$
!3Q2"!j)I)r;Zi"g&Q^)JcLB&XoSF$mf33cqu?_tr;[#%!!'&"!!'(u!!92$X8N"uX,d74!.k3&!;QWn
k3`6Ik552Zk5>8ajo>DD!!)0[!!;9_k5>8[k0sB_!07*[^\\!2^\e(`!42_+^ZPRs^\e'3^\n-:^An8K
!!'e4!!'b7!5JI4!5F?jJcOL)!3Q+u!3NL+JcGiP!3PGC!3Q/!!3Q2"#-@k*XT/@'r;Zo$!3Q2"!3Np7
JcMYJ!3>ts!3>2]JcNso!3>;_!3?"t!3?%u#-._(WrN.#r;Zo"!3?%u!3>ViJcLB&nGiROqZ$WYRK/ZS
!9WYKqZ$WYqu?`Zr;[&a!!)-]!9X4[!p0LFr;Zi[V>u2JJcLB&iW&tnk5YLsqu?`3rW)i1!<Bn5!!9n8
^\n-4^Y/[>!.k3&!3Q;%XlnXCXo&/!Xo8=tXT/>$Xo/5$XT5L%!!'-^!.k3&!.k4H!!'(_rrB+t!!')!
!;iet!3?%u!il=%r;Zhue,Y(#JcLB&ZiC*gk5YMEqu?`ZrW)iX!<D9\!!)-^!9X4[!9T+<QiI-$li;V;
JcGiP!5I[s!5JF3!5J@1"2=g9^\n-6^Au%I!!'dI!.k42!!'-p!.k3o!!'.ai;g"X!!'.t!!B>'!3Q2"
!j)I)r;Zi"nGn.@Y5eR'eGt1$QN.#dmJm(`!3?"t!3>qr"02D%X8N#"WrT4!!!''s!.k4I!!)/=!.k41
!!)0E!!)0Z!!)0X!!D?`!9X4[!p0LFr;Zi[g&Q^)JcP]K!5F<iXoJI:k5YLsqu?`3q>^T3zrP/=3rP+?
mJcNjl!3Nm6JcPTH!3PG:!3Q/!!3Q(t!3Q5#rN6&!rN4NKJcLE'!3:\OZiC*,kPkO_qu?_tq>^MrrW)n
t!!*$!rMt_SJcO'r!9U]iJcGiP!9WGE!9X1Z!9X+X!9X7\rT=(ZrT:`mJcLB&JcNso!5I[s!5I"`JcLB
&JcM,;!3PY@qq(nNM#`,-JcLB&iW&tZkPkO_]`<WaJcLB&XoJIak5YMEnGn.@JcOC&!5Iq%!5H>MJcPT
H!5I[s!5GuCJcLr6!3Pelr;Zi"LB+[]!3PG:!3PPeJcLB&h#IGUmJm6f])[E_!WW5$kPkO_TE'QDW;lq
\mJm7Lmf7q>b5_P)k5YMEe,Y(#JcLB&QN.$#m/["`!5F?jJcLB&JcOd1!3PG:!3Np7JcLB&JcMqR!3>;
_!3>ViJcLB&JcLB&q#CEWk5YME[fD![cN!s[[/ft%!5FHmZiC*@k5YLslMuM:RfEGjklAX%!3O$:JcGi
P!3PG:!3MmoJcOp5!3<1$!3>_lJcNso!3>;_!3=TLJcN(V!9V]0gAh69W;r7b!9WYKqZ$WYM#`,-JcLB
&iW&tnk5YLs]`<WaJcLB&XoJI(kL]d:nGn.@JcLB&JcPTH!3>;_!3<R/JcLB&JcN.X!9WGE!9WSIJcLB
&^An8K`;kJi!WW58k5YLsTE'QDMZ<aZq#H!Hb5_OEkL]d:e,Y(#JcO@%!3<7&QN.#dmJm(`!3:qVJcMM
F!9W8@JcOd1!9WGE!9UrpJcLi3!5J1,JcMqR!5I[s!5J%(JcLB&g&M,TWW7VNq#CDskK<k-[fD![PlLf
bmf7q>ZiC*,kPkO_lMuM:JcO^/!9U'WJcGiP!9WGE!9TpSJcLB&JcNso!5I[s!5I"`JcLB&JcM,;!3PY
3qo\uAM#`,-JcLB&iW&tZkPkO_]`<WaJcLB&XoJIak5YMEnGn.@QiI-$li=Bm!5Hk\JcPTH!5I[s!5Gu
CJcO4!!3NO,mJm6hQ2n8l!3PG-!3PPeJcMAB!3>5^\c;`2aoI"n!WW5$kPkO_TE'QDkl:_GT)\lRrW%N
Mb5_P)k5YMEe,Y(#[/^3AcN&OsQN.$#m/["`!5F?jJcGfOXb6\+!9*tYXlmk-Xh=^d!6bECX1/.]!3Q;
%X69K_X761A!13`dk3N)"!.k4H!!)0E!!)/j!.k3&!9jI`^RG51!!'ds!!'e"!.k3&!4;e,Xj7!!!!3-
#Xlmk-Xe5ZG!.k1O!3:bQb5_OCkPkO_e,Y(#JcO!p!9UckQN.$Jm/["`!9T+<JcNai!5H8KJcOd1!5I[
s!5H2IJcLo5!3PhmJcMqR!3PG-!3PbkJcLB&g].>TVuVDLq#CDqkPkO_[fD![QN.$Jm/V_<ZiC*gk5YM
ElMuM:R/d6%lN"-h!5I"`JcGiP!5I[s!5G0,JcOj3!3MmoqZ$VuM#b^!!3PG-!3O`NJcN"T!3=TL`rH+
?]`=B!!3>Mequ6YsM#`,-qZ$WYRK*?MnGn.@iW&u@k5YME]`<Wac2[jZ[K(mZXoJI:k5YLsnGn.@RK*>
il2ZD9JcPTH!3PFr!3N^1JcO:#!3<=(JcN.X!3>;_!3>DcJcMGD!9W>BJcLB&!WW5_k5YMETE'QDhZ*Y
kV#Z)Ib5_OWk5YLse,Y(#WrN.%f`6U(QN.#fmCW8-!3M(XJcPKE!3;+[JcOd1!3>;_!3<d5JcNXf!9V,
uJcMqR!9WGE!9WeOJcLB&V#UM1hZ/6.q#CE0k5YLs[fD![JcO[.!3N'tZiC*.kIU_rlMuM:JcMhO!3=c
QJcGiP!3>;_!3;amJcLB&p&G*TNW@6&!9WGE!9Vc2JcMYJ!5I@jqu?`3L]EbA!5In$qZ$W2M#`,-nGiQ
kf`2#S]E!N`iW&t\kIU_r]`<Wa]`8&5f`2#Qn,S%?XoJI&kPkO_nGn.@M#[P<qZ,LR!9U*XJcPTH!9WG
E!9U`jJcLB&g&M,fWW9C+!5I[s!5Ih"JcLB&V>pUuh>i--!WW5&kIU_rTE'QDJcP<@!3;:`b5_OCkPkO
_e,Y(#JcNIa!9V<%QN.$Jm/["`!9T+<L&_4grW%NMJcOd1!5I[s!5H2IJcO0u!3NR-JcMqR!3PFr!3Pb
kJcM>A!3>8_JcLB&q#CDqkPkO_[fD![f)Pg5XT3qQZiC*gk5YMElMuM:M?!Xkq>dMq!5J=0!5IOoJcGi
P!5I[s!5G0,JcO=$!3NF)o`+uoq#CDsQiP;0!3PFr!3O`NJcMJE!3>,[_#OJ9q#CDqbQ*t0!3>Mequ6Y
sM#`,-li7%JUAt;Vq#CHX!.k41!!)0E!!)/p!.k3&!.k3R!!'ds!!'e(!.k3&!.k3&!;QTpXll\aXg\:
^!.k3&!42_+X69K_X6Tb;!.k3&!.k1P!!)0E!!)/S!.k3t!!'dr!!'d\!9X=^^RYAJ!!'ds!!'d`!.k3
@!!'.b!!3-#XgS30XjI-8!!'.gWr&drXbd%0!9X=^X6'B^X1860!!''S!9*tYX69K_X1\Lb!4)Y*k2lX
Dk3W/k!!)/m!3Q;%k2u^Ek4&G'!.k3&!.k4H!!'ds!!'dC!.k3&!.k3X!!'.aWW90e!.k3&!.k3&!!3-
#X69K_X.THE!.k3&!6Y?Bk2u^Ek0sB_!5/@4^YAeh^[2#Q!1*Zc^[2$u!!'cj!/U[UXnr+X!!'-q!.k4
1!!'.aWW907!.k4#!!'(T!!'(N!.k3R!!'(_rrB+i!.k3D!!)0B!;QTpk)04k!;QTpk2u^Ek-k>B!.k4
/!!'e$!!'dE!42_+^ZPRs^ZtlO!.k3P!!'.g!!'.g!.k1P!!'.aWW9/o!.k3&!;?HnX6fleX.fU;!!'(
_rrB+L!.k3&!5ed:k3W-Kk10O!!!)0K!;c`rk(s(i!8RVT^S_'`!9*tY^ZPRs^V'W!!3#quXkNi-!3Q;
%Xll\aXmlCC!.k4C!!'']!.k4H!!'(_rrB+/!.k3S!!)03!.k3X!!)0E!!)0I!.k3&!9sOa^T%86^[_A
V!!3-#^ZPRs^RtRY!4Dk-Xj-q&!!'.!!6Y?BXll\aXjd?&!.k1NX/Z."X4mW@!!'(es82frX,-h.!6kK
Dk-k?_!!)/C!9*tYk2u^Ek.LbH!.k3&!3Q;%^ZPRs^[V;U!.k3&!.k4H!!'.aPlRqq!.k3&!.k3X!!'(
_rrB+c!.k3&!.k3&!!3-#k2u^Ek+D^+!;$6k^Wul[^V^'(!!'d8!6Y?B^ZPRs^XN78!5JR7Xj6tIXnMg
k!!'.Z!1*ZcXmMDNPlRqC!/pmXX7u\I!!'($!:KmfX-E\E!!'(_rrB+5!.k4&!!)0-!!)0>!4r42k/dV
+!!)0E!!)0O!.k3&!3#qu^Y8a?!;QTp^ZPRs^UF2p!.k42!!'-p!42_+XlkrLXm5t=!.k3S!!'(M!.k1
P!!'(_rrB*m!.k3&!;ZZqk)'/^!!)0E!!)02!.k3,!!'e3!1s5k^Z>H^!!'e$!;c`r^PMrB!7LoJXg%l
k!!'-i!9*tYXlkrLXh=^d!1s5kX5s>i!!'(F!3Q;%X69K_X761A!.k49!!)/M!!)/6!;QTpk2u^Ek-k>
B!29Gn^Z#6F!42_+^ZPRs^ZtlO!.k4<!!'-f!.k1P!!'.aPlRqZ!.k3]!!'(C!.k3o!!'(_rrB+L!.k3
)!!;9_!.k3;!!)0K!;c`rk(s(i!6tQE^U=,o!9*tY^ZPRs^V'W!!1ElfXm,n<!3Q;%XlkrLXmlCC!.k4
4!!''l!.k4H!!'(_rrB+/!.k3D!!)0B!.k3X!!)0E!!)0I!.k3O!!'de!.t7O^OcFe!!'ds!!'d,!.k4
E!!'-]!6tQEXgS5Q!!'.aPlRr9!.k3f!!'(:!1ElfX6K\O!!'(es82frX,-h:!!)0T!.k44!!)/R!9*t
Yk2u^Ek.LbH!0mNa^[D0\!!'d0!3Q;%^ZPRs^[V;U!.k4/!!'.H!!'.R!.k4H!!'.aJ,l^\!.k3?!!'(
a!9O7]X.B<u!!'(_rrB+c!.k3&!9O7]k0<r,k0a6]!!3-#k2u^Ek+D^+!.k3m!!'dG!6Y?B^ZPRs^\e'
3^\n02^]"63^]"63^[M5T!.k39!!'.i!1*ZcXmLZ9J,l_L!!'/"!<'&!!<'&!!<'$r!.k3&!8mhWX/#a
T!!'(_rrB+t!!'(u!<&tt!<&tt!<&tO!.k3&!3?/#k1B[:!!)0E!!)0Z!!)0[!<)'[!!!#tk5GAZk)KF
n!9sOa^R>.S!;QTp^ZPRs^\n04^]"35^\n-6^Au%I!!9n8^\n-4^XN78!2TYqXks,1!42_+Xlk37Xo/8
"Xo8;#Xo/5$XT5L%!!',%!3Q2"!3M(XJcP9?!3;=aJcGiP!3>;_!3?%us/Z,!!3?%u!il=%r;Zo"!3?%
u!3<d5JcNF`!9V?&JcNso!9WGE!9X4[s5s:\!9X4[!p0LFr;Zo]!9X4[!9WeOJcLB&p](</RK*?&oDk3
X!5In$qZ$W2rW!#7!5J=0!l"`Mr;Zo6!5JI4!5GB2JcN^h!3O$:gAh5UW;toX!3PF7!3Q5#!j)I)q#CJ
u!3Q2"!j)I)r;Zi"g&Q^)O8o9]oDkch!3=oUXoJI&kPkO_rW!##!3>nq!NQ2#X8N#"WrT4!!!''\!.k4
*!!)/\!:g*ik)o`?!!)0E!!)0\!!;9_k4nuYjoFQB!!;9_k5>8[k0sB_!9*tY^S1^[!42_+^ZPRs^\e'
3^\Ij2^Au%I!!'b7!5JI4!5F?jXoJI(ec::%JcGiP!3PF7!3Q/!!3Q%s!j)I)r;Zo$!3Q2"!3Np7JcPT
H!3;"XJcNso!3>;_!3?"t!3>nq!il=%r;Zo"!3?%u!3>ViJcNai!9V#rJcM,;!9WYKqZ$WYqu?`Zq#CK
Y!9X4[!p0LFr;Zi[V>u2J^An8KgAh5gli>T:!5GZ:iW&tnk5YLsqu?`3q#CK2!5JI4!l"`Mr;Zi4g&Q^
)MZ<aZq#KFT!3O';!3P5\XoJI(kC<Q7qu?`!q#CGt!!'/"!!98&Xo/5"XcEI6!7h,MX4mUSX474;!!''
d!;QTpX69K_X8DqtX8)_sWrT4!!!92$X8N"uX4.-$!0I6]k48T;!!)/t!!)0:!42_+k2u^Ek552Zk4nu
YjoFQB!!)-^!9X4[!9T+<JcLB&JcPfNrP.b#r4i.0!5J@1"2=g9^\n-6^Au%I!!'dI!.k3&!.k3o!<'%
fJGcPI!!'.t!!B>'!3Q2"!j)I)r;Zi"nGn.@JcLB&QN6ubnGiOgr2]_q!3>qr"02D%X8N#"WrT4!!!''
s!.k3&!.k41!<)'J!;u!W!!)0X!!D?`!9X4[!p0LFr;Zi[g&Q^)U&Y2.jo>CrrW%NMXoJI:k5YLsqu?`
3qZ$W2rVur5r;Zo6!5JI4!5FQpJcP0<!3PA`!3NR-JcPTH!3PF!!3Q/!!3Q+u!3Q5#!3Q2"!j)I)r;Zi
"e,Y(#VuQgujo>C^p],mGZiC*,kPkO_qu?_tqZ$VsrVur!r;Zhu!<B2!!!''V!.k4B!!)0D!!)/`!.k1
P!!)0E!!)0Z!!)0Y!!)0\!!)0[!!;9_k5>8[k.LbH!.k3i!!'e.!!'dV!6Y?B^ZPRs^\e'3^\e'3^\n-
4^\n-6^Au%I!!'e(!.k3&!0I6]XnMeqXo8<e!!'.gCAV`GXo&/!Xo&/!Xo/5"Xo/5$XT5L%!!'-u!.k3
&!8IPSX7lSoX0Vfc!!'(_rrB+t!!'(t!!'(u!!'(u!!92$X8N"uX4dQ*!.k3L!!)0U!!)0E!3Q;%k2u^
Ek552Zk552Zk5>8[k5>8]joFQB!!)/B!36)"^Y&V2!!'dD!.k4H!!'ds!!'e3!!'e4!!'e3!!'e4!!9n
8^\n-4^XN78!9F1\XeYpsXo/6O!42_+XljF!Xo&/!Xo/5"Xo&/!Xo/5"XT8F(r;Zi"M#ad\!3=QKdJs9
JZ2fIV!WW5$kPkO_qu?_tr;Zhuqu?_tr;Zo"!3?%u!3<d5JcP]K!9U'W!9WDDJcNso!9WGE!9X1Z!9X4
[!9X1Z!9X4[!p0LFr;Zi[nGn.@JcO'r!5GrB!<Bm&!!'e$!;c`r^\e'3^]"61^]+<4^]"63^SLp^!1El
fXm,o1!!'.2!9*tYXljF!Xo&/!Xo8=tXoAD"Xo8>!Xk<]+!.k44!!'(-!!'(d!3Q;%X69K_X8DqtX8W+
rWrN,"!<&tt!<&sY!.k3U!!)01!94%Zk+MeN!!)0E!!)0Z!!)0\!;kpY!<)'Z!<)'/!.k3&!.k3X!!'d
s!!'e"!.k3&!.k3&!!3-#XljF!Xe5ZG!.k3&!6Y?BX69K_X4.-$!.k3&!1*Zck3W0G!!)/<!.k4'!!'d
f!!'d`!65'>^V'X,!!'ds!!'dI!.k3H!!'.Z!;c`rXdT4iXmlCo!!'.aC&kC+!.k3&!:KmfX4dORX1\M
i!!''s!;QTpX69K_X1&(\!3-#!k1Te8k*c8Mk3E#S!!)0E!!)0I!.k3U!!'d_!.k4K!!'ci!!3-#^ZPR
s^RtRY!;lfsXbZtu!!'.6!6Y?BXljF!Xjd?&!6>-?X1SFs!!'(h!1*ZcX6orarrB*V!0dH`k3rA&!8db
Vk+r(;!!)0E!!)/p!.k40!!'d/!;6Bm^Q&;s!!'ds!!'e(!.k3Q!!'.Q!5\^9Xhk'i!;QTpXliX`Xg\:
^!9X=^X.97g!!''U!42_+X69K_X6Tb;!4)Y*k0X1M!!)/o!.k1P!!)0E!!)/S!.k4F!!'cr!!'e5!36)
"^Y&V1!!'ds!!'d`!.k3g!!'.;!7:cHXg8$$!!'-r!!'.g<;TVpXbd%=!!'(m!1a)iX60K"!!'(:!9*t
YX69K_X1\Lb!87DQk,JFF!!)/[!!)0T!3Q;%k2u^Ek4&G'!.k3a!!'dS!.k4H!!'ds!!'dC!.k3&!;?H
nXc3=f!!'.a;uj&d!.k3&!5ed:X2+df!!3-#X69K_X.THE!07*[k4J_+!6Y?Bk2u^Ek0sB_!58F5^XN5
`^[qMX!:^$h^Sh,4^[2$u!!'cj!/^aVXni%P!!'.#!5/@4XiCG$!!'.a;uj&6!.k4$!!'(L!!'(U!/U[
UX8;n"!!'(_rrB+i!.k3E!!)0A!:g*ik)o_o!!)/c!;QTpk2u^Ek-k>B!.k4A!!'dP!!'d\!42_+^ZPR
s^ZtlO!.k3b!!'.@!!3-#Xb?`V!!'.a;uj%n!.k3.!!'(r!6Y?BX185R!!'(_rrB+L!.k3&!7_&Lk/76
"k3W/8!!)0K!;c`rk(s)+!!'e"!.k3\!!'dX!9*tY^ZPRs^V'W!!9=+[Xe5ZI!!02%XoJI(k>VG`nGn.
@YQ+[(e,Y(#cN!sG[/g"&!3>;_!3<R/JcP'9!9T^MM?!Y=q>dl&!9WGE!9WSIJcMMF!5ILn]`8&I`rL\
k!WW58k5YLsTE'QDm/R-gScAbmqZ)3Jb5_OEk>VG`e,Y(#\GuW1b5g#l!3<=(QN.#dmJm(`!3:qVK`D2
:!!&Yl!9W>BJcOd1!9WGE!9UrpJcLB&k5YLsSH/Wh!5Gf>!5I[u!5J%(JcLB&ZN(!-d/_;h!3Ng4q#CD
sk<8mJ[fD![JcP0<!3;Og!il;$ZiC*,kPkO_lMuM:JcN=]!9VH)ci=(.ZiC.-!9WGE!9TpSJcP!7!5II
m!5H2IJcNso!5I[u!5I"`JcN.X!3P2[!3PbkJcM,;!3PWPq`Y"^M#`,-!WW5$i;`kYV>u2JiW&tZkPkO
_]`<Wab5_P)i;`l?g&Q^)XoJIak5YMEnGn.@JcMqR!5I(bqZ$W2M#d>O!5I[u!5GuCJcLB&kPtUbci='
Jc2b3O!3PEJ!3PPeJcLB&ZiC*,ci='HK)brQ!3>;_!3;amJcLB&!WW5_ci=(.[fFSO!9WGE!9Vc2JcO-
t!5IIm!5I%aJcOd1!5GuC!5In&qZ6c4M#a%G!3PGbq>^MtM?'dZ!3OfPiW&t\k<8mJ]`<Wak5YL_i;`k
Y^&W`bq#CDq[f?E/kPkO_nGn.@ZN(!fi;`l?nc47A`;fo#^B"'0!9WGE!9U`jJcLB&o)Jd*nc/[)T`DG
"!5I[u!5Ih"JcLB&^An89nc/ZleGt1$!WW5&k<8mJTE'QDMZ<aXq#L6k!3:tWb5_OCkPkO_e,Y(#JcO@
%!9WhP!9UuqQN.$Jm/["`!9T+<JcLB&W;lq5gAp45!5I[u!5H2IJcLB&JcPEC!3Nm6!3PEJ!3PbkJcLB
&JcNRd!3=$<q#CDqkPkO_[fD![JcLB&q>^NX]Dqrok5YMElMuM:P5kTtnGrOg!5F6gJcGiP!5I[u!5G0
,JcOX-!3PYh!3Ng4JcNso!3PEJ!3O`NJcMeN!3>Mf!3>MfJcM,;!3>Mequ6YsM#`,-o`,!SmJm7LUB#l
GiW&u@k5YME]`<WaJcOF'!5I=i!5Hn]mf3@&_#OJMk6(e"nGn.@JcMSH!3P/ZrVur#^An89aT2,:!3PE
4!3N^1JcLB&h>dPVh#IGUb5h28!3<p9!3>;_!3>DcJcLB&WW3%]h#IN=!!'h8!9V0!!WW5_k5YMETE'c
J!5JF3f`2#eWrR_Ob5_OWk6(e"e,Y(#df9BMe,TKNhZ/6.QN.#fm3qi[!3M(XT)\kljT+cM!3;=aJcOd
1!3>;_!3<d5JcP'9!9Vc2!9V?&JcMqR!9WGE!9WeOJcLB&]DqrHjT#:qjT)^h!5HeZq#CE0k6(e"[fD!
[JcPKE!3P>_!3N:%n,NHj`W-"@k9p>4lMuM:JcNXf!3>2]!3=uW]Dqr4a8c8A!3>;_!3;amJcLf2!9Wt
Tn,NINRK*?MquFn?!9WGE!9Vc2JcMGD!5IRpJcO^/!5H&E!5In(qZHo6M#`,-lMppeR/j;g!3OlRiW&t
\k9p>4]`<Wa[f?E/blE=qpAb2o\GuW1kPkO_nGn.@K)bo6JcN[g!9V)tq#CEWk5YME[fD![[/^3AcN)G
p!5G`<ZiC*@k6(e"lMuM:JcGfOXeGdqXlKJ6!!3-#Xlh)4Xe5ZG!6bECX1//q!!''f!6Y?BX69K_X4.-
$!13`dk3N)W!!)0+!1*Zck3W0G!!)/<!.k45!!'d*!9sOa^Tmh>^ZkgY!!'ds"9?3M!.k3V!!'.L!4Dk
-Xj-q.!!'.E!!'.a-igC>!.k3&!;ultX+pZTX0M^*X4%(E!!'(_rrB+/!.k3\!!)0*!5&:3k/[Pg!!)0
)!!)0E!!)0I!.k3b!!'dR!1Nrg^Zb`M!!3-#^ZP_"^RtRa!!'.t!.k45!!'-m!6Y?BXlh)4Xjd?&!7_&
LX02N/!!'(J!1*ZcX6orarrB*V!20Amk2QGn!;ultk(`rr!!)0E!!)/p!.k3&!:p0j^QANS!!'d\!!'d
s#lqa1!.k3&!5AL6Xi1:A!!'.R!;QTpXlg5qXg\:^!.k4H!!''X!9O7]X3^hHX69K_X6Tb;!.k3i!!)/
r!3uS)k0a52!!)0E!!)/S!.k3n!!'dF!1*Zc^[2$E!!'ds#lq`i!.k3:!!'.h!.k41!!'.1!!'.g&Gm"
=Xbd%0!9!nXX.oZt!!'(N!9*tYX69K_X1\Lb!3H5$k19Tb!;QTpk-k<jk2u^Ek4&G'!.k4L!!'d!!!'e
+!2fes^YJnc!!'ds#lq`L!.k3\!!'.F!6P9AXh"Mk!!'.O!!'.a&-/iu!.k3(!!0,#Q2gocmJs?h!3=]
O!WW5$kPkO_TE'QDcN!t-[/f.c!9U$Vp](<VeGoU3k5YMEe,Y(#OT5Bro)PKb!5ILnQN.$#m0WXr!5F?
jJcOR+!3N1"m/R-gQN6"F!3PDq!3Np7JcM_L!3=lT\GuW1b5e[F!3>;_!3>ViJcLB&o)JdQPQ1dI!!%T
Nq#CEWk5YME[fD![o`,!,Nr[-!!5H8Kg].>hg&M,fk6V.'lMuM:_#OJ;_Z5f!!3PhmVuQh"g].BU!3PD
q!3MmoN;rsZpAfdFg].>TVuZDh!3=fR!3>;_!3=TLJcOF'!9U?_VuQh[g]5(h!9Vu8!9WYKqZ$WYM#`,
-f)Pfcec5]bf`6U(iW&tnk6V.']`<WaUAt:ri;iQO!3M7]XoJI(k7@WqnGn.@JcP3=!3=ZN!3<s:JcPT
H!3>;_!3<R/JcMbM!9W#9qu?`ZL]Fd^!9WGE!9WSIJcLB&MuWjmp]/S>!5GrB!WW58k6V.'TE'QDJcOC
&!3O3?!3PMdb5_OEk7@Wqe,Y(#JcMPG!3>&YjT#:]ZiC*,mJm(`!3:qVJcLB&mJm7L`;fo#dfAA-!9WG
E!9UrpJcN1Y!5Hh[JcO0u!5ICk!5I\+!5J%(JcLB&!<B6T!1a)iXlf][!!'.a!!'.1!.k3_!!'(A!.k4
&!!'(W!!'(_rrB+c!.k3+!!)0[!.k3G!!)0?!!3-#k2u^Ek+D^+!4r42^W?K.!!'e3!!'d>!6Y?B^ZQ%
+^XN78!/COSXo/6q!!'/!!!'.`!1*ZcXmH,c!!'-X!.k4!!!'(*!:KmfX8DqtX.'+K!!'(_rrB+5!.k3
B!!)0D!4r42k552Zk0F%1!!)0E!!)0O!.k3b!!'dR!.k3<!!'e#!;QTp^ZQ%+^UF2p!;HNoXc*73!7Ci
IXlKH^XlfZaXm5t=!5nj;X2"^e!1j/jX6'B`!!'(_rrB*m!0@0\k4AY*!.k48!!)0B!!)0E!!)02!.k3
&!!'dn!!'d/!1*Zc^[2L-%04/"!.k3q!!'.\!!'.Q!.k41!!'.a!!'.7!.k3=!!'(c!;HNoX,I%]!!'(
_rrB+i!.k3&!9=+[k2H@@k.gtK!;QTpk2u^Ek-k>B!.k3Z!!'d^!!'e5!6kKD^Zb^u^ZQ%+^ZtlO!.k3
&!!'.L!!'.D!!'.e!!3-#XlfZaXe5ZG!.k3q!!'(J!!'(_!9=+[X6BTaX69K_X4.-$!.k3=!!)0I!9aC
_k/mZ(k32jGk3W0G!!)/<!.k4:!!'dk!!'dH!.k41!!'ds%040@!!'e4!<'\3!<'\3!<'[c!.k3[!!'.
Y!!'.j!.k3R!!'.a!!'/!!!'/"!<'&"!!!#tXo8>!Xc<C6!!'(W!!''r!.k4H!!'(_rrB+t!!'(u!<&t
t!<&tt!<&tI!.k3a!!)0=!!)0H!.k3X!!)0E!!)0Z!!)0[!<)'Z!<)$[!<3&tk(j"h!0@0\^[qO(!!'d
'!!'e&!!3-#^ZQ%+^\n04^]"35^\n-6^Au%I!!9n8^\n-4^V'W!!.k4*!!'.i!!'.6!8mhWXmH)gXlfZ
aXo/8"Xo8;#Xo/5$XT5L%!!98&Xo/5"XmlCC!.k3K!!'(g!!'(h!3?/#X6fleX6orarrB+u!<9,!!!'(
u!!92$X8N#"WrT4!!!''s!.k3&!:g*ik3i9Mk+r(P!!)0K!!)0E!!)0[!<;3\!!)0[!!;9_k5>8]joFQ
B!!)08!.k4C!!'d)!!'e,!.k3g!!'e$!!'ds'EGoI!!9n8^]"35^\n-5^An8Kr;Zo6!5JI4!5FQp^]4A
:_uSKk!3N7$NrT0^o`4df!3PDa!3Q5#!j)I)rVur#r;Zo$!3Q2"!j)I)r;Zi"e,Y(#q>^MrSH&Yjmf7q
>aT)=Am/R-ekPkO_rW!##!3?)!!3?%u!il=%r;Zhu!<B2!!!''V!6,!=k.UiR!!)/W!0mNak3i9O!!)0
E!!)0\!!;9_k5G>\k5>8]joFQB!!;9_k5>8[k.LbV!!'e+!1<fe^Ztm;!!'dM!9!nX^[(q#^ZQ:2^\e'
3^]"35^\n-6^Au%I!!9n8^\n-4^[V;U!8@JRXf2<]!!'.'!!'.o!3H5$Xm?#fXmH,c!!'/!!!'/#!!'/
"!!98&Xo/5$XT5L%!!'-u!2fesX5*c[!!'(L!87DQX/Z0p!!'(d!!'(_rrB+t!!')!!!'(u!!92$X8N#
"WrT4!!!'(R!.k4A!!)/E!;c`rk,eU`k2$*V!!)0J!!)0E!!)0Z!!)0\!!)0[!!23^!9X4[!p0LFr;Zi
[NrXb3JcO'r!5GrBq#CE0k7dp2qu?`3rVur5r;Zo6!5JI4!l"`Mr;Zi4e,Y(#JcLW-!3Q+uZiC*.k5YL
aqu?`!rVur#r;Zo$!3Q2"!3H8%Xo/5"Xbd%0!.k4#!!'((!!3-#X69K_X8DqtX8W)!X8N#"WrT4!!!92
$X8N"uX1\Lb!.k3D!!)0B!6Y?Bk2u^Ek552Zk5G>\k5>8]joFQB!!;9_k5>8[k4&G'!2BMo^Yo1`!!'d
&!!'e1!1*]a^[Ms;'`>`D!!'e5!!'e4!!9n8^\n-6^Au%I!!'d2!.k4=!!'.L!!'.@!7_&LXfh`a!<'%
f!;rts!!'/#!!'/"!!98&Xo/5$XT5L%!!'.T!.k3^!!'(J!!'(r!20AmX5a2_!<&tds88qq!!')!!!'(
u!!0,#!3?%u!il=%r;ZhuNrXn7!9X7\eGoU3Y5mnh!9TXKq#LBUmK!1Iqu?`ZrVur\r;Zo]!9X4[!p0L
Fr;Zi[e,Y(#o)Jd*OT<E%!5H2IbQ%a[!!'e$!!'ds'EGoG!!'e5!!'e4!!9n8^\n-4^B">Lr;Zi4M#b9
j!3O3?P5kTbnGnpV"0DP'XmZ5k!!'.a!!'/!!!'/#!!'/"!!98&Xo/5$XT5L%!!'.7!/ggWX8)aI!8[\
UX/5mW!!B8%!3>Je!3>;_!3?"t!3?)!!3?%u!il=%r;Zo"!3?%u!3>ViJcO@%!9UEaWW3%]g&S;V"6KR
`k3W-Kk3W0G!!)0Z!!)0\!!)0[!!;9_k5>8]joFQB!!)/Y!3?/#^XrOs!!'dW!.k4F!!'e$!!'ds'EGo
G!!'e5!!'e4!!9n8^\n-6^Au%I!!'df!.k4F!!'-_!!98&!.k3g!!'.g!!'.a!!'/!!!'/#!!'/"!!02
%!3Q2"!j)I)r;Zi"Nr[&t!3<p9ci='HZiH-e!3>bmq#CDqkPkO_qu?_trVur!r;Zo"!3?%u!il=%r;Zh
ue,Y(#r;Zi[O8o:Cq#H!HaT)>'m/R.Kk5YMEqu?`ZrVur\r;Zo]!9X4[!9O:^k5>8[k(s)L!!'dV!71]
G^U+".!!'d:!!'e"!!3-#^ZQ:2^\e'3^]"35^\n-6^Au%I!!9n8^\n-4^V'W%!!'/#!1X#hXlobq!!'.
E!9=+[Xm#fcXlfZaXo&/!Xo8;#Xo/5$XT5L%!!98&Xo/5"XmlCC!7:cHX0Vfh!!''m!!92$!3cG'X6BT
aX6orarrB+t!!')!!!'(u!!92$X8N#"WrT4!!!''s!1a)ik2u`N!!)0/!71]Gk-P-c!!)0G!!)0E!!)0
Z!!)0\!!)0[!!;9_k5>8]joFQB!!)08!.k3&!!3-#^PDjk^An8:!!'ds,65LV!!'e4!<'\4!!!#t^]"6
3^Q&;G!6Y?BXgnGY!!'..!;QTpXlfZaXo&/!Xo/7uXo8>!Xo8>!Xj[9%!/:IRX8W*W!!'(q!42_+X69K
_X8DqtX8N%sX8W+tWrN/"!<&sS!.k3u!!)/f!7h,Mk,n[c!!)0E!!)0Z!!)0[!<)'Z!<)'Z!<)&m!.k1
O!5I:h!5GN6ZiC*@ciDu(s1dt%!5I\A!5I"`JcO!p!3P#V!3P)XJcGiP!3NF)s/k\h!3PVgqZ$VuM#`n
C!3>GdnGiQiP5rc+!3<X1pAk5omJm6fkPkO_]`<WairB)Ag].?:`rMG+!9WYK_Z9`!mJm7Lk5YMEnGn.
@JcLi3!5J1,PQ2!(!5ANK!!'dKp]1*i!5I\A!5GuCJcLB&aT)=C])^+V#d"*/!3H5$Xf_'m!3PDa!3PP
eJcLB&PlLfbmf8dV#cds+!36)"X/kdk!WW5$kPkO_TE'QDJcO^/!9U'WjT#SK!9O:D!!)0Dn,NINk5YM
Ee,Y(#irB(oT`F*Q!5G3-!!*!4rVur5[/^3Ar;cl4nc/[)m3DKQ!5F?jY5eR)eGucQ!3OcO`W-"@^&[p
.!3Q2"s/khl!3PDa!3Np7JcPWI!3:tWq>^MrTE+ukrVur!nc6T.!3?%us/Y\j!3>;_!3>ViJcNdj!9Uu
q`W-#$^&Zsh!9UZh!9X4[s5s.Xq#CEWk5YME[fD![j8]1pV>pV2quE>hr"SAqci='\r;Zi4q>^N1o)Jd
*k9BuAlMuM:YQ+[*e,[qt!3NL+S,`Pkr;Zi"q>^Mto`,$n!3PDa!3MmoJcPZJ!3;ss!3>2][K-7*dK&G
1!3?%u!3>qr!3>\k!3>;_!3=TLJcNgk!9Urpl2UhHRK0Yo!9X4[!9X+X!9WkQ!9WYKqZ$WYM#`,-mK!6
[^]4ALg&T@tr"Su-!5JI4!5HSTq#CE0lMpq"k9BuA]`<WaJcPHD!3M[i!3Q2"!3Q/!`;fn?lMppek5YL
anGn.@JcNUe!3=!;j8f,Xq>^Mrr;Zhu^]4A8o)SRd!3>;_!3<R/JcLB&qZ$WYRK*?Mr;Zi[p&N89!9WS
I!9WGE!9WSIJcMhO!5Iau!5JI4r1WufJcP6>rY5A4q@p@<!5Ik#!WW58k9BuATE'QDp&G)pkl:^cVZ;;
KirB(]l2Ugdk5YLae,Y(#_>jS:kl:^agAm!/rr;uuqZ!u(!3>Ab!3>Mequ6YsM#`P9!9WtToDemRO8sk
4q>^NXl2UhHk5YME]`<Wa^B"8d!!)qjrW)qkdfAk;!5I.d!5I7gr"T/2q@rK#b5_^\!!'b6^Zke!^ZRE
R^[V;U!/gjV]DDT@!!'.R!!'.l!1*ZhXT/@'!3Pelq#CDsk5YLa[fD![JcPKE!3=`P!3=iSr;ZcsqZ#m
^d/X?N!!'&"X6KZbX69K_X6Tb;!.k3f!!)06!!)0J!1a)njo>DD!9WVJ!WW5_k5YMETE(G]!5IaunGiR
(mK!4=qk=#ir1US"]E%jDr;ca0p](</hZ2^;!5Iq%!5JI4!5I\R!5I"`JcOp5!3OoS!3PYhrO^ndJcP9
?!3O*<!3PYh!3Q2"!3PVgqZ$VuM#ag]!3=cQ!3>tsJcO7"r;Z]qr;ZNl!3=0@qZ$VsmJm6fr;ZhukPkO
_]`<War;Zi[f`2$7YQ0IZ!9X1Z`rH,%mJm7Lr;Zi[k5YMEnGn.@Mu`k1qk4"rs0MWsec5]bl2Uh!blI#
/r"T)0r"QgE!5JI4!5J%(rrE)6r;Zi4k;31R[fD![`W6"MqZ-Upd/X0Kq>g$c!3MFbdJs9Lr;Zi"mf<B
ir;Zi"k5YLalMuM:JcO=$!3>Ab!3=-?n,WCdr;ccq]`8&5r;Zhumf<Bgrr<*#!3>;_!3;amJcMJE!9WP
H!9X.YJcP$8!9X4[!9W_Ms5s7[!9WGE!9Vc2JcN:\!5J+*rn71Brj2NrlMu\?r"T,1r"T#.!5J@1!5HS
T!5It&!l"`Mr;Zi4m54\s!5F?jKE)%T!;$9j]DDU-<1<m&!!'.t!!'.G!;lfsXmZ5kXT5L%!!'.a!!'.
7!.k3s!!'(-!1j2gs8E#rs8)crX82erX2k8@X7$#iWrT4!!!'(_rrB+i!.k3?!!)0G!.k4%!!)0X!!)0
&!!)0N!!<5`!9X4[!9WGE!9U`jJcNjl"2=ief(u*=Zi6ZC!36,!'`A%0'`J+1'^PhF!!'e$!!'e5!<9g
s1]Y;V!.k38!!B>'ZEj<,rD`arJcM5>!3PVg!j)G&!W]@)k5YLaTE'QDhZ*YWV#\@4rr;osr;Z`rr;Y:
IjT#:]m/R-erW)u!kPkO_e,Y(#WrN.^f`6U(YlFddm/R.KrW)u\m/["`!9T+<JcPQGrn7;%qk="qri#n
([f?ECklCY^!5ICkr"T,1r"T,1r"SQ!!5Ht_!5AX:!5ANKli7%#rW)u5k;31R]`<Wa_uTeKrj)D$r`&k
U!*%AHjo>C`jT#:_])_d0!3O]M"g%b)XT5Ki!!'/#!<91a!!'.k!.k3&!3uS)X5s<]X7$&Y!;ulr!;ul
r!;ulb!!'(K!!TD'!36+#mf<=e!3?)!s/Y>_!3<R/JcLB&li7%JjT#;C[f?Hk!7UuPjo>DD!9WVJ!9X7
\s5rJE!9WSIJcO0u!5HbY!5JI4!87A&!nl/Ur1O2CZa9Y1!jf54s/CYOpAk+*r;cg2r;ca0])ViGlMq"
$!!!'#^VAqg!5G0,SH&Ylk5aZF!3Q2"!5&69!kYbDqu?f(<)iiUs&AtV\,_*\k5YLalMpperW)u#k5YL
ae,Y(#kPtU`bl@aEd/]4-r;Z]qrr2rurW)lr])Vi3lMppcrW)u!mJm(`!3:qVZiC*gciF%F!9T"9JcPc
M!9WSI!9X7\s5rJE!9UrpJcO0urg*TbrfI$XqUYS<#1g,eWN!51r2K\rre]P5!5JI4i;`km`rQ#OrW)p
BrXAl.,Q&8H!7(WF^\n-4^[_C(^\n-4^\n-4^ZRo`^[V;U!0I9XZMX\(Z;ag'2uckT2qn<4Xk`sWXk*Q
B!!'/"!!'.l!<0)#!<)ruXo/5"XlfZaXg\:^!7q5M$31)*(?,>n+Q*5"X7lVW!!'(?!;ulr!;lcr!;lf
_!7_&LX8N"uX7?8iX8N"uX8N"uX69K_X6Tb;!.k4'!!)0;!!)0/!20Amk5>8[k4/NOk5>8]jo>A_!!)0
E!!)/S!.k4>!;r/`OT(sP!<1[Of(u'Eec<%UWO&r/WW'4(M>jis!5\a8'`J+3,Q&#N,Q8DT!!'e%!!'e
%!9aC_^Zke!^\n-4^ZRo`^XN78!3Q>$]Do25!!]_/<&Za8<;\]S;ucpt<:g0B!;-<lXmQ/hXjmCOXm,l
dXo/5"XmH,c!!'-X!/CRP$31k!!!".=!8.AOs8E#js82isX6orfX4I=Q!!'(b!!'(u!!'(_rrB+5!.k3
&!0$sYk4\lN!!)03!!)0H!!)0[!!)0E!!)0O!.k3C!!87KQi<*EU&Utef`9V#T``jG!42^)s0M['pp7L
2!5I:hl2^f.r!iQKq>gL>`;fnQm/[+c!5JL5s1d_`!5GuCJcO'rrtt[G!4)J%#I4=0<&Za8<;ecN<7h3
1!!'-q!7:cHXm,ldXo8>#XlfZaXm5t=!2TYs(((EJ(?>Iu!!'(N!:U!\s7u`ps2=s<X6KZdWrN,$!3<0
`rrB*m!.k3&!;QTpk)06'!!)0H!!)0\!<;3E!!)02!.k3`!!/1Jr/giMs/#^g!SO1GV>d1f!<9D*WW0=
(WVa"%^AbJ4!4;e,^Yo1l,PV9<,Q8,R%1O$N,PhE<,OPO3^Yf(q^An8K!5Iau!5JI4!5Infqa(:tM#`,
-qZ-X5rVuu2!<*i4!<6$u2uckV2u?PSEW/q<!!*)%WW3%$huEk]!!',%!3PJc!3Q2"!3PDa!3Np7JcO7
"!>Z%?(:O:f!!'(Y!<3#n!;6Bg!;ulp!:p0jX5Es]WrN.#!3>>a!3?%u!3>;_!3>ViJcLB&QiI-Kli=d
#!9W2>"m,dbjoFQ1!<)ruk5>8[k2u^Ek-k>I!!'e2!8.>QOI,m,qP!o>!hlHero=!OrW)l&re^W\!ku"
Tr3QBZh#O_\r$1t:rZhCOr"Su-r$2+>rZhCBdJs9^j8]1pk<]0`lMuM:e,TKN`;onC!WX&Srl+a7r)<X
rrrE$t!c_1Zr)A^WScAbmjo>G_!3PDa!3MmoTE"tmj8eZL!>Z%?(?PVr+SGg7+N=E'!;ull!;?Hh!;ul
p!<3#]!9jI`X5j6\X69K_X4.-$!:'Ubk*Z4$!4;e,k2ZLBk3W0G!!)/<!/U^TQi3!GOSbaLf);HFj8Yh
Q!</\lZi6'dM>sp]^AG5:M<Y'@^X)r\^\@fe!;n)4!;mQ-!;n)?!;n)4!!'dr!!'e4!!'do!!'ds63+d
6!.k3j!;s/$)#qSO!<6$r!<6$tEVi]8!<1sE!!'.t!7q2NXfVTk!!'.`!!'/"!!'.]!!'.a!!'.k!.k3
D!<*?'(@(u!!<*c6+SGd8+TDE.!!'(H!!'(Y!;?Kks7-0fs7u`ns8;rqs7--iX6'B^X8N"uX6Tc]!!'(
_rrB+/!.k34!!)0R!8RVTk,/4O!!)0D!!)0[!!)0A!!)0E!!)0I!.k3K!;r2_OT,=YU&W^Cf`@r0rf@'
0rLs5A!T]@BOT(+9^A,$u!;uoq,Otj4'`J(4^\n03,6.`C%06GRrXAiPd/X0]jT#>^!5I\`!5G0,JcOg
2s0DX9!>rfT!<0;&!<08(`VTZ7EVNN5iW&,b!3H5$Xk*R<!!'.]!!'.a!!'.N!.k3b!;m3'(@qP*@.jU
"(B,HL!<)rt!0mQ^s763j!;ulr!!'(u!<2uu!<2uu!;ulE!!'([!!'(es82frX,-h.!.k3h!!)/s!!)0
A!!)0E!!)/p!.k4$!;r2_OT#7YT`E[Ag&-m2f)F>&Zi&ATjGEkqs,$`hpp9&^dJs9^gAq3tn,WG%rrE$
-q>gC%r=&bAr;ci3rW)r4rW)o3k5YLsiW&tnk=u#lnGn.@OoPKfr4Dk,!4)U9!*&m%!6+g8rc.^4!9*q
@rrE#V^]4A:joEL'!3Q2"riQ/"riQ/"rN55_!3PMdq#CDsk5YLa[fD![gAq-YrYG,+r*]3u!$M7trugt
7rVultrVu*^fDkoPgAq6Qn,WIfrrE&uq>g9i!NQ5"!<0%u!<0%u!<&t]!!'(Z!!'(_rrB+c!.k3&!2KS
pk266c!!)0[!<2-[!<2-[!<)'C!!)0B!!3-#k2u^Ek+D^+!:g-fQiE0D!!Apkg"HAUqiC^/r7:l#!8md
8rrE(Uq6ThrrWN6$re];.lMpq"dfB@lp]14$qZ-@"!5JL5!5JL5!l"`MrW!#7!5JL5!5JI4n,NX,!5AL
6^Z#4n^ZS>l^XN78!3ZA((q[EZZMOY#]DSu6])]VB!;TRoiVr$@!<1pWmJ\NJ!!'.G!9O7]Xo8;#Xo8;
%XT5L&!!98&Xo8;#Xm?#kXT5I'!3P5\!3PVgqZ$VuM#`D5r!EK@('*t,qdB$rr\XWTruh+;rVlitrr2u
trr;uurZK)Y!3=QKrr;`nr;ZWop\t5orVur!rW!##!3?)!!il=%rVur!li73i!36)"X5X*ZX69K_X1\L
b!.k3r!!)/i!;ultk5G>\k5G>^joFQC!!;9_k5G>\k3N'OjoFND!9W8@!9WGE!9WeOJcO0u!5Hq^r0R-
X"ejW#f%JaQO8di1f)=8%hu9t^jSt><ZhOM#"TA`*M8K;n^Ztmc!;n);!;m<'!;?p+^V9aK^B"8J!<Bn
6!!^1<^An8K^ZYXt^Zbao!!'ds:&r&<!/pmXXnVn>!!Kp>ZFdaF!<0V.ZMhB8^]%44`W#r7<;btYi;b;
*&F9DG!!'.-!<9/'!!',$riH2$Xo8;)XT5I'!3NBe!!'.[!!'.a!!'.e!.k4&!!'(J!;m2o!;^*u!;HQ
o(A\%'s84"W!!'(]!:^'es7lZms8)fjrroI(!!'&"ri6&"X8W)'WrT1#!3<0a!!'([!!3-#X69K_X.TH
f!!)0?!.k49!!)/f!!VNI!!)-]roO4]k5G>bjoFND!9WGB!:0[ck2?:?k2u^Ek0sB_!58I2QhLI]TqU'
9g&$j0f`8AXf)42$hu0n]jT"9;Zi0q*j8f,Yr!E=Y!5G3-rY,>WqZ-O=rrDorr!iK&rXJl-rXB,5^V9a
K^V9aKrkAX;!5H8K^B"8Jr;Zi4o)Jd*r;Zi4huEblm8!OR!5F?jJcPQG!4)R8qZ-W-!*&s'r4;sDrD`a
7qc*RY!laBero*bdr;Zi"_uR(Cs/l;$s/l;$riHA)!3N@'XT8@&r;Zi"o)Jcmr;Zo$!!)!Y!3PDa!3Np
7JcO=$r!MonqdAOdrr2rup](17!3>kpWW<"tqZ-Qoq#L?mq>gNprrE&u#QUp+!!'(#!!*#!"onY(WrT1
#ri>tt!3>\k!3?%u!3>#X!3>;_!3>ViJcLB&f)Pg5XT6HCs5s=]s5s=]roOCb!9WDDjoGDCr;Zi[o)Jd
Qr;Zi[kQ(DY!9WGE!9U`jJcOO*r0RDEq>gNC"d"i!j5Z4"dK,Ehrf7-@j4=([rj2T`!9=!`r;clYrW)d
$s,$_Mo)R&9!5IUqr=o5?r;ca?rY581!5JLBq>gL(qu?gD^E^Mn!<9h6!<0_>!5ANK!5H8K^VB"5!5IF
l!5I\l!5Ih"JcM/<rhfo"!5$4h!</ks!6+p;"NA?c]=\!Qr`&js!6+k8!9*q@"NA@DiSjVE])Vi5l2]l
F!3PYh#d"*/!!'.'!!*###lq(-XT5K*!3NBf!!'.\!!3-#XlfZaXe5ZG!:g-f$N:h8!<3i6!!$F+!!-I
-ra>?ur\XKPrVultp](79rr:aRjT#:]jT,/Wr;cZnqu?_trr;fprr;lr$3.(+WrN.#WrN/!WsJd,!36+
#WrT3$r;c3b!3>#X!3>;_!3=TLJcLB&YlFdddfB7F!9W\L#j)-L!!)0D!!*#\#ls)fjoFQ+!9WG.!!)0
>!!)0K!;c`rk(s(p!</>`O9L^G!5AL6r6bY5j5^$br/Up>j4=1^rmh4YZerL2qm62#!os=]q$@%Xr(b6
3m/[,1p&P(+r!iT)rZh=To)S[trW)mA#/:-<^V9aKrkAa>^Au"K^An8K^\@d/^[qL+^]"5m!!'ds:&r&
B!.k3n!!98&!;r_r!6)qSVu-Mr`Po.]]Df)=<)gVPEVi`5kQ8`eiV=&W!.k4K!!]P*!3N@'!<0),!3H7
'!3H5$Xf_?u!3Pkn!3P,Y!3PDa!3PbkJcMGDrX/Q=!WW5$q>^L&q#LD%s'Y0nr;Q`sp\t49r;X&&rr;Z
lq>^Bnq>^$dr;Z`rrVm)&!!'(#!!*#!#lq"+WrT1#!3<0q!!'(l!!'(_!;QTpX69K_X1&(\!71]Gk-P,
@!!)0]!<;3]!<2*e!9O:D!9O7]k2uF=!9WnR!9W/=!9WGE!9WSIJcMPG!0I2H!0I-Z!13W3!LMjAdf#4
.j/Lo:hq@qY!8mdir3Q.ur!EABrltSbNDAj@raasf!5Ih"r$21@s!%Lgr;cg2r!iK&r"S`&r!iW*r?D?
X!<0b5!<'\4!<0b5!<0b&!!U+;!5ANKi;`oZ!5I\l!5G0,JcOj3r20Pq`V?A0!!L8"^V@DYZ2hZ=EVrf
2kkl"kM#NeBLt_pt!!'.(!!02%riQ2#rN6)"riQ2#riQ/"o)Jrr!!',$Xks*YXlfZaXjd?&!4i.1(B+X
@(B"45$N'l($MOQ!@."$ks8)cl!!+qVm/[.ci;`kYlN$k_rW)rtr;cZnq>gNps8VZjr;Z`rrVlo!!<0&
!!<&tu!<0&!!<0%g!!TD'!36+#hZ*YWmJm(`!3:qVJcLN*!9X7\YlFge!<2-\!<)'[!<2-\!<2-M!!VK
b!9O:DrW(pX!9WGE!9UrpM#[OjqZ,"Dr0INdOH>ghr6kW)pX9#$ro4"3rmq)%!5A<9q#LF$rm(G]rltS
bNDB?No`4o#e,TK`q#LF>rXJl-r$2.?rtPA?q>gF-o)S[trr<$!r?M<V!!*#5!W]t8r4`43r4hk(!5J@
1!5I@j!5I]#!5J%(JcO:#!3O*<!6+l6s24T/r;ci9!5&69rjr/MqG[IYro*k?!oX\%rgE\?rg<bB])Vi
5o`3&5riH/#riH5%XT8:$!!)r!oDelnq>^MtjoG2W!3PDa!3N^1NrT0\o`3SDr!EN+()@8G!<$<o!;HN
d!!+qVo`4jhr;Y7H!3>nqr;Zcsr;Z]qqZ$Blr;Z?gr;Z`rrVlku!ir@%ri6)#WrW'u!!)qtoDellq>^M
rh>dPVkPkO_lMuM:g&M-8WW8:a!9W_Mc2dk+!!*#\!W_?_r8mtZr9!VO!9X+X!9W2>!WW5_k5YMETE'Q
DmK!0OrhT[_j5^-e!93\"rJps=rndq2f%IC9f%0iRrj2G$rnmY!rPni^!li5Tr`]<H!,qW4s*4HP!,qQ
2f)Pdqr!`W+r$2%<rXJW&r"S`&rXJc*rZ`,l!5ANK!5ANK!5ANK^An8K!5ANKrW)Qj!5JI4!5I@j!5I]
#!5I"`JcN1YrYP\:`PqhS!5nK-r;Zi:rkAZCZFa(8ZEjJAr_rm]r8@\?^]2(HRJhs@RK&*A!</CS!9F1
pXT5I'XT5I'XT5I'XfVR'XT5I'XmlAkXo/5"Xkj$XXmH,c!!'-X!/:LP$31G4!!!Ap!<$<p!;c`b!<)r
s!!)Qa!<:OGrrDTH!:Bjarr<&ss7u`ps7cTls766is82lrrtML6WrT1#WrT1#WrT3$!!'&"WrT3j!!'(
u!!'(u!9*tYX69K_X1\Lb!.k3&!;lg2joFNDjoFNDjoFNDk2lXDjoFNDk4&EOk5>8[k2$(<k2u^Ek4&G
'!1a,gQi*]Xj7Lb"O8IW0huC%\eca[ZZa8`i^AZsfcMbc^cMrn%>5leIDu9S8GlDU]Gl2+PDp\Ob^\n0
3%0?tJ!;n)@!<+5@'_h\+'^u,%,Q.TF^Au"K!<0_A!!'b6^V9aK^Au"K^[2"$^Z>Ik!!'ds=oc=H!.k4
"!;m]3`Up&.!;jD-^].:2Z37eO<)gj6EW*ZNRJhs@RJHp_R03NYmf3@+!!'.;!!','!3H5$riHS/!3H7
'XT/@'!3H7'm/R-gh#IGWk5YLalMuM:UB(6"l2UflquGLPs"sZRrW!#irVc]q!7Ur;!7UlGs7+J:!3?%
ur;Q`srr<#urW)cop]16ln,WIfr;Zu$!36)"ri6G-!36+#WrN.#!36+#m/R-ehZ*]X!3>;_!3;amJcLB
&gAh69_#OW#!9O7]roOUh!9O:Djo>DD!9O:DrW)Ef!9W);!9WGE!9Vc2JcN=]rg3MYro4!Fo[3fog!]`
MrmL_q!njodq7cjcrQb/Ws3CXJrm(G$!-nH\s*4NR!,qjIblIYNrrE$CrW)g?r"Su-!#5AGnGrJ3qu?`
3rVur5rW!#7!5JL5!5JL5!5In$!5I=i!5Io)qcX!7M#`,-q\]=O!!)Yh!kZ(BqRca)r3?C9<)i[5rkJE
"pPAj;rrE%dc2b$J!3Q5#!3Q5#!j)I)rVur#rVur#m/R-gquG^V!3PDa!3Np7JcO-trX/E#!"-XEs8W*
!!!)q@!7Uo:s3puI!:g'gblI\ArrE&urW)Zlq>gHnnGrRgs8Vus!3?)!!3?)!!il=%rVur!rVur!m/R-
eh#IGUkPkO_nGn.@JcLB&`W-#$rVur\rW!#^!9X7\!9X7\!9WYK!9WACq#CEWk5YME[fD?e!5J:/e,TK
8qPF1Xr6bZ,j4=.V!nl#Mr7V%ss472&!nQ&2r87Iernm_#rW)c6r/C\Oqi(T8rGVUYq.0JY!!*"Ps,$C
K!5I[s!P]*C,P_?9,Pr2Q!;dK0!<*H&!;n)?!!*)7rVur5rW!#7!5JL5!5JL5!5J+*"i%eP^Au%(!!'d
s=oc>'!.k4&!!'.D!;[Q3!;r_r`Po.\VZOK.VuF=.]D\Z-ZMqH;ZFa*6^\r0O^]'Z#f_L?K!!'.a!!'.
s!6bECXo8;#Xo8;%XT5L&!!'/#!!'.m!!TL,!3H7'h>dTW!3PDa!3MmoUAt:pi;i0D!"/Q&rX.$Qrr;c
orc\E99)na3rUKg7q>^Gj!<AtrV>lSK!!'(_!!'(us7lZes82los8E#ts7cTls82isX8W)!X8W)#WrT4
"!!')!!!')!!;6BrX/c6$!3=lT!3>;_!3=TLJcP3=!9TRI]`8&pk5YMEiW/!=!9X7\!9X7\!p0LFrVur
\rVur\o)JsVjoFNDk1fq:k3W0G!!)/<!5AL6^Vp0QOT)'XOJSfPQi>G4QN5V4df%ksdK8+Tf)FA&f)+A
(^AZsh$3(#)`pSiaDuOt]Dtml>K`[*bL&Qr#!:0^`,PhE:,Pi,P!;mQ2!<*H,,PhE<,Q%NA^]"35^]"3
7^Au%J!!'e5!!'e&!!'e1!9*tY^ZSc#^V'W*!!'.s!6bHB(]j[S)#XI6Vu?YrZMCEs]DSQ.]=YBJ]Do2
6^]&6O^]+lFf`$^"!.k4I!!'/#!!'/#!!98&Xo8;#Xo8;#XmZ5iXkNgUXlfZaXmlCC!7h,MX2P&=(B+:
8('"@5$N:&)$Msh]!<)rs!<,UeGQ1;3GPq"1dfAq5s8&PnNhrTONnsd9s8N&p!;$6g!;uls!;lfm!;ul
p!!')!!!')!!!92$X8W)!X8W)!X7$#gX5a3U!!'(_rrB+/!0I6]k48S)!.k1O!9X7\!9X7\!p0LFrVur
\rVur\mf3@MgAh69k5YMElMuM:dJs9^cN*p*o9TI.q9o;r!87:urn.A(g"HAUs53h,rkA<frsA\Em#;(
lDf>W7ojmlPr/(:Nre:@Pre9_>r$21@quHR<q\8r.r"T/2rselNq>gL>qZ$W2r;ci3rW)r4r;Zi4oDem
+r;Zi4h#IKV!5I]#!5G0,ScAbmjoF$6!4)Eurk&*+rjr6;]=\'Js1eQ=rc.kNrt,0cli7$Rm/WLR!3Q2
"riQ/"riQ,!!3Q5#pAb2qr;Zi"gAh5Uk5YLae,Y(#kl:^acN*nZo*X@TquHcsrW)piqfi!2r-/-4!W_c
\r^uk`q5+"LqZ-VlrrE%pm/[(aq#L'equHZprrDoqq>gNpqZ$Vsr;chtrW)qur;ZhuoDellr;ZhugAh5
SmJm(`!3:qV[/^3hcN&OsY5eRbr;ciZrW)r[r;Zi[oDemRr;Zi[q>fLT!9WGE!9UrpJcO!ps,cf<!2]P
?rn.:srmLhlqq:u"!8m_*s1\EgrsA\EoSijjq2GC"rf-V^rf-c.r/(E,rrDtNre^Z/mK!/0pAk(8r"T#
.rY5>3rselNp]/kF!5I4f!5I]-!5J%(JcLQ+!#Y[4rhob-!1Ehas-`brriuO=r3H?Br4i7CreU1H!/UF
N!1CV&U&Y1qiW/cS!3PDa!3N^1JcO4!rtb/4g&V0QrW)pir-/'2"TWa=G=kL,8cSkj9(r;aGP\06NrGm
T!;r\mNrPsD!;ulk!;?Hi!<3#t!;c`d!8IPSX4dORX69K_X6Tb;!.k3&!2oktk1fq<!!)0E!!)/S!1<f
e^Ztme!!'e4!!)$LQN3lZdeqc#cI1"`qq:ts"4lA\f)=%rhu;1.dbi(8NW7#pN<%9'NV?u_J-(^iK`Zs
^M>`/.M>i5.M>W)+M#i<emK!52o`4n7r=nu+rXAl.%K%I*!:p0j^Y/Yf^ZT,-^]"63^]"63^]"63^Zb`
M!9=+[Xk*OQXo/5"_t!d-)#L6/]*"J!R@3rarhfk(^Tt0DVZ=L3^](M?Vn\&Y!<7lO!!&F^!5AL6XkEa
TXmH,c!!'/#!<'&!!<'&!!<'$k!3cG'X4I=QWrN/!!:gKK!<79B9)No28co%n8pC2*!!*!jp](6,s*+I
=!07#Ss,R)Trf6oQrf.&?V2jsDrr;Wkq#C'grr2ruqu=n@!3>nqiW&tZkPkO_rW)ntrW)ntrW)ntdK"k
!qZ$WYf)Pg5ZiG[Xec5^4g&M-8k5YMErW)oZrW)oZrr<$!rT8k8QiR0Go9TL[!X/MNs3ghurQb>or6bV
kf)F+sec=.sf)F+tf(t@+2#N=6`m4F?!R?]%%K'c7J,kT-Gl36sM1pZ]M>W),M#rBbM=(B?!!'e2!;n)
@'`A%2'ETL(!;m<+!<+4k!!9n8!<0al!;QTp^ZT,0^An8Kr;Zo6!5JI4!l"`Mr;Zi4blE=qdK'<bo)Jh
U4t-?,r4Doqr4Dm)!L^7mVuEt%Vu<q#VuO'p!!.nDr;cfs!1C@t!3OQIiW'%^!!*##f`2#Sk5YUd!!'/
"!!98&Xo/5$XT5L%!!'-Q!1X&\$NC)#!8mhWGQ(56G6%[@9)enf8c\oapAb')!-eCjr1sITV5=*Mr2'C
Q!i;`RkPtV`X8;nms8;rqrr<&ss8N)us3^lKWrN/!X4mUU!!'(_rr];%!3?%u!il=%r;Zo"!3?%u!3<O
.JcLB&bQ%Y*\,c=)!p0I_roVl6!9WGE"6KR`k5>8]joFQB!!;9_k5>8[k3;qu!;6Bm^V^$O!rh3VQN.*
cQi.!a"THjIg&I-5cMZAndK@M7daJ-G!7Ckqrmq"qs47!&rf%!!`m4F?!64sHqZ$V,rXJjWs,I#&!"Jo
-rIt0+r.Y-,!el>bi;id#q>gI.!Yck(r!gaJs1d4e!5Io3qd]fD!!'e4!!9n8^\n-6^Au%I!!'d+!5\^
9Xht,=55rIs!!#4]!<#+[./p.B]Dhm2RJa\pVZVaCVl0O"s/5k%r29S#p&G/MLme)>!/URRqeGa'rbCs
'N<'!\p]0:R!3PDa"0DP'Xo/5$XT5L%!!98&Xo/5"Xj[91!!'(n!6tQEs8E#q$3:,)$Mj_t!<6Hd!;ZZ
o8cSkk!;f@hG6%77rkADVrmUiGrMBFPr2'CQ!i;`Ri;ifUq>g3gnc7;Bs/XfQ!3>;_"02D%X8N#"WrT4
!!!0,#!3?%u!3:nUf`2$7WrR_OU]CGWi;iZR!9WGE"6KR`k5>8]joFQB!!;9_k5>8[k03mX!;lfs^Y8_
g!r_-PQi.!`"THjKg&7!3cMcGodK>QMdaJ-Gs3gntr6kVrpbW,ncHaGTrJgf9!65!Iq#L@&#(V5`NHf[
WquH_MrW)tTr.Y0-re1B0^\n-4^[_C(%Jg)&,P_?;'`TEU%I=)T!!'e4!!Bt9^VAM'!5I]-"2=g9^\n-
6^Au%I!!9n8^\n-4^OcI,!!'.U!!#4]_tF*/55Zi.VuF=,!<8Jc]DSQ/!/RPNrj)R%rj)I"s0DD""GiJ
6Lme)>!/UUSq.fU'r+c32rbD'*!3Q2"!3PYhY5eR)r;Zr%!3NBZ!!3-#XlfZdXT/@'r;Zo$!3Q2"!j)I
)r;Zi"[K)Nl!3>Shli7%cr;cNuq#C3krF#=!!+>6qq#C6ls%<35!!)Tis1\MWs3plFrh]Vos,R#Rs,R)
T!KO5Z!!'(j!<3#p!;ulm!;6BB!;ZZqX8N##WrT3$gAh5SkPkXb!!'(u!!92$X8N#"WrT4!!!'(b!.k4
.!!)/X!3uS)k5>8[k19UQ!!)0[!!D?`k2tCu!9WYKqZ$`\!!)0[!!;9_k5>8]joFQB!!)/R!/LXR!rq9
YiqJc>!<*&t"T/8nO8[K0O,q<#df.hsdf7nrdK8"NNW(a7!<+hT`r=6a`m4LAs2P$Iq#L@&!.b'.!f;a
CquHbRquHbRre1E1M1l7iKo#d0^An8K^[hI'%Jp/',P_?;'ETL(!<*GK!!'e5!<9h3!9*tY^ZT,-^]"6
3^B+B8^\n-6^Au%I!!'d_!.k4"!<#+Y_tF*055Zi!!<&eu!!%h2VuF"$VuO(#VuO($!!$d5!<7lTR0&e
4RJ['bM#IDMCA%Z*CB";3C@hK/XT/@'XhXqh!!'/#!<91W!!'.a!!'/#!<'#$!!'/"!!02%!3Q2"!3M%
WT)eiiqZ-?t!!)ipquHFur;ck*mf3>[qZ$Blr_!37rrDWi!5AGVs,R!Vs,R$Ws,R)Ts,R)T#EAcaWrN.
#X7QAl!;ulo!;ulm!;c]q!<3#>!!')!!<9+]!;QTpX69K_X8W+tWr`8$X8N#"WrT4!!!'(E!.k3&!6tQ
Ijo>DDk.1QL!!)0\!<;3;!!)0E!!)0\!<)$]!!)0[!!;9_k5>8[k(3TN!!'dq!;uuqiW0)\q3M']r;us
$qZ$VWmZ7=trmCedrR1_srJg[S!QG-6`rD%u%J^#&%0D'>NW+b7%K$5+M>RARM>Dr*^An93^]+<5^\@d
/%K6>-%Jp/',65LT!<!W3,K'Q^^\\!2^Yf+l!<'\#AGj1D!!'e4!!9n8^\n-6^Au%I!!'dB!07*[Xn;\
a!<#+X_Z;r#p]17Vr[?q0rNcF#!/UTOs0DS'qe?.fkkBo3!;UC*!<)urCB";3CA7f.XT/A!XoAD#XnMh
pC@qQ,Xhk)3!!'.u!!'.X!<'%f!;rr#!!'/"!!98&Xo/5$XT5L%!!'.d!.k4)!!'(]!<)ro!<<)p$31)
&s8)f`@/U*"!!#XjGPhC@!<;cns*+)7!krl&rf6mUs,R$Ws,QrPri6#!r2]htri>eor;ZWor;Qbtq>gK
os8U";!3>ts!3=rVrN#Gfs8W"t!WW5$r;Zo"!3?%u!il=%r;ZhuT)b_g!9W,<JcGcNroO1\r9""ZroWD
E!9U`j!9X.Y!9X4[iW/r>mK!1I!WW5_r;Zo]!9X4[!p0LFr;Zi[df=t"e,]FKqr.YY!!)k^rrDrurri3
!r/^XRpQ,9ms3ghr!0.!8!K@*Y%K-8/!63#^rl,"MA<$<`!-nJP!e>f\r.tC_rVuq/rXJf+!f;a6qh50
f^An8KrW!#7!5JL5!5In$rZhCVquHX/l2]Z@"ht&P!!'dc!!'dsDZd`S!5JI4!l"`Mr;Zl5!!'e4!!'c
i!2'>j55W5!5#bMV!;o"^-n#)i!<,sqiV*?NM#XCNZ2an(^B"=LrVut6kl,;uLkl'1M#IDKC@hN*CAe/
2CA7c3XfVR'Xo8;%XT5L&!!'.t!!!#sC9R[AXT5I'!3P,Yq#CDsk5YUd!!'/"!!98&Xo/5$XT5L%!!'.
G!.k4)!<)rp!<3#p$NC,&s8)fo@/9is@.jR#GQ%RBGPM1@!!*$!!!<6$s*+5;!7UrI!kuBmr/UIM!fi9
@qkXFrWrN.#rW!##!3?)!!3>nqr;ZTnqu?Qor;YgXj8]@a!36)"X4I=OX69!TWrN.#r;Zo"!3?%u!il=
%r;ZhuJcLB&ScAoUjo>DDrW!#^!9X7\!9WnRYQ+jh!9O7]k1K_9!!)0E!!D?`!9X4[!p0LFr;Zo]!9X4
[!9U]iXoJI:h>dPjq>g$cr;uoV!rrB&!;i,^!<!!!"Si&sO8&\V"98GuNs!B%`lA#+rRUo(r!iW*rXAj
2raZ'1%1W48!.b!,!-nKns,I&8re^Sar!iZ+re^XTrIkCT^V9aK^]"35^\e'3^[hI),Q%Q='`J+1'[6X
P!!'db!!'dsDZd`S!5JI4!l"`Mr;Zo6!5JI4!5Ie!JcPTH!3P)X!3PelrD`^qrBC.s!rtMa<;6Il56!&
1<;?Om<;b\V.,e/%!!%fVQ&(7qVu<q!^\e*2CAIo3C&e83C?GTsCA.]2XfVR'Xo8;#Xo&/!Xn_toC?kl
;!!'.P!!'.g!;c`uXT/@'r;Zo$!3Q2"!j)I)r;Zi"T)ch1!3=rV!3>YjrVufrrVuisrW)rtq[3<&q#C6
lra>F!qHs=(s766UrrBe2G6$+k^AiETNqWMPNrK+XV$-k"WrN.#rVur!qu?_tq#L3iquHWorW)lr_Z0\
;o`3tO!3>;Q"02D%X8N#"WrT4!!!92$X8N"uX4%'2!!)0Q!:0[ck*Q.m!!MHH!!)0\!!)0Z!!)0$!87D
Qk10M4k2u^Hjo>DDr;Zo]!9X4[!Tj@^k5>8[k(j#/!!!)uiqrfRQi%!d!rW,c!;V]U!;k4Ef)4D*%K6>
/%0-D+%0C'N!<*H*!!%QIN;rtVNW4k7%01qXAGco9!!%lQ!<*H,!!'e5!!'e3!!'e1!;cco,Q.W='EPr
Kr"Si)rZfto!5JL5!5I=iq#CE0kALI;!!'e4!!9n8^\n-6^Au%I!!'dY!.k42!;fao!!-%_r5/Y:;ufl
sqZ-OB!^8dJr)<Xrp/M%MrVuptq#LG[qksJ"r4`43rb;K7C23SF!,DK5r+bBprbDE4rbD90!3Q5#!3Q/
!!3Q%sr+ba%!3P)XjT#:_rVur#eGoTOk5YUd!!'/"!!98&Xo/5$XT5L%!!'-Q!3ZD"s8;rts82j"s8N*
!s8*0"rr<&srr<&us7ZKl!!*&p@/p9!!:'Ra^AN0T!;q'@NrK%Y^@qR.NW9(Yrr<&us8DuuX8W)!X8Dq
tX8)bns8;oq!;c]rWrW(tp&P*lec5]NrVur!f)PjP!3>;Q"02D%X8N#"WrT4!!!92$X8N"uX0r"[!.k4
4!!)0\!!)0Z!!)0B!!)0%!;lfsk5G>\k1'G3k2u^Hjo>DDr;Zo]!9X4[!p0LFr;Zi[l2ZD9\cDZf"98E
'!W`+aqZQWn!!N&s!!N0!r/UjYNrY7<df.hqhtd?N%0C'N!<!B+!<7TINW0"XNW0"V%K;4_%JKl$%K6>
-^]"35^\n-4^[hI',Q.W='ES77^]"oI!;?Kk,LZVm^XW;a^[5t:DZIQO!<'\3!<'\3!<'[(!0R?Z<;us
s<;j]<_c0T!5#hCZq^DIEq,@>Bpf%5Ar;cjsqu?dt!!)norj)I:qJ,j,!,DH4rbCTrr+Z33rG)?4rrE%
5!3Q5#!3Q2"!3PtqrG(d$!3O$:!3PkniW&t\k5YLarW)o!rW)o!rW)o!dK"k!h#R?PrrE#tquHZpq[36
#rrDKer;cltr*TU+?srR+q>^'ds1\DTrrE%BrrDusrf6dR!!)`m!3?)!!3?%u!3>hoq#C9mqYpTs!3?,
!p&P$jq#K.L!3=WM!3>;Q!3?)!rN#ntrN#qu!!)tuLB)o+PQ1^GrVur\r;Zi[q#KXZ!9V&s!9W);q#CE
Wk5YMErW)oZrW)oZrW)oZbQ*4pm/R.$m/Zq@rW<"aqZQZorri9#!!N9$!!Mimr6kMornd^8q>gF&s'u*
0r!i[NrXJjdq#L=%s,$c+rXJT%rXJf+rXAl.^]"35^\\$1%Jp/',Q%QA'`K<W'`7q2^\.[*,P(op!!'e
$!!'e4!<'\&!!'dsDZIQ<!.k3]!!'.r!;f^q!<#ml_u;jt!;e2E!;][p./d*F./m0G./a,G<;MmZ<;`Z
lZMqT=!;pR4!,D?1!,CElr+Z33rG)<3rG)92!3Q68!3PnorbCd"!3O0>!3PVg!3Q2"rN5Yk!WW5&k5YL
aTE'ZG!il;$q>gEm!!)utp]1<nr!N?$rrDNfr;cQkoDek`r;Q`soDej>rr;tAq#CEprVunXs1\=/!!)W
j!<B2"rrB+s!<3#t!;ZZm!;lfo!!'(n!;ulP!;QTpX6fleX8N%sX76/iX69!QX4.-$!71]Gk-P,j!!)0
\!!)0;!!23^`;fo#m/R.Kr;cfYnGiROm/["`!9T+<L]I>3r8R\Wrg*Tdqul`orWN0"rWM`kr6kMorJgU
QrXJg:!!*!-rrDs+pAk+#rrE%Ks,$IMrs\r;rW)j*rrE$-quHX(qZ-U?q>gF<n,WA2f`22j!!'b6^[hI
'!<9h5!!'e4!!'e)!!'dsDZIPc!.k4+!<#ms!<,sk_u;k!!!#4\./m0G!<,q!!)uqs./m0G!<+DE!;Vo
Z<;`ZlZMae$CAn50!!$cm!;pR3!<$[3!<-a2!<6g3!<-`T!9!n]XT/@'!3PYhs/l8#!3Q2"!3Pel!3PD
a!3PbkJcM_LrVultrr;Zlrr;s)q#:Bqs8N-"!;ZWp!<3#r!;?He!<,RjGPqL?!;?Hm!;ulk!;uls!<0_
4Nr8nW!:Bgd!;c]qs8)fqs7u`ns6p$ds4IAUWrN.#!3>Mfs/Z,!!3?%u!3>qrq#CDqkOAPQ[fD![JcLB
&k5Y\J!!)-]k3`6Lk5G>\k5>8[k4/KPk2u^Ek3E#!!9=+[^X<)^^[hHuiqifU"SMiq"TAPi!<1FGf)>[
KNV<GKAGlN+%JBf$%IO5r%K6A*%0-D+%K6A)%K$5"!!"8C'EBBP!!'e1!<+4m!!'e%!!9n8^]"35^\n-
4^[qL-!!'dsDZIPF!3cG'Xjd=P!!'.p!<,sj_tuXr./['B!!$!r./*`;PlTJ9<;rfpZM=M"C>]*b!<-a
4!<-a4!<-a2!!$d3!<-`g!!'.K!;ZZqXmQ/jXT5L&!!'/"!!'.l!!'.a!!'.N!.k4J!!'(J!!'(n!<3#
k!:p0f!;lfj!;HNns7cTnGQ.[Bs82lms8;rqs7QHls7cTns8E#trr<&_s7$*es7u`p!!'(r!<3#J!!'(
f!!92$X8W)!X8N"uX7?5jX6oHSnGoVH!65'>k0a50k3W/#!6P9Ak/mZ(k4/NN!!;9_k5G>\k5>8[k4/K
Pk2u^Ek.LbH!7Lr@ir&rI!<*,d!!(IFf(&h@!<-O.!!'e4!;m;\!;m9+!;m<+!;[/p!;mPk!9*tY^\n-
4^[(q#^]"35^\n-4^[_@)^ZThA^[V;U!2fhm<;"0-55nO\!;ogr!;lir./!Z<Q2K88!2ob#l2Ugde,]M
`qu?_3quHb3qZ$WsCA\)2C:F6DXo/5"Xm?#fXo8;#Xo/5"Xni%n!!'.a!!'.1!.k40!;ZZf!;c`p!;ul
n!<3#l!;?HW!<2uu!!3-#X8N%rs4m\?s82lrs7u`ns4m\=!!'(u!!'(d!!')!!!'(u!!'(j!!'(_df?H
7!.k3&!6Y?Bk.(K!!!)0[!!)0J!!)0\!!)0[!!)0R!!3-#k2u^Ek+D^+!;ZZq^\7a%ir0#Y!<2!2!!(I
Hf&Hc0%J9__!<*H-!;m<+!;d6%!<+5>!;mN2^W-?O!!'e"!!'e5!!'e4!!'e)!!'dsGQ>M.!.k3j!!'.
s<;usl_u;k!<;sc8!;og^!<&/_!<(OPfDkoLrj&[,s(_E2s(_K4!,DK5!,D3-!3Q+u`rH+AlMpperVur
#r;Zi"nc/Zlm/["`!3M(XOoPK_q>^9kqZ-Nnr;ccqlN$n`!!)rsh#RHSh>mHRrr;uuo)JXgr;ZWor;Qb
t_#OJ9nGrFd!3?)!!3?%u!3>Yj!3>;3!3<d5JcOU,!9U0ZTE"uSj8e$:!9WSI!9X7\!9X4[!9WhP!9WG
E!9WeOJcM>Apu;5RrrDuVq>e;2!5Hk\rXJi,rXJi,qZ-O=rrDg.nc/[)ci='\lMpq"rVur5r;Zi4q>g<
k!5I]A!5GuCJcOd1q,I=npr!%os&Ap6!!*!tl2^aIr7L*2q>^Mtb5_NWrW)h1hZ*YYm/Z2I!3PPe!3Q5
#!3Q2"!3Pel!3PDa!3PPeJcMqRq>^*fqu?Nnrr;`no)SObh>dPVciF(FrrDfnrW)lrrrDionc/Zjci='
HlMppcrVur!r;ZhuoDepm!3>;3!3;amJcLr6!9WhPXoJIaec>RI!9WSI!9X7\!9X4[!9WhP!9WGE!9Vc
2JcN1Yq?$Wrr8QN4a8c4Th>mNaq#L=;!!)d.q#JY>"ht$;^Au%=!<0b3!!'e5!!'e4!!'e)!!'e$Gl)^
c^PMrQ!;TUj!!!#q4ot^`<;aYr!;r)`!8,s'Q-'(,Xmc>W!;gN<!!TJ)!3H7'nGiQks/l5"!3Q5#!3Q2
"!3Pel!3PDa!3Np7JcOR+q>^6jqYpTss8V$Xr;Q`sr;Z*`hZ*YWh>m?NrrDus!!)foiW/$>"fhV'WrT3
j!<0%t!!')!!!'(u!!'(j!!'(_df?H=!.k3&!36)"k1Ka=!!VKb!9O:DnGrRNr;Zi[rVur\r;Zi[q>g<
k!9WGE!9U`jS,`Q(kQ'<:rW;utq?$Wrr8PKl\,cLBs!.4OlMpq"nc7bO!5Ie!!5JL5!5JI4!5J()!5I]
A!5Ih"JcOs6!3O<Bqc!Oqr]^5[qE=r\!*&m6oDnI_qiq-]r0=#Wr+c63h#IGWec5]Pl2UgdrVur#r;Zi
"oDepm!3PDa!3MmoZN(!+d/`qAqu6Wrrr;lrqYpTs!<;!Xqu6Wrr;Y+De,\k8lMppcgAq-O!3>Ab!3?)
!!3?%u!3>Yj!3>;3!3=TLJcPcM!9T"9JcPEC!9Vi4!9WPH!9X7\!9X4[!9WhP!9WYKqZ$WYM#`D5quZi
t!!)isr;ciVr;ciV\c;`FhuMp?n.`hA!5JI4!5It&qZ$W2rVur5r;Zi4nc/[)kBI!A]`<WaeH#M2r;c[
Xr;ci7r;ci7li?pJ!!)q^m/ZST!3OBDrG'[ZjT#:_r;Zi"kl:^crVur#r;Zi"nc/Zlk5YLanGn.@T`G#
jr;c]onc8%Wqu6Wrr;YLO!3=6B!<;Hd`;fn=r;Zhukl:^arVur!r;Zhuq>g<k!3>;3!3<R/JcLB&o`,!
SNr\JG!9X4[!9WMG!9X7\!9X4[!9WhP!9WGE!9WSIJcM\KquZcrquZQlr8RSRXoSG1huNa$rrE$4oFq;
?jo>Crh#IGikPtUtr;cf2o)Jgl!5I]I!5G0,JcP?Ar&t*[r;caZr`&[nr57q&qNV$\r0>V/dK';^nGiQ
kjo>C`huN`V!3PGb!3Q2"rN5Si!3PDa!3O`NJcNLbqu?Tpq>]CRqYpTss8W)ua8l5>huN-D!3>kpmf3?
gh#IGUkPtU`r;cesnGiQimCrJ3!3:qVJcLB&f)Pg5jo>DDh#IH;mK!+a!9X4[rT<VM!9WGE!9UrpJcOO
*!5JF3quZ3br8Qo?!(,iKl2Uh!o`4qI!"Iof!$hIW!@%U='\WQG!!'d[!!'dsJ,m@S!.k3K!!'/!!;o%
\<;lms;ucpr<;HUm_sRO%Q2Ud_Q.5j7Xj-nJ!!$c<!!'.Q!;QTpXlfZaXg\:^!9!nXX8Dtos8E#trr<&
ss5F%Ts8N)us5j=N!!'(m!;ulV!:g*=!9X=^X3UbGX671sX6Tb;!3H5$k19UG!!)0&!4)Y*k0X/1!!)0
E!!)/S!.k4@!<*'!!!'e&!;ti\!<)s"^An942#JT[!;mQ2!<*]4!<*\c!!'dt!!9n8!!9n8^WlfZ^ZU+
I^XN78!58F5<;o)\;us*$pJgthr57q&s-<S6rn.5NaoDFDhZ3Xjq>gP1kQ'lJ!3PGb"g%b)XT5KK!!'.
g!;c`rXbd%8!;c]qWrN.os5F%Ss2Y0AWrN.ps7lZc!<3#u!;HNn!<3#O!!'(`!!TD'!36+#m/Z,G!3>:
s!3<d5JcO'r!9U]ii;`l?UAt;VkPteK!!)-]k0<r,k2u^Ek4&G'!9=+[^SCl.iW.uD!!'e2!<+hO,OYX
3,Q.W?'`SlO!!'db!;QTp^ZU+I^UF38!!'._!8@MM;ucpl<;?Ol_sRO(JGe'[!:'UbXkWpTC;Ku7!!'.
H!!'.a!!'.e!.k49!!'(7!;c]q!;?H]!:p3ds31NDX8;nks6fsZs8;r)!!'(H!!3-#X671sX.TI$!!)0
,!.t7Ok(3R7!!)0,!!)0E!!)02!.k3^!;loe!;kd<!65*=2#8Hd!;n)A!;R>k!7:cH^\n-4^Wc`Y^[6R
KJ,m?@!/U^T<;eu\55\@[!<,sm!;j\&!<.NHfX1_M!<6f:!!'/"!!'.f!9*tYXlfZaXh=^d!7V#@rr<&
us53nQs60O?!;HN_!:p09!9aC_X8N"uX3CVEX671sX761A!.k3&!42_+k5>8[k1'J-!!)0E!!)/j!.k4
'!;Zcd!;b]t!9sR`2#RFS2#8Hd!;n)A!;[E#!!'de!!'du!!'dY!!'dsJ,m@M!.k3H!;\nY<:^+d_u9Z
-!<.NHfDkpNQ*C>hCA\)3C@qT$!!'.S!!'.c!!'.I!!3-#XlfZaXe5ZG!:Kp^s4[PLrr<&us3LcFs8;r
ms7-0[s7--iX4[IQX6KZc!3=?E!3>:s!3=TLJcLB&NrT1Bo`4(R!9WMG!9VN+!9WYKqZ$WYM#`_>!5J4
-quZm"mf<7EZiL"\!5JI4q]kn:pAb1<rY,DY!!)p2Y5eR;lN#oE!5I]I!5H2IJcOX-!3PqpqEFpYnGrI
(p&P)Br;chIrn%2Nr0?[MhuEbZkQ(TsquHb3`rP0#!3OHF!3PDa!3PbkJcMeN!3>enq#Ba^o)Sdir;c`
p!!)rsdK'4F!3?%uqu?3eo)A[iYQ+[(e,]:E!3>:s!3<R/JcOj3!9TpSjo>DDScJ$U!9VK*!9WGE!9WS
IJcMSHq?$Kn!5J4-r8R\U[fH=_quHX>mK!/!rW)p3q#JM:!5J.+"ht&P!!'dZ!!3-#^ZU:N^RtRY!:Kp
a4oeRZ!!'.p!;sb/!;qBHWql_nQ-fTl!<-`A!!'.n!!KD(XT/>$XipbFXlfZaXjd?&!4r7,s8)crX60K
Ys7u]qs8DuG!;ulp!;ule!;ZZo!<3#X!8mhWX7QAqWrT1#!3=<D!3>L`qkX:nM#`,-p](<VMu]pZ!9Wn
R"m,gI!!)0I!9*tYk2u^Ek.Lbb!!'dt!7:fE!pfpdip?aF6L+XN2#dRB!<+hS!;eVN!!'e5,OYX4,Q&7
p!9F1\^WQTW^ZU:N^[V;U!9X=^XgeB/53r7L_uIXJ!;qBGWr;u"bKBn`Q0\MMbMW@#XmH)gC@VA0!!'.
M!;QTpXlfZaXg\;)!!'(Z!7q5Ks5!bIrr<&ss766is8;rsrr<&i!<3#t!;lfo!!')!s6p$as1\R"!!'(
C!!'(_V#[R^!.k4<!!)/J!3H5$k19UB!!)0+!!3-#k2u^Ek+D^+!8IPS^\@g.ipZsG6L=dN2!b5;2#]?
0!<+hC!<+5@'XduA^\Rp1^\n-4^WQTW^ZU:N^XN78!2oktXnVnq_tjB5JH!alJH!ai!!:?e!</5`bO#<
-bMrR&JA)$<!!'.t!!'/"!!'.E!!'.g!;c`rXbd%0!:p0jX6ouWrr<&ts7?<hs8N)ss766`s8;rrs7HB
g!;ZZ'!!'(r!!'(u!!'(b!9*tYX66;ZX1\Lb!5AL6k/@=P!:g*ik5#&Xk5>8[k0!`)k2u^Ek4&G'!.k4
Kipd$H6L=dN2!b592#I@O1]m^X^B"6Xp&P%9rY5,-oDem+^]4ALdK'(C!5I]N!5GuCJcNF`r58F4s+'m
fqu?fAb5hI`mK!1.!6aI(!.anG!3Phm!,CQp!3OcOli7$faoDFDk5YLalMuM:JcP`Ln,E@fr;ZEir;Zc
squ?9gpAb'kqu6`u!36,!s7ZNhs7-0d!!'(8!!'(D!!3-#X66;ZX.THE!.k4B!!)03!!)/s!!23^b5_P
)k5YMEe,Y(#aT)=Ug].>hrW)lUnGrJRrW)Efr&"<Or\X6Ip,)[Ir&"9Ns!.@?![@[Fr$0kpci='\aT)=
Um=kFk!5F?jPlLfdmf;bU!3Q5#r58I5oum75!mAaeq9/:.rlb9@!6aL)!.akFrbD?2quHb3UAt:rkQ'T
B!3PDa!3Np7JcO^/!3=lT!3>bmmf*7eq>^3ir;Q`s!!)lqo`4^cr;c`prW)lrq>g?k_>ra!!3=3A!3>:
Z!3>ViJcMkP!9W&:!9X7\JcN+W!9VZ/q#CEWk5YME[fE3(!5IFl]E%lhn,WGSlN$o@quH^Qs"sBKpGDa
Ir&"6M!$h@@s!.LCrZf#To)K!0^An8K!5HVU!5I]N!5Ih"JcP6>!3M^jr5/L7rrDZ6rW)uNrg!<&rrE&
Ap]1<:i;`k.q>gG.p]1;.li=d##-G!-!3H7'b5_SD!3PDa!3Mmo])Vi3aT0Kaj8],Zrr;osrr;uuq>^*
fq#:?oquHWorrDrrqZ-HlXT/X-WrN.#!36)"b5_OCkG80Ze,Y7(!9X4[JcLB&ec5p:jo>DD!9VB'!9WY
KqZ$WYM#bs(!5Gf>nc8[KqZ-WTc2dc!o`5"KrVusU!<+hO!<+hN!!"8C!<)uu,GG/<^ZPUV!!'dsK`Jm
$!1j/jXl]Vt!<0n5!<0n7!;Xh<!<11@!<:^LQ28Z(!;an:!!(4AbO,B0bP;/;])[BY!;pU,!;pTI!9aC
_XiLJBXlfZaXmlCC!9jI`X.'+b!;ZZp!<3#t!;$3j!;c`n!;QTe!;lcr!<3#t!;c`p!;lfn!;c`f!42_
+X3^kB!!'(_V#[R*!2KSpk265k!.k4=!!)0&!!)0E!!)0I!.k49!!'d?!<2!S!;tjN!;6Bm^\\$26KA.
E2#74O1]dXW2#I@O2!Y/>,O,9D!!'e4!!'dV!!3-#^ZUFR^RtS8!!'.H!9O:\_tjB2_ta<3b5_P?b64i
F!!'.s!;i#]!;t"?!;Xh:!<(+0!;t%>!<)ur]DDU(CAIr0C9%=7Xo/5"Xo8=D!!'.a!!'.N!.k1NX.01
hrr<&qrrN0#X8;nps8N#u!;uis!;ZZn!;QTj!<3#u!;?Em!;ulo!;ZZp!;ZZG!7h,MX8N"uX2k8@X6kr
ENW?,:!6kKDk-k?D!!)/^!29Gnk5>8[k2ua(!!)0E!!)/p!.k4"!<2!T!;PRR!;tj=!<5CJ!;uos2#74
M2#74M2!b5B,Q@cC,N\t+^Y&VO!!'dS!!'dsM#b<\!.k3C!<0n5!;OJ3!;sb5!<3&uJH!^l!<11AWqHG
gPlLg`bPqS<bP_G=bO>N0bPM;;]D;O'CB";6C@2)q!!'.;!!'.I!;QTpXlfZaXg\:^!4i1-rr<&ss7cT
grr<&us8N)ps8;rorrE)q!;uls!;HKn!;uln!:p0P!!'(K!:KmfX2b2?X65KCX6Tb;!.k3&!;lfsk.q#
tk/dT)!!)0E!!)/S!.k1O!5J+*r8RVSpYl/Qr8Qi=!(,B>q)%pJr\XX3li@&1UAtD2!!'e4!6Y?B^ZUF
R^XN78!6bECXn)Pj_u'N/_Z0]7_u'N4JH*g_!;r,\Q21LWbPVA>bO5H/bPM;;]Cu='CB";3C=E76!!B>
'!3O9A!3PVgqZ$VuM#`nC!3>GdklCS[nc8Faq>gBlquH`rq#L6jrrDfn!!)rspAk-kqZ!Jo"02D%X6'E
A!!'(_NW?,n!.k42!!)/T!.k4;!!D?`!9V<%!9WGE!9WeOJcO[.!5HDOr8RYTp>Z)Pro3hUl2UfNg]7(
*q>gINlN$r0li=Wt"ht$;^Au$o!;QTp^ZUFR^UF33!!'.d!87GN_u0T/_uB`9_tsH3JH*g_!;MiR!;jt
7!:^'gbP;/;]Cl7&CB";3C:=39!!TJ)!3H7'`W-"@k5YLalMuM:jT#:]U]C>ms8VWip]'sfqu?<hp](3
mrr2rurVuisrr;Zlp&F=X_#OY>!!'&"X2k8B!!'(_NW?,Q!3lM(k0j<^!0$s^jo>DD!9X1Zb5_P)k5YM
Ee,Y@+!5J@1]`@uir;cQNli7%#rW)pap&O(PpGD^Hr&![=s!,kjdf9B_`W-"Rm>:^s!5F?jeGoTO[K-6
CrrE'!p;?S(r."djr;Zi"o`4fQoDng4cN*rZ!!)uurbA80!3P>_iW&t\k5YLa]`=`+!3>,[[/g+(r;Zh
urW)rtqZ-HloDnghrrDipp]('ir;Z3crr;uur;XD0l2Ugb`W-">kDfPCnGn.@li7%JQiQg[!9T:A[K$<
ic2dY?!9WGE!9U`jPlLg!mf;#@ro3hUpYtB:r'K*;rrDmPpAk+JhuEbl]E%X*!5JI4!5HJQ!5I]R!5Ih
"JcO^/!3O9ArknX6pVZb+ri,tArdY!ln,WL@qj$aQr6+R0rQE^k!3P_j_>jS<r;Zi"`rH/@!3PDa!3Mm
oX8i7$fDsG%q>^6jr;Z]qq>^$dr;ZKkpAb!irVllthuEbXYlFd)r;ZhuqZ+e>!3>:C!3=TLJcPNF!9T7
@WrN.^f`9\*!9X4[!9V6#!9WYKqZ$WYM#`,-rW)rWiW/mCfDte*p&P"Imf<>D!!)!Y!5H>Ms1dUpiW&t
nkD92R]`<WaaoMFYo)S]grQF[1!8.16nc8U2rrDWjr6)nV!3OfPli@'f`;fn?k5YLanGn.@K`M,Pqu?H
lr;Z]qqZ$*dr;ZKkpAb!ir;Z3crr;3_q#CDq_#XM9blIP>!3>:C!3<R/JcLB&ZiC*gciEV:s5q9#!9WG
E!9WSIJcOO*!5ICk!5H_Xq#L=Zf)Ye,o)SbHmf<8Bj8cmo"2=iN^W?HW!!'dsN<$_d!2fesXks*ZXT7&
TrlY9Ar2T_=n,WBOmf<@1nc8O0pAk3)N;s'_!3NC%!6Y?BXlfZaXjd?&!:g*iX5<mWX4[LPrr<&os7lZ
ms8;rqrr<&g!<3#k!;HNi!;lfe!;ulA!7_&OWrT3$`rH+?m<AGO!3:qV^&S/qhZ*Z=kl?;8T`>2W!9WG
+!9*tYk2u^Ek.LbH!42b*6MCKZ6Jhdk!;n\D!!'dS!:g*n^An8K!5JI4s1cYU!5I]V!5J%(JcLZ.r6,)
>s/PDcr0?%;r6,'>rdaqIr4Cec!3Q+u^&S>=!!',$Xo/8"XjI.E!!'.a!!'.1!.k3h!;-<c!<3#r!;ul
W!;Z]ns8E#ts8;rqs766gs7$'hX2+f2!!TD'!36+#r;ckuaT)=AkB?p,lMuM:JcLi3!9WqS_uKu'!!)-
]k5>;[k0!`+!!)0E!!)/S!5SX8^Z,:o^Z#7D!;StP!!'dR!:Kpc1njsM^\\!3^AuFW!5I]V!5I"`N;rs
\pAjR\!3Nm6rk&0Ql2Uje!;r)^!8.AO]DR3Y!;sI?!7h,MXnr(uXi^VDXmH,c!!'-X!8%8OX5a0[X31M
6!;$6]!!0,#r;YCLq>^Eor;Z?gr;WJk!3>ts!3>>aiW&tZkB?p,]`=i.!9W;A!p0I_T`>)TirFZ2m/R.
KqZ$WYaoDG(k5YMEnGn.@K`D0@63.#crBgA]!5G];r\XWTr\Wp@!P\WL!!'e4!!'dV!;QTp^ZURV^UF2
p!6"s9])p.U!<1XF!!'/#!<1XK!</8C!;HQl]DR3T]@d/aXi:A:!!'/"!!'.<!!'.a!!'.e!.k35!:p0
e!!')!!<3#r!<3#O!:Ts^!<3#u!<3#a!!'(r!6"p<X8N"uX2Fu>!!'(_G6"\:!.k3k!!)/p!7_&Lk.Uf
qk5>8[k4er"!!)0E!!)02!.k3F!!#@`!<,=M!5JU41uJ?6^ZkgN!!'dN!!'e$NVe\8^PMrB!:p3g])g(
Tr7LZBr7M#Lqj#n9qn)fWq7H"ojT#:_^]4A:i;hj;!3PDa!3Np7JcNOco)JIbr;Zcsqu>m\o)S7ZpAk-
khuEbXdfAe9!3<s:!3>:,!3>ViJcLB&JcP]K!9V&s!9VE(q#CEWk5YME[fD-_!5JL5mJm7%blIc1irK'
8nc8YGrrCjTr&!C5!5H\Wo`,!,_#OJMkD]JVrW)o3rW)o3rW)o3!!%TNd/X0KlMppegAq8(rO_mX!WW5
4p]16E!!)k\h>m;^rdapYci=-L!!'h8!3O-=!WW5&k5YLarW)o!rW)o!rW)o![/c`t!3>Dc!3?)!h>m'
Fp]16l!!)lqq>gNpnc8[hq>g!aoDnghiW&tZ^An87pAiA:!3>:,!3?)!rN#ntrN#ntrN#/_JcP!7!9WS
I!9UTfS,`QOkQ'68!9V)t!9WYKqZ$WYrW)oZrW)oZrW)oZScF?Bk5YKKjo>It!!)pRoDneGg]77/quE\
r"ht&P!!'dl!9*tY^ZURY^An8Kr;Zo6!5JI4!l"`Mr;Zi4df=t"`W6"j!!)tJs1A'Y!!*#1q#L?F!!)k
\rVur#m/Zk\pUgA(r4AR$oDf&s!3H5$Xhau;XlfZdXT/@'r;Zo$!3Q2"!Nc>%Xo/5"XbZt?!<2uu!;6B
gs7lZmrr<&qs8E!"WrN.ts7?<hs82lks8;rqs7?<hs5a6r!!TD'WrN.#aT2,:!3>:,"02D%X8N#"WrT4
!!!92$X8N"uX3CWr!1a)ik2u_r!;Z[!joFND!9V)t!9WGE"6KR`k5>8]joFQB!!;9_k5>8[k(3U.!!'d
b!!'dH!!#@b!9F4Y2"UeG1tr$01u836!!'dQ!!'e&!;sUb!!3-#^ZUX[^An8KqZ$W2r;Zo6!5JI4!5Gr
B_uKe>ec5]Pli?)Hr7Lpt!35kI!!)u0p]1<GrrDq]h>mA`!6b6>rjr.1b5_OE`;fn?p&Ophr2nQN!3PD
a"0DP'Xnr(uXo/5$XT5L%!!'.d!0@0\X7QDP!!'(G!9sOY!<3#u!;lfr!;lips7?<hs82lls8)fqs7-0
hs4dSSX6fo?!!'(g!;rnL!!'(e@/F=6WrN.#qZ$Vsr;Zo"!3?%u!3;^lgAh69ec5^4eGt1$iW&u@`;fo
#mf<:Jp&O(P!9WGE"6KR`k5,,Yk5>8]joFQB!!)01!.k3Q!!'du!;n\G!;n[/!;-<l^\n-4^[D.&^XE/
_^ZUX[^An8KqZ$W2r;Zl5!!'e4!!'ci!0[E^JH+:%JH"1$Wr(HKf`/S_fE/[sXn;\nQ.uB;]Dg!p!5SX
8Xo/5"XmZ5iXkNjO!!'.a!!B>'!3Q+u!3Q2"!j)I)r;Zi"blE=qblHr,!3>bmrr;`nr;ZBhr;Q`sr;cZ
nNWAqV!3?%u!3>Pg!3=QK!3>9j"02D%X8;ksX8N#"WrT4!!!''O!.k4M!!)/9!65'>k5>8[k3i9Mk1'G
5!!)0E!!D?`!9X.Y!9X4[!p0LFr;Zi[[K)Kk!5J%(YQ4YZnc8YGkPtS_r\W+)!5H>M!5J1,q>^N1df9B
_kDob\!!'b6rkAL7!5JI4!l"`Mr;Zi4l2ZD9h>dPXec>]LrdY%%Wr1KL!;+qD]C#[Z!<0S1!<0UH!!'.
b!87DQXmQ/hXj[7MXmH,c!!KD(!3H8#XTAJ&Xo/5$XT5L%!!'-n!3-#!X4dRP!;-9k!:p0R!<3#h!<3#
t!<2uu!<3#g!<3#d!9X=^X2+c9X6orfX7?8M!!'(_?j*M1!36,!Wr`8$X8N#"WrT4!!!'(K!.k4D!!)/
B!4)Y*k0X2!!!)0L!!)01!!)0E!!MEa!9O:\joPM_k5>8\jo>DDr;Zi[L]Fma!5HbYYQ4SXfDtOD!5H_
X!5Iq%!5I4fq#LB.mZ7:\rrE)6rW!#7!5JI4!l"`Mr;Zi4blE=qnGiQkiW/t.ri-'NJCr'Cf_kgEf`/S
O!<11+!<9(s]<hP<XjmFH!!'.h!!'.L!<'%f!;ru!!<92#!!98&Xo/5$XT5L%!!'-Q!5/@4X5X-Ms8;r
ns8Duc!<3#_!;c`a!;ulF!;ZZqX3:PDX6orfX4..L!<&td@/R)*!<9,!!!92$X8N#"WrT4!!!'(.!/U[
Uk5,.1!6,!=k0*f*k4AZN!!)00!<)'J!;u!Z!<;3\!!;9_k5>8]joFQB!!)0H!.k3&!;-<l^ZYXt^\%U
(1qNbG!!U+;!5ANKmK!1"ec5]bm>q.*"2=g9^\n-6^Au%I!!9n8^\n-4^RkLX!!!#sJH)YLJGRps!;G.
G]C,atbP;,<Xn2VmWr0L-!!'.W!3?/(XT/@'!3PYhr2oVliW&t\k5YUd!!'/"!!98&Xo/5$XT5L%!!'.
M!.k3p!:g*f!;6B\!;ulm!!'(o!<)uos8;otX7ZJis.fYh!!TD'!36+#mK!0cec5]Nk?nCm!!'(u!!92
$X8N#!WrN.#r;ZhuL]E#,fDkp6kPtVF`W3mV"m,dbjoFQ3!;u!9!;QTpk2u^Hjo>DDr;Zo]!9X4[!p0L
Fr;Zi[blFpI!5I%ap&G*-`W6$*qZ-X_dfA_7qD?1l!5I4fq#CE0m/R.$r;Zi4f)PfckDo_[!!'e4!!9n
8^\n-6^Au%I!!'cc!;ZZqXi^VDXkj'UJ-)aNJH!^l!<1XJ!<1XN!<:[QfXncp!<0V&!;t%.!<0V0Wr0K
@!;-<lXjR1LXmH)gXo/5"Xk<[U!!'.a!!B>'!3Q2"!j)I)r;Zo$!3Q2"!3N[0`W-">aoDFBp&O=WpAY*
mrr;iqp\t3nr;ZBhr;Z0bpAaX_s8W#s`W-">dJs9Jo)SXf!3?%u!3=]O!3>9j"02D%X8N#"WrT4!!!92
$X8N"uX6K\J!!)0P!8.>Pk,SKA!!)0U!8IPSk3W-Kk5>8[k19S5k3W0G!!D?`!9X4[!p0LFr;Zo]!9X4
[!9TmRJcOs6r^$h(!!#>P!!*!bl2^fMr;Zi4lN$o@q>gCLmJs?h!5JI4!5J%(rkJ=1!5J4-iW&tnkDo_
[!!'e4!!9n8^\n-6^Au%I!!'d_!.k3p!;q?IWp9WbXo/8"]CGt"bPqSAJGB0FXo/5"]DfG@WrBVh!;HN
oXo/5"XmlDjXnr(uXk*OQXlfZdXT/@'r;Zo$!3Q2"!Nc>%Xo/5"XbZtE!;lfd!<)utrrT5$!;c`g!;ul
s!<2uu!<3#s!!'(u!;?Hh!<3#p!;lfJ!5nj;X8N"uX762hX8;ksX5<pQ!!'(_?j!G0!3?%u!il=%r;Zo
"!3?%u!3=?EJcN4Z!9Vu8!9WtTJcPcM!9X4[!9WeOroX(X!9Vl5!9WGE"6KR`k5>8]joFQB!!;9_k5>8
[k(3TH!!'dS!<)s"6:(\M6L4^M6LOpR2#RFP2#@:N1tDX,^\e*$!!'dd!!'ds!!'de!!3-#^ZURV^]"6
3^]"63^]"63^U4&u!!'.u!9sRaWr@P0!!'Y#!<11A!<%HA!<9(s]Dei#!<.NJ!7LoJXm5reXk3URXmuJ
c!!'.Q!!'.a!!'/#!<'&!!<'&!!<'%a!.k4#!!'(\!;ulZ!;ZZf!<3#u!;QTk!;HNn!<3#s!;uls!<2u
u!;ulJ!!'(c!!'(t!8RVTX60H_X4I=OX6iOV8cYpk!<&tt!<&tt!<&si!2';lk2ZMo!9sOak3E!Ik1BY
6k2u^Ek4Sf7!!)0E!!)0\!<)'Z!<)'Z!<)'.!.k4=!!'dM!!5JR!;o1S!<5Ca!;o1Y!;QWm2#[LQ2#74
O1napA!!'e#!!'e4!!'dc!!'dsN<$``!.k3^!!'.[!;rkc!;6Bm]B]IqJG0'CWr0Kt!;qAp!5JR7Xm?#
fXo/5"Xks-S!!'.a!!'.1!.k4C!!'(Y!;ulZ!;ZZc!;?Hj!;ZZp!<3&ss8E#rrr<&srr<&us-j#b!!'(
d!!'(u!!'(O!!'(_8cYpX!.k3d!!)0"!.k3j!!)0J!!)0[!!)07!!3-#k2u^Ek+D^-!!0h7aT20(o)Sb
Vr;cg`rrE$Tr;cgRq>gFMrW)jQq#Hc^"ht$;^Au%=!;Z]o^X`Ab^ZURV^XN78!7(WFXm#fcWr@MKWmUn
IJGoQIJGoQKJG]EIWr<"u]Cu=)JGT?EJ@#=:!!TJ)!3H7'l2^dbec5]Pm/["`!3M(XRfEGhklCY]jT,/
Wo`4L]rrDoqquHBh!!)rskQ%dd"fhV'WrT3c!<&tk!9*tYX63(TX1\Lb!9O7]k+2R)!;Z[!jo>DD!9WP
HrT;Z2!9WGE!9WeOJcPNF!5FKniW/pDr;Zmc!!)[K!WW58rW)jQr;cgRaoLN'!5I@j!5HDOq#CE0kD]J
V[fE]6!3OZLdfB;riW/tio`4uAr;chIrrE(Lo)Jfn!;Z]oJG]EFJ@,@WXlKKZ!!'.5!!'.a!!'.e!.k4
L!!''q!;ul]!;Z]ps7HBdrr<&irrN0#X8W+ls8N)ss2tE.!!'(V!!'(5!!3-#X63(TX.TI7!!)/n!1Nr
gk32lT!!)0<!!)0O!6Y?Bk2u^Ek0sB_!6P9A^XN5`^ZY[t!;o1\!<+eW!&OZUr&"6Mr\UGOj8]1pr;Zi
4\c;`Fm>_"&!5F?jQ2goemK!08li7$fq#L?)p&P)BquHb^rrE(LrW!%N!.]Uj!;qBE!<.N3!3cG'Xo/5
"Xk<^6!!'.a!!'.7!.k40!!'(f!;ul`!!'(q!;ulj!;HNn!;6Bls7u`ks8)fqs-s)d!!'(u!!'(2!!'(
_8cYp^!.k3Q!!)05!<)ruk(WlV!!)0[!!)/u!;QTpk2u^Ek-k?8!!'e4!<'[I!20Am6N$o`6M^]^2#I@
O2#REh!!'dj!!'du!;lfs^UaCF^ZURV^Ztlf!!'/"!<'%k!1s8hJE[(2!;sJ(!!/>brIFkIrg!K`s+(+
Lr.+D>qLH]g!3Q%sjo>C`j8]1^]Dr!5!3PDa!3Mmoj8]1\r;cesVuZ)_r;YdWr;ZNlp&G$loDeUdqZ$3
gec5]Nh>dPVj8]1\n,UW3!3>9T!3=TLYQ+[cr;cfYg]2p+U&Y2UiW/oW!9W>B!9Uim!9WYKqZ$WYM#dG
Rs1eO5!5JI4!5GrB!5I@jciF&3o)JbIqZ-UPc2apG!5I.diW&tnkD]JV]`?+Rs/l8#!3Q2"!3O6@nGiQ
kh#RG)iW/ngq#CD[rW)qJrrE%`r;ZnLJ,oIsrrE'!rdaqIqLF_/pAb2q\GuW3k5YLanGndRs/Z,!!3?%
u!3>qr]`8&5h#RHSmJun[r;ZQmqZ$Qqrr;osp&>!lrr;osqZ"P8_Z0\;_#X92!3>9T!3<R/c2dn,rVur
\r;Zi[^]=*/!9T7@JcP`L!9Ufl!9WGE!9WSIRfEN)!5JL5!5JI4!5J.+XoJI:ec>LGr^-A[r'HkQi;`k
mmf3L*!5ANK\c;d3!5I]V!5G0,jo>Ib!3Q5#!3Q2"!3N4#q#CDscN!sWp&G)Xmf<37rrDtIrW)kHnc5c
l!3P\i"K_[+!3PYhb5_OEk5YLae,ZcS!il=%rVur!r;Zhuh#PCo!3=EGrVuZnrVuotoDnafrrDusrW)l
rVZ?Jl!3>Pg"KMO'!3<U0!3>KDq_S;RM#dJS!p0LFrVur\r;Zi[T`>)To)O@B_uKf"mf3LQ!9O:Df)Xe
1!9WGE!9Urp`rH+SrVur5r;Zi4o)Jd*eGuQKr'L2Zr'K`Mo)Jd*OT>.V!5H#D!5I]V!5J%(P5kTbrVur
#r;Zi"q>g?l!3Mppri5>cl2Um9J<fR'!35sIrW)kHrW)kH!3O3?_uKe>^]=01!3PDa!3N^1bl@aErVur
!r;Zhuo)JckcN)Dorr:mVr;ZZpq>^'equ?Wqr;Z`rr;QbtMZE_V!3<U0!3>9>!3>DcR/d6LrVur\r;Zi
[oDemlk(E`R!!)/r!6P9Ak.1No!!)0E!!)/S!9=+[^]"61^Sq5*!!'dl!!'e*!<5C\!<,=1!2okt^\.X
-^\n-4^[2$E!!'dsN<$`C!3cG'Xo8=tXk`um!!'.s!;rka!!'.p!<0V-!<%ELPlLgU!<0V0Wr2qqJGfK
IJ>N><!!'.p!!'/"!!'.1!!'.g!;c`rXbd&T!!')!!;ige!!'(q!!*&ts6TddX7cPks8;rns7?<gs8;r
qs8;rss4RIf!!'(n!!'(u!!'(N!9*tYX62;>X1\MR!!)0\!;kou!7q2Nk264>k0F$c!!)0W!<)ruk5>8
[k-k<jk2u^Ek4&G8!!'e5!!'e4!!'e1!.k4?!!#@a!<,=6!!'d\!!'e3!6"p<^V9dE!!'dsN<$`&!6kK
DXo8;#Xo/5"XhXqd!;rkV!;sJ)!<7T?!;sJ/Wr)krJ,fTA!!'.J!!'.<!!3-#Xg\91XlfZaXm5tT!!')
!!!'(u!!'(l!2'>is6'I[!;lfp!;ulf!;c`n!<3#i!!'(H!!'(n!6Y?BX1833!!'(_1]XSL!9=+[k5G>
\k5>8[k,A?>!!)0V!8.>Pk.grsk3W/l!!)0E!!)02!3cG'^]"35^\n-4^\n04^Z,=L!!'dm!!'d]!;o1
_!.k42!!'dB!!'e$NVe\8^PMsf!!'/#!!'/"!!'/"!<918!!'.[!!'/#!!'%tWo=$V]D)@+JFW[?]Def
2];isQY5eR)eH"S/!3PDa!3Np7`rH+?rVur!r;Zhur;ckubQ.57!3>&Y!3?)!r;YaVr;Z]qqu?3equ?T
pJcPWI!3<O.!3>9>!3>ViP5kUFrVur\r;Zi[r;Zo]joE-r!9W5?!9WDDJcNdj!9Uuqq#CEWk5YME[fFY
Q!5JL5!5JI4!5JC2s1cVTXT8>erW)j_i;`lY^Q&9o^\e'6^Au"K!<BmC!!'dsN<$`Z!1<feXo8;#Xo/5
"Xnr+uXo&0k!<0"]!;ccq]B0+kWq?>lXgeA_!!'/!!!TJ)XT/@'\,ZR1!3PDa!3Mmoj8]1\rVur!r;Zh
uqZ-YsYlO%hrr:pWqu?Wqr;Z9er;ZEi!3>GdUAt:pqu?o$!36)"X6]i0!!'(_1]XT+!3cG'k5G>\k5>8
[k5,/Yk2cSp!94%Zk+MeC!!)0Z!!VKbjo>DD[K$<im/["`!9T+<qZ$W2rW)i1q#CQ4^An8KT)dXH!(-Y
b!^Zker'J^0!5IXrYQ+[<e,\J.!5I]V!5H2I`rH+ArW)htq#CQ"XT/@'df??I!P8@2])hs4JF!:6Wr)k
]!!'-j!;c`rXgJ-/XlfZaXmlCT!!')!!;ihn!!NA'WrN.#L]I&Iqu6Wrqu?0dr;YgX!3=EG`rH+?]`@j
.!3>9>!3<R/bl@b+rW)iXq#CQ[jo>DDblE=qmf3@MPlLgH[/^3hk5YMElN!@Rs1eO5qnMk*rkG'*!5In
$!5J@1nGrPTPlT54!5JI4!5GuC!WW58kD92RTE+'Rs/l8#qlTSmriNU/l2Uje!<.N=!!'.l!;sJ.JF*@
7Wo!fJ!!'/"!!'.e!6Y?BXlfZaXjd?U!<9,!!;ihk!<0%a!4Dk.WrW/!nGiQinc8C`r;cHir;Vu]kl:^
ar;Zhu[/^3-m3)9K!3:qVquHcZrW)iXpAk3TT)\lRm/R.KQiOMo!9X4[!9Vc2iW&u@k5YME]`?.S!l"`
MrVur5r;Zi4r;cl4qu?`3dK"k!j8]1pg].>h`W5o:!5Gl@!5I]R!5J%(PlLlf!3Q5#!3Q2"!3Q2"!j/R
)r;Zi"SH/S<n,W%[r4DlWmf<@!!34lU!3P#V!3Q(ta8c4B]E%a-!3PDa!3N^1cN"$I!3?)!!3?%u!3?%
us/Z%t!3=<DdK'4FiW/`Qmf<=do`47W!3=lT!3<p9!3<I,!3>9*!3>DcRfENP!9X7\!9X4[!9X4[s5s4
Z!TjB6!4Dk-k1fq:k4AZ!!!)/i!!3-#k2u^Ek+D_8!!'e5!!'e4!!'e2!<9h5!!'e4!!'dX!!'e'!.k3
>!!'e!!6Y?B^ZUFR^XN7f!!'/#!!'/"!!'.u!<92#!!'/"!!'.h!8dbVXk3XOJDpS,]DR3W!;6El])o"
E]9<6V!!'..!!'.g!;c`rXbd&T!!')!!!'(u!!'(s!<9,!!!'(u!!'(D!!'(Q!!!#ss5F%Qs7$*ds2P,
E!!'(K!9*tYX61T*X1\MR!!)0\!!)0[!!)0Y!<;3\!!)0[!!)05!;6Bmk)KFn!;lfsk-P*gk2u^Ek4&G
8!!'e5!!'e4!!'e1!!E;:^Au%H!!'cn!:Bge6JVVA^Z5@p^Y&V4!!U+;!5ANK])_X,!5I]R!5GuCbl@a
GrVur#r;Zi"q#CN!XT5L$!!'.L!7ClFJDgM-]Dhm1JFNX;])eqDpAb5r!9F1\Xel(&XT/@'!3H7.!!'.
a!!'.e!1<feX8W)!X8N"uX8)_uX/c6$!;ultX.o[ms69UZ!<2uu!<)rf!;c`i!!'(\!!'(K!7UuPWrN.
#!3<L-!WW5$k9'c*TE+$Q!9X7\!9X4[!9X(W"6S_Gk552Zk.:V_!!)0G!;lfsk,&+^jo>DD!9WMGb5_P
)k5YMEe,Z]Q!5JL5qnMk*s1dduX8i78irK!DqZ)3Jk5YLsZ2am>m>:^s!5F?jqZ$VurW)htpAk5qScJc
jrdanH!3ONHr4<!0]>joX!!'.K!9*tYXlfZaXh=_T!!')!!;ihk!<9+J!6YBAs82isX5a3Xs7$*cs8)e
J!<)ruX0M^*X61T*X761R!!)0\!;kpT!<)uuk*,iGk4J_+!6P9Ak.1Qg!!)0E!!)/j!7V#J^\n-4^]"3
5^\n-4^\.X-^\@g/^XiJ%!!'e!!<#7@!8mhW^T7D?^An8K!5AL6ZiC*@kD92RlN!RXriQ,!!3Q5#!3Q2
"!3Pqp!Nc@t!<91!!<0"j!!'.q!;?KmJF*@9WWKfEWm^qJXk3X(!!TJ)!3H7'ZiC.-!3PDa!3MmolN$p
br;ZhurVur!r;Zhup&G)np]1>p^]<Qurr;Tj!3>JeqZ$'cqu>IPpAb2oX8iF)!!'&"X69Q,!!'(_+98I
l!4Mt-k5>8[k5G>\k5>8[k4ScTk4erVk4AYL!!)0>!5ed:k.q&a!!VKb!9O:DZ2amem/["`!9T+<qZ$W
2rVur5r;Zi4r;cl4qu?`3rVur5U&a`a!5IXrr^*gho`,!,_#OJMciE&*!5I]R!5H2I`rH+ArVur#r;Zi
"r;cl"qu?`!rVur#ec<nor2TMl!3PPer.+59ql9Gl_#OJ;_Z0`<!3NL+!3PDa!3PbkP5kT`rVur!r;Zh
ur;Zo"WrW(u!3?)!!3;dnr;ZNl!3>qrnc8Lcnc8Re\GuW1pAiA:!3<X1q#CDqk9'c*[fFYQ!9X7\!9X4
[!9X4[s5s4Z!9X7\!9VW._uKf"^];CT!9V)t!9X7\ZiC*gk5YMElN!=Q!5JL5!5JI4!5JC2s1eO5!P\X
,!<9gf!!'dE!:p3j6BV>r!!'d?!!3-#^ZU[Y^RtSf!!'/#!!'/"!!'.u!<92#!!'.m!<91T!!'.g!9jL
]Wo3sUJF<L9WnRNE!!'.a!6Y?BXlfZaXjd?T!!')!!!'(u!!'(s!<9,!!!'(k!<9+q!9*tYX474Js5<t
Ss7u`j!;ukY!9aC_X0DX)X6g]"('(Cl!;c`rk5G>\k5>8[k5,/Yk5G>\k48TQk1Te8k10Na!42_+k0O+
f!!)0E!!)/p!65'>^\n02^\@d2^V9c`q#CE0gAlg*!WW58fDkodZN(*B!!'b8!5H:R!!'dsO9!&c!0[B
_Xo/7uXn_r"!3N@'Xn_qsXfDI$JH#WIWr@P?!:g-gJGuSC!<0"t]DS]&!!'.R!!'.]!7:cNXT/@'!3NB
6!;QTpXlfZaXg\;T!!'(u!<&tn!!B:&!3>nq!3=WMf)YgMrrDlpj8f&VpAjpep&G)nrW([Q!3<F+#-._
(WrT3$rW';*!3>8u!3>DcR/d6Lr;cfYp](HZjoFNDq>^NXM?)$(!9Vo6!9W);f)Q$;!!)-]k2ruM!WW5
_k5YMETE*==rkIn%!5HVUec5]bXoP$n"2=iN^ZbaA!!'dsO9!&F!1X&gXmZ5iXo/73!;qBI!<0"rJG0$
DXmc>gWrBX/!<9Y3])_c/rk&00Nr\DE"0DR*Xg8!-XmH,c!!'-X!9X@]X7$#gX1&*,s8N)ps7ZKnX7-,
bs8;rsrr<&ms2+iE!!B8%X/jYKiW&tZk8"&u]`>A=roWYL!9WDD\GuWlb5d+o"9@Qak2ruM!9WGE!9We
OJcPcM"MXp:^VBLC!5JC2!5G9/!5JC2S,`Q(kQ'$2!5JI4!5JI4s1c5Iq#CE0kE#\Y[fEr="K_Y(Xf_<
t!3Q+u!3P2[fDti"quHYFqZ$Vunc8]?q5XA)!<B.t]DS].]C#[M!!'.3!!'/"!!'/"!!',$XgJ-/XlfZ
aXm5t@!!92$!<9+o!!'(s!!'(0!;ulp!;ulo!!'(m!<)uhrr<&js2+g:X5X-3!!'(u!!'(u!<9+/!!3-
#X615uX.TI>!!MEa!9WG<!!)0Y!!)0(!87DQk,JFK!!)/l!!)0[!!)0[!<;3I!6Y?Bk2u^Ek0sC%!!'e
3!<9h%!!'d*!!'ds!3H5$^XiJN!!'e2!!'dB!!'e$OSb+>^PMsS!!'/!!<91h!!'.6!;qBF!;qB<!!'/
!!<7TEWr0L/Wr0L,WrBWG!;HNoXhXo:Xnr(uXjmF2!!'.a!!'.7!42_+X8DttX6orfX6Tc6!;ulp!;ul
f!!'(t!94%N!5nj;X2"]8X8;ksX0r!.X615uX761A!!3-#k555Zk3`3Lk+D\U!!)/F!!)0R!6kKDk5,,
Yk.Uik!!)0E!!)/j!4i.1^\Rs1^[D.&^ZPRs^OcI5!!'dF!!'e2!42_+^ZU[Y^ZtlS!!'/#!;uotXmZ5
iXlfZaXk*RPJG]BIWr7J8!<3'!JG?/B]Dno/])Vj1WrBWD!!'.a!7UuKXfqd,!!'.a!!'-o!7:cHX82h
rX7$#gX60H_X6K]Q!<3#r!;ul_!:'Ra!;lfI!9aC_X1A92X5j9(!!'(_('(Db!1a)ik5#)Xk3r?O!9WG
E!9TmRZiC*gciEA3!9UEa!9WYKqZ$WYM#cc?!5J7.s1e=/!5Gc=irB(oec5]bblGBV"ht&P!!'dY!9*t
Y^ZU[Y^V'WT!!'.q!<91r!!'._!6bHAWr7J7!!99QJGH2G])_iB!!*"urk%Ls!3M%W"g%d,!!'.(!!'.
a!!'.k!.k1O!3>hos/Ynp!3<=(q>^$dq>^MrpAY*mrr2ruqu?!_!3<O.df9QP!36)"X0r$(!!'(_('(D
E!4r42k4\lUk4eoVk2-0H!!)04!!)0Y!0.$_joFND!9X.YZiC*gk5YMElMu_@!5JF3q#LH0mf<C&TE'Q
DeGoTaY5eV(!5I]`!5G0,df9BMoDnonmf<Bie,\b6!.b!Irda86!.b'\!35_mri40BT`>(pirI7&!3PD
a!3O`NT)\kloDnoloDndhs/Wg5q#BUZr;ZHjrr2ruJcP-;!3<4%!3>Joq[*>(M#cf@!9WnRs5rbMs5pu
pJcN:\!9VK*iW&u@k5YME]`=o0rkJ4.!5Ie!`rH+Sr;ci3rW)r4rW)r4ciD&c!5HJQ!5JL5!l"^8XoJI
:kEc1`nGn.@nGrQjp](;r[fHDXrMg"&J:IV"riQ/"riQ/"riQ1"rW)l.TE"tonc7/>!3Q5#!3NU.q#CD
sk5YLa[fEK0ri>eo!3>/\e,]@F"KVS&!!*#!rW)qurW)qurr;rtr;Y:IbQ%XD`;fn=rVur!q#Ic%!3>8
i!3>DcJcPNFroWtU!9UKc!9X4[roX1[roX1[roX1[QiI-Kli>`>!9X7\!9UEa!WW5_k5YMETE)b-s1e"
&!5I.dj8]7r!!*#5#64b=!5H8K!<'[;!94%Z^VKmM^[hI(^[qNL!!'dsQN4eM!/ppXXn_tk!!'.E!;ie
r!;qBHWWK;Q!<0)*!!',$XfVR'rN-&"r2Tbsr4DM"Y5eR)eH"t:!3PhmrN3d6!3PVgqZ$VuM#c--s/YS
g!3=9Cqu?Zrs8Vur!iu>$ri68(!36+#WrN.uWrN.ts8N)ss/,kn!!'(9!!'(k!<&tS!9*tYX60fiX1\M
.!<;3M!!)0S!65'@jo>D\jp(kdjoFQ+!!)u[c2bia!9V)t!p0I_o`4sQ^&S/qk5YMEnGn.@li@(#pAb3
.qZ$W2o)Jd*b5_RX!<0_=!5ANK!5H8K!<0_6!5FQp!5J7.d/X0]o)Jd*r;Zi4`rPo8!5I]`!5GuCVZ?b
!pAb2qqZ$Vuo)Jio!!(jUq5OJrJ:RX!rdY$O!<0)+!3H7'!3N@'!<0)$!3Q1!rrDu/eH!Vi!3O9A!3Q"
rqu?`!r;Zi"^An89k5YLalMuM:nc8]jpAb2oqZ$Vso)Jckg]70M!!)ip!NQ5"WsA^+!36+#WrN/!WrW4
$rVls!!!)rsRfEGhnGq/@!3>\k!3?%u!3<p9!WW5$k6_3iTE)\+s5s%U!9X.Y!9WkQ!9WJFj8]5C!<2*
d!9O:D!9WDD!<2*]!9UQeh>dQ<`rH,%o)JdQr;Zi[o`3/8!9WGE!9Vc2L]IIir;cBg!5H_X!5J1,!5JL
5qS3%1rP.k&!5J4-mJm7%Q2pLV"ht&P!!'e*!!'e4!!'dK!!'e$Qi!*L^PMs>!<91h!!'.K!;ri#XfAB
$J?&RJrdY!NrW)esrrE#"ql9Vqrk&+/!3P8]!3OBD^AnG>!3H5$Xn)MmXo/5"Xkj';!!'.a!!'.7!1s8
kX6orfX82hK!;uj!X8i2"q#:>prW)eqrrE"uqu?Wqrr;os!3>,[!3?)!MZ<p]!36)"X8W+m!!'(u!!'(
7!!'(_$37-s!.k49!<;3L!!)0*!!)0S!!)0\!;bjX!<2*\k4&EOk2QFAk-G'=!!VKbjo>DDo)JdQr;Zi
[`rPo8!9WGE!9U`jUB(>/mf3@&o`3YFs1e7-pqQe.rkJ:0!5JI4rkJF4rkJF4rkJ1-!5JI4rkJF4rkJF
4rP&=4_>jSNbl@aYpAk*k!5JI4!5H8K!5I]`!5Ih"JcP3=s/k_i!3OZLr2Te!q5XFEpoXOqriQ2#r2Kb
!r;ci!rW)r"rW)r"pAb2qr;ci!rW)r"rW)o!_#OJ;p&N_F!3Pel!3Q2"!3O';!WW5&k5YLaTE)P's/YS
g!3=rVo`4pis/YknpoFDori?&!r;Qbtr;chtrW)qurW)qupAb2or;chtrW)qurW)ntklBB:!3=?E!3>Y
j!3?%u!3>bmb5_OCk6_3ie,Y4's5s=]nGiROblIe+p&OmMrW)r[q>^NXr;ciZrW)r[rW)r[rW)cp!9X4
[roX1[roX1[rT:or!9W/=mf3@Mnc/[Pr;Zi[^An8rm/["`!9T+<cN*sZq#CE0`W6%Rr;ccr!l"^8q7lh
-rP/71!5JL5!5JL5!l"`MrW!#7!5JL5!5J=0s1eO5!5JL5!l"`MrW!&8!!'d[!5JR7^\n-4^[_@)^\n-
4^YStM!!'dsQN4e6!1NufXn_qsXn2VF!<&qtXnesuXakrtXo,3tXo,1!Xo8;#Xo8;%XT5L&!!98&Xo8;
#Xn_tsXo8;#Xo8;%XT5L&!!02%!<B6^!!'/"!!'/"!;6BmXo/5"XhOi9XlfZaXmlCC!9O:\X8)_qX3(G
@s8T.qrrT8$s7r_ns8K&!X8MttX8W)!X8W)#WrT4"!!92$X8W)!X8)bqX8W)!X8W)#WrT4"!!B8%!3<U
0f)PfOr;Zhunc/Zjr;Zhu`rPo8!3>8i!3<R/T`G)Sq#CEWmJto?s5s+W!p0I_q<%STrT="X!9X7\!9X7
\!p0LFrW!#^!9X7\!9X(Ws5s:\!9X7\!p0LFrW!&_!!)0[!0R<^k5>8[k4\lR!!)0[!!)/r!!)0E!!)0
I!0mNa^\n02^\7`m!<9h'!<9g_!<0b0!!9pM!;O>,!;sV1!!0h7rkJF4rkJF4!l"`MrVur5q>^T3!5J@
1!5JF3!l"`MaoDFVn,NI'qZ,:L!5J%(!5JI4!5H>M!WW58kFhmjTE*mM!3Q2"rN4rWs/kbjs/k;]nGrQ
jqPjV!Xap2Kr2T[sri-#"XT8@&rW)r"rW!#%!3Q5#!3Q(t!j)I)q>^Mtqu?f#!3P>_jo>C`n,NHjdf9B
MnGiQkr;Zi"o`3/8!3PDa!3O`NX8i7$r;ceshuEfYX/k^is/XTKri>nq!irC%poF>mr2]hs!W]8$ri?"
uri?"u!il=%rW!##!!)os!il=%q>^Mrqu?f!!3=6B!3>Sh!3>/\n,NHhnGiQir;Zhu^An87m/["`!3:q
VpAb3Ur;cfYhZ3]=n,WLNdfBC0r;cfs!p8VFpu_JSr9!qX!TjC]k5GA[k5G>^joFQC!!)0X!!;9_k5#&
Xk552\joFPh!;ultk3r?Nk0j;1k4&EOk5>8[k2$*t!!)0E!!)/p!5nm;^]"35^\n-4^YStj^\@d/^\Ij
0^XN8`^\e*'^\e*.^An95^]"61^]"37^Au%J!<9h0!!'e3!<9h4!<9h6!<'Zk!!'e3!;6Bm^\n-4^V9a
K^ZV9j^[V;c!<92#!!'/"!!'/#!9!qXXnVkrXn_qsXjd@NXo,3jXo,3uXo5@%!<0,"!;int!!98&Xo8>
#Xn_qsXo&2!Xo/8"XoAD"Xh"M]!!'.k!!'/"!!'.A!;QTpXlfZaXg\;Q!<9,!!!'(u!!'(V!<9+p!!'(
q!!'(t!8.APX8N"hX8N"oWrN/!X8W+rX8W)#WrT4"!<9+q!!'(t!<9+u!<9,"!<&tu!0.$ZX7cPk!!'(
u!!'(7!!'(_!!'(c!1!Wbk5G>\k5>8[k4er>!<;3V!!)0W!!)02!<;3Z!;#@N!;bgY!9X=DrW)iXrW!#
^!9X7\s5s+W!9X1Zs5s7[s5s=]rT:Hef`2$7nGiROr;Zi[_#ON:!9WGE!9TpSiW'%p!5JL5!5JI4!5I:
hs1e"&s1datn,WL'r;cc1!!)c.r;cc1rrE#4rVuu6!<'\3!!9n8^]"35^\@d/^\Rs1^\n-4^\e'3^Zba
!!!U+;!5ANKn,NI'r;Zi4o`3/8!5I]j!5JC2!5JL5rP/=3rP.RsXoJO*!3Q5#!3Q2"!3P2[quHc!mf<B
if)PlSXT8@#r2fr!pT=Fp!!)r!rrE#"rVuu$!<'&!!!98&Xo8;%XT/@t!!'.t!<92"!!'/!!!'-m!;6B
rXT/@'!3P_j!3Q2"!3O!9!3PVgqZ$VuqZ$VurW)o!rW)o!ScJQd!il=%rVur!r;Zhug]7ATmf<Bgf)Pl
QWrW/!r2TetpT+;n!!)qtrrE"urVuu"!<&tt!!92$X8W)!X7uYpX82hrX8N"uX8DqtX3q!b!!TD'!36+
#n,NHhr;Zhuh>lO8!3>8_!3>ts!3?)!rN#ntrN"?H`;fu%!9X7\!9X4[!9W&:s5rhOrrE)]f)Yj5r;cc
X!!)cUr;ccXrrE#[rVuu]!<)'Z!!;9_k5G>\k4eoVk5#)Xk5>8\joG>[!9TIF"m,dbjoFQ@!;6Bmk5>8
[k.^lrk2u^Ek5,,Yk5GAZk5PD]!<)&E!!'e5!!'e4!!'e5!8RYT^\7^.^X)rh^V9c`!5ANK!5H8K!:df
/^V9c`^Au$`rW!#7!!*#5rW!#7!5JL5!5J:/!5J@1!5JF3!5JF3!5H,Gr;Zi4f`2#en,NI'r;Zi4`rPo
8!5I]j!5JF3"M_\O!5JI4!l"`Mr;Zi4blGic!3Q5#!3Q2"!3OrTs/l"q!3Q"rf`2G_XT5I'XT5I'XfVR
'n#Z`nXfVT*Xo8;%XT/A#Xo8;%XT5L&!!'.r!!'.t!!'/!!!'/!!!02%\,ZN2f`2#So`4mi!3Q2"!3O!
9!3PDa!3Q/!"Ked+!3Q2"!j)I)r;Zi"PlLfbrVur!r;Zhup]0=Ss/Yko!3=HH%'-E/WrT1#WrT3$!!)J
g!s#C&!<9,!!!92$!<0%u!!92$X8W)!X7uYpX82erX8DqtX8DqtX1&'0WrUiR!3>Sh!3?%u!3<p9!WW5
$k5YL_qu?l#WrN.#r;Zo"!3?%u!3<O.huEc>rVur\r;Zi[g&V08pAb3Ui;i?I%-H[PjoFNDjoFQ+!!)K
M"T[]I!9WGC!!;9_!<2-[!!;9_k5G>\k4eoVk5#&Xk552Zk552Zk32ll!!)07!!)0N!!)0[!!)0S!6Y?
Bk2u^Ek552^k2lXDk5>8]joFQB!!)0H!3?/#^]"35^\n-4^Yo1f!<9h%!!'dg!!9pM!;jM2!;4)6!5H8
K^V9c`^An94^]+<6^]+<5^]"37^Au%J!!9n8!<)ru^]"35^]"35^]"37^Au%J!!9n8^]"35^RbH"!!'e
4!!'e%!<'[H!!'e$U&1M`^\e'7^V9aK^\n-6^Au%I!!'d+!;?HnXo8;#Xo/5"Xk3XRXmQ/hXkNgWXfVU
&Xo>F&!;3H$!3N@'XfVT*XT/A"XoAD$XoAD#Xo8;%XT5L&!!'/!!!'/#!!'/#!!'/#!!98&Xo8;%XT5L
&!!'.L!5ed:Xo/5"XmQ2fXka!:!!'.a!!'/!!!KF+!!'/"!!98&Xo/5"Xj[9f!!')!!!'(u!!'(P!<9+
m!;ZZqX4mUUX/c6tWrN.mWsSj-WrT3$!3<.#!<&tu!<9,"!<0%u!!92$X8W)!X8DqtX8W)!X8W)!X8W)
#WrT4"!!0,#!3?)!!3;=a!3?%u!3>qro`4rk^&S/6k5YL_qu?l#WrN.#r;Zl!!!'(u!!''b!!)0\!!)0
[!!)0\!8@MRk3`3Lk1]k;k2l[@jo>DSjothJjoFQ+!<;3]!<)'[!<;3]!<2-[!!;9_k5G>\k552Zk5G>
\k5G>\k5G>^joFQC!!;9_k5G>\k.:WI!!)0[!!)0L!<)'"!;QTpk2u^Ek552^k2lXDk5>8]joFQB!!)0
+!6G3@^]"35^\n-4^X`Da^\7^.^\n-6!!'dg!!Bt9^B!Q6rrE&5!!*#5rW)r4!W]t8rkJF4rkJF4!5JC
2!5JI4rkJF4rkJF4rkJI5dJs9^irB(ohuEblo)Q,t!5I]j!5JI4"ht&P!!'e4!!9n8^\n-4^Qed!Xo8;
#Xo/5"XnVnR!<0+p!!'.u!!'.U!!B>'XT7XgrrE&#!<B8%Xo8>"XTAL)!<0,"!<0,"!!'.u!!'/"!<0,
"!<0,"!<0+I!!'.`!<)ruXl'0ZXf)4$!!'.a!!'/"!!TJ)XT/@'r;Zo$!3Q2"!3N[0huEbXrVur!r;Zh
uec>]MpAb2oqZ$Vsm/ZST"02F&!:$Wb!<0#!!<0%u!<0##!36,!X8W+uX8W)!X8;ksX8N%tX8W+uX8W+
uX69QJ!!'([!!'(X!!'(T!6Y?BX60H_X8N#%WrT1#!3?%u!il=%r;Zhul2[mc!9X7\!9X4[!9W5?p&P*
SpAb3UqZ$WYgAh?<!9O:Hk5PG\jo>D\k5GA[joPPF!<2-[!<2-[!!)0Y!!)0[!<2-[!<2-[!<2--!!)0
A!!)0L!:p0jk,&+Yk3W0G!!)0[!!VKbjo>DDr;Zo]!9X4[!9TmRrW)r4r;Zi4rVur5r;Zi4dfBE_q>^N
1c2\(L^An8K!5AO3^]+<5^]+<3^]"37^Au%J!!'e5!!'e+!!'e1!!'dK!5AL6^Vp34!!'dsT`Dk+!!U+
;^An8Kr;Zo6!5JI4!5Ht_aoMFCr;Zi"rVur#r;Zi"dfBEMq>^Mtbl@sM!!',$XT8:$rrE&#rrDu!rW!#
%!3Q5#!3Q5#!3Pkn!3Q(t!3PhmMZ<aZq#IPt!3PDa!3Q2""g%d,!!'/"!!02%!3Q2"!3Makri>tt!3?)
!!3?%u!3?)!ec>`Nq>^Mrbl@sK!!'&"WrW'urrE&!rrE&!s/Z,!!il=%rVur!rVur!oDellq>^MrVuYB
K!3<7&q#CDqk5YL_r;[#%!36)"X8N#"WrT4!!!'(E!71`Fk5>8[k5G>\k5>8[k0j>1k5#&Xk555-!!_Q
c!9O:D!;u!Z!<2-\!;u!Y!!;9_k5G>\k5G>\k4AWRk5#&Xk3W/2!!)0Q!42_+k2u^Ek5>8`joFND!9X4
[!p0LFr;Zi[PlLg!rVur5r;Zi4p]0"Js1e%'s1d7f!5JL5r4i73rkJF4rkJC3rkAF5rrE&5r;Zi4oDem
+oDem+VuZVn!5Ih""ht$;^Au$H!<3&t^[@rr^]"3;^An8K!!'e4!!9n8^\n-4^U=.#!!'/#!!'/"!!'.
K!<91j!<91l!9jI`Xo8=uXoAD#Xo8>"Xo/8!Xo8>"Xo/5"Xn2SnXn2SnXkWoq!!'.e!!TJ)!3H7'gAoC
srN5K)r2oqu#-@k*XT/@'r;Zo$!3Q2"!3PMdX8i7$rVur!r;Zhui;iBJs/YVhs/XiR!3?)!r2]htri?"
uri>ttri?"uri>tt!3>_l!3>_l!3;am!3>\kq#CT!!!'&"X/,gpX7-,h!;rns!!]J(!36)"X8N#"WrT4
!!!''l!;?Hnk5G>\k5>8[k0X2/k3rBNk1]k:!9X7\r9""ZroX1[roX.ZroX1[roX.Z!9WnR!9WnR!9V6
#g].?:lMq+N!!)-]k/78Z!<)'J!;u!Y!!_Qc!9O7]k5>8]joFQB!!)01!5ed:^]"35^\n-4^Wuo[^]"6
1!!'ct!!'e/!/pmX^\@f3!!'dsV#\:0!!^1<!5AL6^\n-5^An8Kr;Zi4PlLfdrVur#r;Zi"rW(@Hs/l%
r!3Np7f)PfQXT6rQ!3N@'q#CDsk843$rW!/)!!',$!3Q2"!j)I)r;Zi"blGic!3?)!!3?%u!3=EGs/Yn
p!3;:`!3>YjOoPK_nc6#s!3>8_!3?)!#-._(WrN.#r;Zo"!3?%u!3;@b!9X7\!9X4[!9X%VfDts6p](<
V[fG4a!9U0Zh#IH;VZ6bu!9WGE!9X7\#3Gmcjo>DDr;Zo]!9X4[!9U]ihuEblr;cf2bQ.[Xmf<C&pAj:
T!5G-+Y5eR;r;Zi4g&T:r!5I]n!l"^8qnE.3^\n-6^Au%I!!'e!!3?/#Xo/7uXl'3H!<91i!<91U!!'.
M!.k4I!!'/"!!'-s!!'.g)#G-OXT/@uXT8F(r;Zo$!3Q2"!3MjnpAb2or;cesbQ.[Dmf<BghuNZT!3:n
U`W-">r;Zhu_Z8Zr!3>8_!il;$ql9_tX8N#"WrT4!!!'(K!5ed:k5>;Yk0*f,k2l[5!<;39!!)/o!0R<
^k5>8[k4\kY!!)0E!!;9_!;kmZ!9X4[!Tj@^k5>8[k(j#_!<0b.!!'dN!1Nrg^Zbad!!'e#!!'d8!;QT
p^ZVEn^\\!5^An8Kr;Zo6!5JI4!5HbYM#dOWr;c`q!3M%WeGoTOec5]Pli7$fnGoor!3PE$!3Q+u"0DP
'Xo/5$XT5L%!!'-Q!7V#JX7uYpX1SG+!!'([!;$6kX6]fdX/5ju!!'(_!!'(s!!B8%!3?%u!il=%r;Zh
u[K)s#roWtU!9WbNJcP-;!9Vi4!9WVJ!9Vu8b5_P)k5YMEqZ$`\!!)0[!!;9_k5>8[k3;qu!9sOd^Au$
`mf3@&YQ4+l!5Fd!p&G*-UAt;/mA9]V!5JC2!5JL5rP/=3rP+p([K$E3!3NBl!!'.^!4r42XiUR[!!'.
<!9*tYXlgN$Xnr(uXo8>!Xo8>!XjR3$!!B8%X/k[h!3;[k!3?%uNW9'[p&M5q!3>8_!3>ts!3?)!rN#q
u!!)tuLB,R!"6KUGk3i9Mk03nS!!)/e!8.>Pk,SLX!!)0E!!)0Y!!)0\!<)'Z!<)'(!/U[U^\n04^\7^
.^\\!2^SUu2^[M6!!!'e.!!U+;^An8Kn,Tfq!5I]n!5Ih"JcO:#!3Q2"s/l"q!3Q+u!3O<BhZ*YYV#]r
a!3Ptq"g%d,!!'-t!!3-#XlgN$Xe5Ze!!'(u!<9+o!!'(s!!'(t!36)"X4[Kb!!'(o!!TD'WrN.#f`91
q!3>8_!3=TLJcP*:!9X4[s5s%U!9X.Y!9UNdp&G*TP5kUFr;c]p"m,gI!!)/V!!)0K!;c`rk(s)I!!'e
2!<9h%!!'du!4Dk-^Wlhs!!'dM!9*tY^ZVEn^V'W"!!'.u!<91h!!'-m!!'-_!!'.o!3Q;%XlgN$XmlC
C!6tQEX8;nsX6orfX3q!m!!'(/!87DQX/Z0q!!'(_!!'(/!/U[Uk5,/Yk3`3Lk+2PQk554E!!)0M!42_
+k2u^Ek3E#!!7_&L^\@g/^[D.&^ZYXt^ZPTK!9sOa^\n-4^\n-4^SCi2!!'dsW;s]+!20AmXnVnrXmZ5
iXlo`bXdfC"!!'/"!!'/"!!'.R!6Y?BXlhVCXjd?&!:0[cX7u\pX7$#gX69N`X3^iu!!'(u!!'(u!!''
o!!'(e!;c`rX,-hd!!)0V!<;3M!!)0H!!3-#k(Nf[!!)0[!!)0[!!)/t!9*tYk2u^Ek.LbJ!!0h7pAk6
.p](</QiR$a!5I+c!5H>M!5J.+XoJI:kG\HrnGn.@cN!sIp&P,pp](;rbQ,]a!3OiQ!3PDagAh5UW;u_
o!3PEC!3N^1M?!XWq>gHos/Ynp!3;:`!3=]O!3<p9!3>MfZiC*,k5YL_lMuM:eGoU3p&P-Tp](<V`W49
a!9Vl5!9W5?i;`l?UAt>q!9WGE!9TpSU&Y2.o)Sd)o)Sais1a<hXoJI:ec<kn!5I]r!5I"`JcP0<!3Ph
mriPYis/im5JcPTH!3Mmo!3PWIq_nMWM#b'd!3>\kri>Mgs/YSgJcNai!3<j7iW&tZk5YL_]`<`d!p0I
_o`5!Rn,WLNU]?MW!9WkQXoJIak5YMEnGn.@^&\2Jp](</d/_r%!5Iau!5H>Mi;ikl!WW58VuZVn!5I]
r!5GuCJcPQGs/l%r!3N=&!3PVgr;Zi"T`G(o!WW5&m/XKn!3PEC!3PPeJcN^hs/Ynp!3=9CiW&tZkl:^
a])_!ori6)#!3;go!WW5$k5YL_TE(&Rs5s(V!p0I_XoJIakl:_Gmf9ZoroO7^!9Vi4b5_P)k5YMEe,Y(
#f`;&emf<C&^]8rdq>^N1T)\l+mA]u^!5F?jV#^Otmf<BioDjIC`W-"@^&[-m!3PEC!3Np7JcP9?s/YS
gs/W+!OoPK_nc5fm!3>8_!3>ViJcNF`s5rbMs5r,;JcOU,!9U0Zq#CEWk5YME[fD![oDnp+pAb3.mJm7
%YQ13o!5JI4!5Ik#ZiC*@kG\HrlMuM:^]=D:pAb2qmJm6hj8ac3kPtUbr;Zi"T`>,o!3PEC!3MmoMu`m
Yq#CHr!3>Mf!3;LfZiC*,r;ZhueH!bm!3>8_!3=TLJcOC&s5s%U!9W\L!9VN+JcGiP!9X4[!9TmR!9WY
KqZ$WYM#a4Ls1dt%!5J:/VZ6_3j8]1pqZ+Y:!5H2IiW&tnkG\Hr]`<Wali@'fmJm6hXT7nl!3P;^!3O'
;!3PbkXoJI(k;NCCnGn.@\,cQ0mJm6fi;gRl!3>/\!3>/\h>dPVV?$Dl!3>8_!3<R/JcP?As5r_L!9U0
Zp](<Vj8]2B_#OJtlN"9l!9WGE!9WSIJcNF`rkIq&!5I:hJcOj3!5G0,!WW58kHb0'TE'cJriQ/"o)Jc
mOT;Tc!3O`Nb5_OEk>VG`e,Y(#dfBBJn,NHh`;kJiqZ$VsScAbkm/["`!3:qVT)elQn,NINq#H!H`rH,
%]`@$l!9WGE!9UrpqZ)-~>

%%EndBinary
grestore
np
grestore
gsave
-.315933 280.833 mo
-.315933 202.833 li
358.844 202.833 li
358.844 280.833 li
cp
clp
-31.5279 295.125 mo
388.856 295.125 li
388.856 202.821 li
-31.5279 202.821 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 126.196 280.668 ]ct
[420.384 0 0 92.304 -157.724 -14.4569 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 560 
/H 123 
/M[560 0 0 -123 0 123 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 560 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
P5tNqo`4@Zs1e@0!5H#D!5Ih"o)Jd*XoJO<!!*#5l2\0k!5I^'!5Ih"JcOX-r2noXs/l(s!3OcOj8]1^
h#IGW`;o0'!j)G&riMdm!WW5&k>VG`TE(tlr2\cV!ir@%q>^Mr\,ZN0h#IGUq#Ii'!il;$ri=KJb5_OC
k5YL_e,Y(#o`4pPi;io?q#CEW^&\$1!9W);!9UEa!p0I_roTaO!9WYKqZ$WYM#b?l!5I7gs1e%'s1eO5
JcNjl!5H/HiW&tnkHb0']`=#l!3PtqjT,=_n,WKjZN-3i!3P_jXoJI(k>VG`nGn.@fDkoPgAq8Sn,WKh
k5^)6hZ*YWV#^;k!3>8_!3<R/P5kUFnGqkTs5reNs5pE`RK*?Ml2\0k!9WGE!9WSIJcOX-!5I1es1e=/
!5J@1!5ILn\c;`FaoL`-!5JI4s1b0+!WW58kHb0'TE(tl!3OrT!W]@)p](;rq>^MtRfEGjrW'D-!3Q2"
s/j`Mb5_OEk>VG`e,Y(#o`+umf`;&Qp](;pq>^Mrb5foi!3<I,!3?%us/V[j!3>JeqZ$VsM#b?l!9Vr7
s5s(V!9X+X!p0I_SH&ZPk5`d-!9X4[s5proiW&u@k5YME]`=&m!5J4-i;inmmf<C&\,b+\!5H>M"MXp:
^VB=>XoJI:kHb0'nGn.@f`2#Sec>`Pmf<Bili<d\!3P2[i;a"_!!'.'VZ?Mm!3PE`!3N^1PQ1]an,VVO
s/YSgs/WF*h#IGU_#OV=!!'(#li=Bm!3>8_!3>DcJcO[.!9Vi4s5rbMs5rGDW;lq\gApC:"Qf[ak2r?;
!WW5_k5YMETE)"mr4h%fquHc3pAb3.PQ8#i!5JI4s1d.cb5_OWkHb0'e,Y(#p&P#mfDtrRpAb2qa8gel
rVur#r;cl"T`>(pm8Ws^!3M(X_>sM7fDtrPpAb2oquD<KaoDFBr;cku^]<?o!3>8_!3<d5NWB">q>fCQ
s5s%U!9UNdQ2gpIr;cl[oDl#o!9WGE!9WeOJcOI(!5JI4!5I+crkIn%!5J"'i;`kmci='\eH"b4"ht$;
^Au%F!!'d6!;QTp^ZVp'^UF3-!!'/"!!'.o!94(YXmZ5iXj@%JXlocL!!'.5!!TJ)!3H7'q>^Mtmf9]p
!3PE`!3PPeJcO[.!3?%u!3=]Ori>Jf!3>Abk5YL_ci='HcN*>4"fhV'WrT3s!!''q!!3-#X60H_X.THn
!!)0[!!)0<!;Z]pk3i9Mk0O).k0X/0!9Uln"m,dbjoFQ?!!)06!6Y?Bk2u^Ek0sB_!;Z]p^\\!2^XN8`
^\7^.^\\!2^XN78!!3-#^R>-&^[8c4^&Yp)!6,$<Xnr(uXjd@NXnMeqXnr(uXbd&$!!'.3!9*tYXlj[(
Xh=^t!<0%r!!'(s!87GQX7lSoX8;ksX1\M"!!'(e!3Q;%X60H_X761A!8RYSk5,,Yk0sD2k4\iUk5,,Y
k4&G'!9*tYk+VkO!!)0E!!)/j!07*[^\%T`!<9h2!!'e,!!'dG!9=+[^VKmM^\n-4^ZGO'!!'ds^&Yq6
!.k4)!!'.L!<91u!!'.o!!'.i!3cG'Xjd@=!!'/"!!'-j!!3-#Xlj[(Xe5Zk!!'(V!;-?lX8;ksX7ZGm
X/#am!!'(9!!'(u!!'(G!6Y?BX60H_X4.-$!:^$hk0a80k5,,Yk4J]Sk1B[S!!)/t!!)0\!!*)^R/d6L
m/["`!9T+<_>jSNr;Zi4ciF*\q>g3h!5Fs&!5J4-bQ%XX\,bLg!5I^2!5H2INW9']r;Zi"qZ,1Is/k_i
!3O*<f`2#S_#OJ;li=0g!3PF(!3PbkJcOI(!3?%u!3=HHs/YSg!3>enV#ULrhZ2[:!3;dnq#CDqk5YL_
[fDWm!9X4[!9WqSg]7B:mf3@M]E$gh!9V)t!9WDDZiC*gk5YMElMuM:h>mMhblIdYp](</kl@aa!5I1e
l2Uh!RK*Bh!5I^2!5G0,WW<""h#QsFs/l%r!3Mgmp&G)p_>jS<c2c#f!3PF(!3O`NJcPHDrN"0Cs/Ynp
!3=NJ_>jS:_>jS:QiI,em/["`!3:qV_#XGrblIe+quHZq!9TIF!9WtTbl@b+[fGCf!9WGE!9UrpJcO4!
rkIq&s1dCj!5Ih"ScAr/!5AL6^[qO(^\n/8!!'ds^&Yq<!.k3B!<0+i!<91u!9=+[Xe5[Y!!TJ)XT/@'
oDnfkZ2j\#!3PF(!3N^1JcOF'ri>Mgs/XuV!3>2]U]:S!!36)"X7QDiX7lV$!!'(_!!'(c!.k3H!<2-M
!<;3S!9sOak*c;=!!VKbjo>DDoDngOX8i;%!9WGE!9TpSJcP3="2=iN^\@d/^S:f!!!'dT!!'e*!!'dh
!6Y?B^ZW<2^XN78!4i.4XT5K*p](;rf)WJa!3O<B!3Phm!3N*u!3PX.qf)V<M#`81"02F&X7uYpX-3M`
X8;nB!!'(k!!'(=!9*tYX60H_X1\Lb!7:cKjoFQ+p](<V^];ja!9V?&!9WkQ!9X(WXoJIak5YMEnGn.@
SH&Z)rW)u5mf3F(^Aricl2Uh!r;Zi4o)Jd*XoS7t!5I^2!5GuCJcOC&!3Q5#s/k_is/j9@V#ULtr;Zi"
o)Jcmo)Q,t!3PF(!3PPeJcMPG!3?)!s/YSgs/YtrJcP9?!3?%u!3>\k!3<$u!WW5$k5YL_TE'QDmJm7L
rW)u\mf<CMY5l38!9X4[!9WkQ!9W&:b5_P)k5YMEe,Y(#])ViGqZ-Z2pAb3.g]5:n!5H>M!P\X,!!'d1
!!'e$`r!aU^PMrG!!'/"!<3'!XnMeqXe5XoXn)P=!!'.m!!'.>!9*tYXlkK?Xh=^d!7CiIX8;nsX7lSo
X2P(o!!'(9!!'(k!!'(p!3Q;%X60H_X761A!1j/jk5,/Yk4\iUk4o"U!!)0:!9O7]k48QQk,eXZ!!)0E
!!)/j!.k4(!!'e/!<9h%!!'dV!7_&L^Wul[^[_C&^\.Z7!!'ds`W3d>!.k3I!!'.r!<91h!!'/#!20Am
XlBEK!!'.l!;rt"!!3-#XlkK?Xe5ZG!:TsgX7u\pX6orfX0Vfm!!'(G!!'(j!;rnT!6Y?BX60H_X4.-$
!5&:3k4erVk3`3Lk2u`S!!)0-!!;9_!;$9hk,A=\k3W0G!!)/<!/LUT^\e*/!<9h&!!'e"!!'d@!7_&Q
^Au"K!5J()!5JI4!5HVUiW&tnkJdM:]`<Wadf9BMp&P,pmf3?ilMppekQ%:V"g%d,!!'.l!!'/"!!'/"
!3Q;%XlkK?XmlCC!1s5kX7cPnX7?8i!!'(c!!''j!:0[hWrT1#!3>Yj!3?%u!3<C*q#CDqk5YL_[fD![
f`2$7p&P-Tmf3@MlMpqIiW,kV"m,gI!!)0P!!)0[!!)0U!42_+k2u^Ek3E#!!2]_r^[hI)^\Ij0^\@f!
!!'dt!:Bge^[(q#^T7D:!!'ds`W3cH!.k4@!!'.m!<0+r!!'.'!9X=^XjmCOXm?#fXl'3&!!'.aL]FR,
!.k3a!!'(k!<0%p!!'(Y!4)Y*X471MX8W+f!!'("!!'(e!;c`rX,-h5!!)0Y!;QWok4nuWk*?#H!!)03
!!)0J!!)0'!9*tYk2u^Ek.LbH!5\a9^[M7'^X`CZ!!'e4!!'e#!!'e4!3Q;%^ZWT:^[V;U!0.'ZXnMhl
!<90Z!:9adXo/5"Xm?#fXg.s&!!'.aL]FQd!.k3l!<9+h!<9+H!2oktX8N"uX6]fdX7lV$!!'(_!!'(c
!.k38!<;3O!!3/_k(Ng,!!)0[!!)0J!!)/_!!3-#k2u^Ek+D^+!8RYT^\@d/^Tmk;!!'dt!!'dg!!'e'
!!'e4!!'dl!6Y?B^ZWT:^XN78!3#tuXnVkrXl]W)!!'.b!!'.U!!'/"!;$6kXo/5"Xf;@$XmLrAL]FQ6
!.k4C!<9+p!!'(%!!'(h!;QTpX4mUSX7-)hX8N"uX2tA$!!'(_!!'(5!.k3d!<;3V!!)0-!8dbVk3)dF
k1]k9k3r?Nk5>8[k5>:_!!)0E!!)0O!.k3.!<9h2!;-?l^Q8H[!!'e&!<'[;!;QTp^ZWT:^UF2p!5nm;
XmZ8iXjmEI!!'.i!<'%n!42_+XlkK?Xm5t=!0@3\X7ZJi!<9*W!:KmfX7$&eX/c4%!!'(_!!''m!.k4*
!<;3M!<;2q!4r42k3i<Kk2-0^!!)0E!!)02!.k3I!<9h.!!'e'!!'e4!3#qu^ZGM"^An8K!5JF3QN.$#
mEYUS!5F?jJcP9?s/l"q!3P_j!3NO,oDelnjo>Re!!',$Xg%lc!!'.aR/jA&!.k3`!<9+o!!'(h!!'(^
!5JR7X6'BcWrN.#!3>2]XoJI&k5YL_nGn.@L]IJ;r;c]p!9WbN!9U*X!9X%Vmf3OR!!)-]k*c;G!!)0E
!!)/j!.k3d!<0b%!!'de!2TYq^Y]$u!!'dsc2bWF!.k30!<0+s!;6BmXc<DN!!'-c!!3-#Xll)PXe5ZG
!7q5MX7$#gX24kL!!'(@!6Y?BX60H_X4.-$!2BPnk3i9Mk4Se2!!)0Z!1*Zck3W0G!!)/<!0@3Z^\7`o
!<9h.!!'e2!!'d8!8.>P^\n-4^T[^t!!'dsc2bVm!.k4*!<'%Y!<91q!!'.u!!'.Z!2TYqXo/5"XlKJb
!!'.aR/jAZ!.k3K!<&tW!!'&"X7lSoX8;ksX-E\S!!'(u!!''f!;QTpX60H_X1&(\!9!qVk2?=?k4\iU
k5,,Yk1Tg9!!)0[!!)0<!42_+k2u^Ek3E#!!3Q;%^\n-4^Yf+l^]"5?!!'dg!!'e.!:^$h^QSX!!!'ds
c2bVP!.k4H!!'/"!!'.Z!<91-!!3-#XkNgUXlfZaXiCFb!!'.aR/jA=!.k3i!!'(u!!'(X!<9+_!6Y?B
X4mUSX60H_X8;m`!!'(e!;c`rX,-h=!!)0[!!)0V!9jL`k-4mdk3W0;!!)0E!!)/c!9*tYk2u^Ek.LbH
!8IPS^\n-4^YStj^[M7'^Z>Hh!!'do!3Q;%^ZWlB^[V;U!2oktXo/5"Xl09Z!<91j!<90i!:0[cXdB+a
!!'.aR/j@u!.k41!!'(u!!'(V!<9+h!<9+W!2fesX5*c_!!'(_!!'(c!.k3R!!)0[!!)0<!!;<F!:^'h
k*,l:!!)/E!!3-#k2u^Ek+D^+!;QTp^\n-4^YAhh^\@d/^\e'3^W-?'!!'e)!!L%:^Au$f!6Y?B^ZWlB
^]"63^]"63^]"63^Zb`M!6"p<Xo/5"XkWpVXnVkrXo&/!Xnr*j!!'.l!!KD(XT5L!!1*ZcXmMPRR/jAg
!<'&!!<'&!!<'$k!0I6]X8N"uX7u\V!<9+p!!'(t!!'((!9sOaX7?5nWrT1#X0)H^!!'(_!!')!!<&tt
!<&tt!<&tH!.k4+!!)0[!!)0:!<;3V!!)0Z!!)0B!4Dk-k4/KTjoFNDk2HBD!!)0E!!)0\!<)'Z!<)'[
!!!#tk(`r8!!'e4!!'dm!;Z]q^[D1&^RkMn!!'d#!;QTp^ZWlE^An8Kr;Zo6!5JI4!l"`Mr;Zi4blE=q
iW&t\r;Zi"g&V/Tmf<Bij8c+Y!3P#VZiC*.kEuFS!!'/"!!98&Xo/5$XT5L%!!'-Q!3Q;%X8N"uX4mUU
!3<0h!<9*f!:p0jX-!A`!!'(_!!B8%!3?%u!il=%r;Zo"!3?%u!3<O.JcPTH!9X4[!9Vu8s5rbMs5qQ+
^An8r`;n']!9WGE"6KR`k5>8]joFQB!!;9_k5>8[k3;qu!6"p<^\n-4^XrPc^\@d/^\Rr!!!'e0!!'e4
!!'e/!1*Zc^[9JHdK%&Y!!9n8^\n-6^Au%I!!'d+!0I6]Xo/5"XnVnT!<0+q!!'.)!9F1\Xn_qsXo/5"
XfVT_!!'.aVZ<jq!!98&Xo/5$XT5L%!!'.M!.k4+!!'(u!!'(P!<0%o!!'([!3lM(X8)_qX8N"uX5O&]
!!'(_!!'(r!!92$X8N#!WrN.#r;ZhuL]F@R!9X4[!9W5?p]1<Up](<VQiR$a!9X(W!9X4[!9TRIq#CEW
k5YMEq>^TZ!9X4[!p0LFr;Zi[blE=qiW&tnr;Zi4eH#Wamf3@&kQ'lJ!5H>M!5I7gZiC*@kL'@Fq>^T3
!5JI4!l"`Mr;Zi4JcMqR!3Q2"!3OuUqZ-Yumf3?id/X0Kc2dJ:!3M=_!WW5&kGJ<^q>^T!!3Q2"!j)I)
r;Zi"[K(mZq#CDqr;ZhueH#WMmf3?gd/X0I_#OJ9_uRs\!3>8_!3>qr!il=%r;Zo"!3?%u!3>AbJcNai
!9X4[!9Vf3s5rkPrVur\d/X1/_#OJtp]-W\!9WYKqZ$WYq>^TZ!9X4[!p0LFr;Zi[T)auR!5JI4!5J:/
g]7AhpAb3.qZ$W2])^I`!5GT8iW&tnkL'@Fq>^T3!5JI4!l"`Mr;Zi4df=t"g].>Vr;Zi"dfBEMpAb2q
qZ$Vumf9-`!3P/ZXoJI(kGJ<^q>^T!!3Q2"!Nc>%Xo/5"XbZtU!!'(u!!'(Y!:p3jX7lSoX8;ksX/#aa
!!''b!;QTpX60H_X82etWrT4!!!92$X8N"uX3CWr!9*tYk5>8[k0j>1k4\iUk5,,Yk32lG!!)08!42_+
k2u^Ek5#&ZjoFQB!!;9_k5>8[k(3T9!!'e4!!'dg!;?Kn^\n-4^[hF*^S1`,!!p=>!5ANK!!'cp!<3&t
^[BPJ^\\!5^An8Kr;Zo6!5JI4!5GrBJcPTH!3Q2"!3OWKs/l5"!3Phm!3OfPaT)UK!!',$XT/@'_Z7j[
rN5Lcr2ohr"0DP'Xo/5$XT5L%!!'.d!.k3i!!'(u!!'(I!<9+u!!'(s!;QTpX.B:sWrN.#!36)"X7lU\
!<&tf!<3&sX8;l!WrN.#r;Zo"!3?%u!3;^lOT5CDr;Zi[p]0"Js5s7[!9WkQ!9V#rhuF&F!!)-]jo>DD
X8q5[rT<MJr9!kV"6KR`k5>8]joFQB!!)01!.k4*!<'[X!<9h&!!'e+!2TYq^Y]$o!!'dsdK%&[!!'e5
!!'e4!!0h7!5JI4!5F<iVZ?[thuN3Gs/k_i!3N4#n,NHjPQ:LZ!3PF^!3Q/!!3Q5#!3Q2"!j)I)r;Zi"
blE=qi;ihWc2dmFmf3?gmJs9f!3=cQZiC*,k5YL_qu?_trVur!r;Zo"!3?%u!3:\OXT8=^g&UdGs5rbM
!9U$Vp&G*TNW9+\!9WGE!9X1Z!9X7\!9X4[!p0LFr;Zi[[K(mZ^B"8Jq#CE0ciD)d!5JI4!5HANb5_OW
kL'@Fr;Zi4r;Zi4r;Zo6!5JI4!5Ie!JcL]/riQ%t!WW5&Q2goer;Zi"p&LEZ!3PXdqkjFrr;Zi"r;Zi"
r;Zo$!3Q2"!3MjnJcO@%ri>hp!3<X1h>dPVr;ZhuWrV,Z!3>8_!3?%u!3?%u!3?%u!il=%r;Zhudf=t"
U&b2Tq#CEWm/X-d!9X4[!9W/=XoJIak5YMEr;Zi[r;Zi[r;Zl\!!)0[!!)/;!.k4:!<0b&!<9gk!!'d]
!;$6n^An8KP5tCY!5I^F!5JL5!5JF3!5JI4!l"`Mr;Zi4blE=qV?$Utn,WKjo)S.X!3O0>"0DP'Xk3W\
!!'.aVZ<ju!!'/!!!'/"!!98&Xo/5"Xb$P)!:^'gX7-,hX5<mWX31M>!!B8%!3;(Z!WW5$k5YL_rVur!
qu?_tr;Zo"!3?%u!3<O.JcNIaroW\Ms5r2=!p0I_`W-,'!!)/t!6Y?Bk2u^Ek5G>\k552Zk5>8]joFQB
!!)0H!.k3.!!'e5!<9h6!;ZZq^R"p#^\%Sn!!'e$f)+#"^An92^]+<4^]"63^RbFW!7_&LXo8>#XnVkr
XhFeh!!'.$!9*tYXlltkXT/@uXoAD"Xo8>!XjR3$!20AmX8W,!X7uYpX7?7f!!'(V!3Q;%X60HaWrN.s
X8`1uX8`/"!<&sR!.k4;!!)0\!<;3V!!)/Z!:^$hk*#f@!!)0E!!;9_!;kpY!<)'Z!<)'(!.k3K!!'e3
!<9h&!<9h/!3uS.^Au"K!5I+cZiC*@kLKXJlMuM:JcP?A!3Q/!s/k_is/iC'r;[#'!3H5$Xc*5]!!'.a
Z2h#"!.k3b!!'(t!<9+g!<9+Y!6G3EWrT1#!3<m8b5_OCk5YL_e,Y(#M?!Y=quHcZmf<CMW;m+a!9O7]
k4AY?!!)0K!;c`rk(s(i!7h,M^\Im0^\7^.^V^',!!'d4!9*tY^ZX/J^V'W!!29GnXn_tsXnMeqXnMgo
!!'.V!3Q;%XlltiXmlCC!.k4<!!'(q!<9+o!!'($!:p0jX-!DX!!'(_!!'(/!.k3L!!)0W!<;3U!!)0O
!3Q;%k10O>!!)0E!!)0I!.k3&!:p0j^\7a.^[;(%^Tde<!!'e4!!'cl!!3-#^ZX/J^RtRY!5AL6XnMhq
XmQ/hXlTQ*!!'/"!!'.9!6Y?BXlltiXjd?&!/ggWX8)bq!<9+f!!'(&!!'(u!!'(k!1*ZcX6foa!!''V
!.k4%!!)0U!<;3L!!)0,!9!nXk5>8[k,8:>!!)0E!!)/p!.k3G!!'e+!<0b'!!*)7li7%#_#OJMgAnAV
!5I^J!5J%(JcLB&mJm6hoDnlmn,NHjli7$fc2dJ:!3M=_q#CDskHY)i[fD![W;lq!oDnlkn,NHhr;c<e
!3<p9!3=WMZiC*,k5YL_lMuM:JcPEC!9WnRroW\M!9WVJ!9V?&q>^NXM?!\X!9WGE!9TpSJcMtSs1e@0
!5ICk`W6%R^AuFW!5I^J!5I"`JcLB&q>gPtq#CDsU]CFso)P*W!3PXoqm$4(M#`,-`W6%>q#CDqa8k#r
s/W'uiW&tZk5YL_]`<WaOoYOEq#CEWquE\rs5r):XoJIak5YMEnGn.@JcOO*s1e%'s1c5Iq>^i:!!'b6
^An8K^QSZn!!'dsec<Io!.k3:!<91j!!',$XgS39XT/@'!3H5$Xf^4UZiC*.kHY)ilMuM:JcOa0s/YVh
s/WU/$37+,!36+#!!'(#N;s"[!3>8_!3;amJcMnQs5reNs5rVIbQ%t3!!)-]jo>DDk.q&@!!)0E!!)02
!.k3&!;6Em^\@d/^T%86^\n04^\7_p!!'e$g&'G&^PMrB!5\a9XnVkrXj$k&!!'/"!<91&!9*tYXlm:r
Xh=^d!0.'ZX7uYpX/Z."X8N%uX5Eu\!!'(_!!'(i!.k3&!8.APk4eoVk-b9_!!)0[!<;2H!;QTpk2u^E
k-k>B!0R?^^[hI(!<9gH!!'e4!!'e1!!'dg!42_+^ZX8M^ZtlO!.k4,!<91i!<916!!'/"!!'.t!!'-_
!!3-#Xlm:rXe5ZG!3#tuX7$&gX7-,6!!'(u!!'(r!!'(<!6Y?BX60H_X4.-$!.k4C!<;3M!<;2o!!)0[
!!)0X!!)0V!1*Zck3W0G!!)/<!.k3b!<9h.!!'e(!!'do!8dbV^SLqi!!'dsf`8e#!.k3.!<91u!;ult
XmlAkXhau;Xk<]W!!'.a])\u'!.k3&!7_)LX7lSoX76/iX3:S;!!''[!;QTpX60H_X1&(\!0@3\k4\iV
joFrP!9V)t!9V`1ZiC*gk5YMElMuM:JcP]Kr4h7lrkIn%!5H;Lr;Zi4LB%AU!5I^M!5G0,JcNjlr2nuZ
riPVh!3PknaT)=C])^"S!3PFr!3O`NJcM#8r2]Gin,WHgmf3?g]Dqr4mf8[S!3>JeqZ$VsM#`,-hZ3T:
irK)@mf3@Mh#Q@5!9U'WiW&u@k5YME]`<WaWrN.7g].Dj^B"$/!5JC2!5HAN"ht&P!!'dd!3Q;%^ZX8M
^[V;U!.k4E!!'.V!<91q!!'.u!!'.A!;lg#XT5I'!3M4\q#CDskIU_r[fD![YlFd)g]7ATq>gKp!3>ts
!3<s:"fhX(!!'(J!42_+X60H_X6Tb;!.k4K!!)0:!<;3U!!)0Y!!)/u!!)-a!9O7]k(`p<!!)0E!!)/S
!.k3l!!'df!<9h%!!'e0!6P9A^UaEg!!'dsf`8e:!.k38!!'.j!:'XbXmQ/hXhk&<XmQ1U!!'.g]DK2?
Xbd%0!8dbVX4dRRX6orfX5X-<!!''p!9*tYX60H_X1\Lb!36)"k1Te8joFQ3!!)/u!!)05!3Q;%k2u^E
k4&G'!.k4F!!'dc!<9h&!!'dX!<)ru^\n-4^[V:(^\n02^SCl*!!'dsf`8dr!.k3V!!'.Q!<92#!:g*i
XiUPCXo/5"XmlAkXo/7uXm#hm!!'.a])\u!!.k3&!;ultX4I@OX7$#gX2t>CWrN,$!!'(i!!'(u!<&si
!!3-#X60H_X.THE!6G3@k19V5k3i9Mk5#))!!)0[!!)0O!!)0[!<)'.!6Y?Bk2u^Ek0sB_!0mQ^^[hHg
!<9h/!!'e4!!'dN!!'e)!<9h5!!'e4!!'d)!!'e$htu:2^PMrB!8mkTXk<^SXnVkrXo/5"Xl09>!!'.l
!<92#!!'/"!!'.6!9*tYXlmG!Xh=^d!3?1uX5!^S!<9+p!!'(u!!'(:!!'(j!<9,!!!'(u!!'(h!3Q;%
X60H_X761A!.k4F!;u!4!<;3V!!)0[!!)0(!;QTpk4/NPk5G>\k5>8[k+r(R!!)0E!!)/j!.k3V!!'e4
!!'dd!!'e6^[M7'^WHNV^[_@+^Au%J!!'e4!!'e!!42_+^ZXJS^ZtlO!.k4L!!'/"!!'.R!<0+i!<91E
!!*)%nc/`n!3Q5#!3Q2"!3Mjn!WW5&kJ%#!TE'QDaT)=Ar;ZhufDtoOn,WKhrrC7C!3>Yj!il=%rVur!
r;Zhudf@Pk!3>8_!3=TLJcM&9!9X4[!9WnRjT,;Bn,WLNaoDG(nc/aR!9X7\!9X4[!9TgP!9WYKqZ$WY
M#`,-gAh5geH#Wap](</i;i'A"ht&P!!'e'!!'e5!!'e4!!'dH!9*tY^ZXJS^V'W!!2fesXka!Q!<91r
!!'.B!!TJ)XT/@'n,NHjrVur#r;Zi"n,TTk!3PG!!3PbkJcLB&nc/ZjeH#WMp](;paoDYH!36+#!!'(h
!!')!!!'(u!!''r!;QTpX60H_X1&(\!3H5$k19V5!<;3V!!)0&!!VKbjo>DDn,NINrVur\r;Zi[l2\0k
!9WGE!9WSIJcLB&p](</dfBE_mf<C&ci='\mf3@&rVur5r;Zi4T)\om!5I^S!5G0,JcN^h!3O]Ms/kbj
!W]@)ci='Jmf3?irVur#r;Zi"df@Pk!3PG!!3O`NJcLl4!3>_lhuNeXmf<Bgci='Hmf3?grVur!r;Zhu
SH&Yjm/["`!3:qVJcOO*!9V`1s5rbMs5r\Kj8]2Bmf3@MrVur\r;Zi[]E$pk!9WGE!9UrpJcMkP!5JI4
!5I=io`5$,pAb3.c2[jZr;Zi4mf3@&rVur5r;Zi4n,TTk!5I^S!5J%(JcLB&pAb2qr;Zi"d/a3KpAb2q
cN!tGXo/5"XmZ5iXo8;#Xo/5"Xec$n!!'.a^AtCF!.k3V!!'(u!!'(O!;ccrX7lSoX3L\FX8N"uX7$#g
X8W)!X8N"uX6K\l!!'(_!!'(c!.k3&!;ultk5>8[k0X2/k4\iUk0<r,k5>8[k3i9Mk5G>\k5>8[k+;VT
!!)0E!!)/S!.k3l!<'[X!<9h5!!'e/!;c`r^XW;a^[;(%^]"35^\n-4^XE2+!!'dshZ1F@!.k38!<'%k
!8ISSXo8;#XmuGlXjmCOXmQ/hXo8;#Xo/5"XdoFlXmNn#^AtBm!.k4.!<&tD!<9,!!!'(j!!'(i!9F1\
X6orfX8W)!X8N"uX1SGl!!'(_!!'(5!.k3O!<)'8!:p3jk5G>\k4/KPk1'G3k3`3Lk5G>\k5>8[k3rAR
!!)0E!!)0O!.k3&!5/@7^V9c`nGiR(gAq-O!5Iq%!5JL5!5JI4!5G?1q#CE0kMH9S[fD![JcPNF"0J[*
XmlAkXk!IPXmQ/hXo8;#Xo/5"Xm,nn!!'.a^AtD%!.k3&!5ed=X/c6$nGiQiec5]NmJm6frVur!r;Zhu
T)\om!3>8_!3;amJcLi3"6S_Gk4erQ!!)04!!)0L!!)0\!!)0[!!)01!6Y?Bk2u^Ek0sB_!.k4'!<0b/
!!'da!!U+;^An8Km/R.$rVur5r;Zi4SH&Z)mGe$&!5F?jJcMSHriPtr!3PPelMq*j!3H5$XmH)gXo8;#
Xo/5"Xh4Yn!!'.a_Z6gP!.k3&!:KpeX8)_qX471RWrT1#!3>Je!3?)!!3?%u!3>ShXoJI&k5YL_nGn.@
JcNC_roX"V!9Vf3!9OCajo>DDm/R.KrVur\r;Zi[V#^;k!9WGE!9U`jJcLB&o`,-0!!'dKn,WL'h#IGi
li7%#r;cf2klA'j!5I^V!5Ih"JcLB&_#OV?!!'.'n,WKjh#IMY!!)Ee!3Q2"rN2Xk!WW5&kJI;%TE'QD
N;s*^!!'(#qZ-<is/XrU!3>Gd!3?%urN"?Hb5_OCk5YL_e,Y(#JcOF'"Qf[ak2u.5s5r,;!9WVJ!9X7\
!!)u[S,`QOm/["`!9T+<JcMSH!5JI4s1e=/!5J"'li7%#r;Zi4SH.XL!5I^V!5H2IJcLB&mf3?ir;cl"
p](;rgAh5Ur;Zi"d/^<L!3PG%!3PbkJcLB&])Vi3r;ckup](;pgAh8T!<)ruX+gWM!!'(_!!'(/!.k3&
!;-<lk5>;[k4eoVk1]k9k5>8[k0!b3!!)0E!!)0I!.k3&!5\^9^\Rs1^[D1&^Z,:o^]"4b!!3-#^ZXSV
^RtRY!0.$ZXni%tXoACk!<91]!!'.-!6Y?BXlmS%Xjd?&!.k4(!!'(r!<9+g!<9+[!!'(_!1*ZcX6foa
!!''V!.k3I!!)0X!<;3M!<;3Z!9aC_k*uG2!!)0E!!)/p!.k3&!:Tsg^\@g/^\7^.^YAeh^X)t`!!'ds
iW-a`!.k3&!5&:3XnVnrXnMeqXkj$Z!!'-T!;QTpXlmS%Xg\:^!.k4E!!'(p!<9+o!!'(T!!'(B!42_+
X60H_X6Tb;!.k3f!!)0V!<;3U!!)0:!!)0\!.k1P!!)0E!!)/S!.k33!!'e,!<0b%!!'e$!!U+;!5ANK
Z2i&J!5I^V!5I"`JcLB&g&M,To`4unmf3?im/R<l!!',$Xl]VM!!'.g_u%=OXbd%0!2]_rX7ZJlX7$#h
WrVPf"fhV'WrT2i!9*tYX60H_X1\Lb!.k4@!!)0S!<2-L!!)0K!!VKb!9O:DcN(*J!9WGE!9WeOJcLB&
XT8C9pAb3.qZ$W2l2Uhb^OuU_!!'dsiW-a&!.k3&!9X@^XnMeqXnr(uXm#fcXiURM!!'.a_Z6h)!.k3&
!4)\*X7lSoX8;ksX6BTaX8N$M!!3-#X60H_X.THE!.k4M!<;3U!!)0Y!!)0G!!)/e!6Y?Bk2u^Ek0sB_
!.k3l!<9h%!!'e*!!'e4!!'dq!1*Zc^[:(YirHiN!.k38!<91k!<)ruXn)MmXo/5"XdT7L!!'.a`;m$R
!.k3&!8deVX6orfX7H;kX8N"uX3L^J!!'(_!!'(i!.k3&!36,"k3`3Lk48QQk5>8[k(<[0!!)0E!!)/j
!.k3&!94(Z^[D.&^[D.&^W6D^!!'dsirHj[!.k3&!3ZD&XmZ5iXmZ5iXo&0N!!3-#XlmY'Xe5ZG!.k4I
!<9+g!!'(g!!'()!6Y?BX60H_X4.-$!.k3j!<;3M!!)0M!!)0C!1*Zck3W0G!!)/<!.k34!<9h/!!9n8
!:'Ub^R5)]!!'dsirHj-!.k3&!8@MRXnVkrXm#fcXj$jK!!'.a`;m%1!.k3&!2fhsX7uYpX6BTaX+C?I
!!'(_!!'(/!.k3&!9!qXk4eoVk32jGk/RJ/!!)0E!!)0I!.k3&!36,"^[D1&^\Rp6^Au"K!5JC2JcGiP
!5I^W!5G0,JcLB&p&P,pmf<Biq>^]$!3H5$XfqfK!!'.a`;m$i!.k3&!5\a9X7$&gX82f"WrT1#!3>/\
QN.#dm/["`!3:qVJcLf2s5s%Uq#LHWq>^]]!9O7]k*Z5/!!)0E!!)/p!.k3&!7q5M^\@d/^[D.&^WZ\\
!!'dsirHja!.k3&!2BPnXnVkrXmZ5jXT3qQq#CDskJ[G'[fD![JcOU,ri>eo!3>Pg!3=*>ZiC*,k5YL_
lMuM:JcMbMroWtU!9W_M!9X+XJcGiP!9WGE!9TpSJcM;@!5JI4rP.h%nGrU(mf3I)!!'e5!!'d:!6Y?B
^ZXVW^XN78!.k46!!'/"!<'%X!<91i!!B>'!3Q5#!3P5\QN.#fmD\tA!3M(XJcN+W!3?%urN"iVs/Z%t
oDeuo!!')!!!''d!9*tYX60H_X1\Lb!.k4M!!)0[!<)'<!<;3M!!D?`!9X7\!9VH)XoJIak5YMEnGn.@
JcNsos1eO5!5JI4!5ICks1e:.!5JC2!5JF3!l"^8JcPTH!5I^W!5GuCJcLN*s/l;$!<B8#!!'.Y!<91q
!!'.u!!'/!!!'.?!42_+XlmY'Xm5t=!.k3u!<9,!!!'(u!!'(W!<9+o!!'(s!!'(t!!'(q!.k1P!!'(_
!!''m!.k3A!<;3\!!)0[!!)0O!:Kpfk4\iUk5,,Yk552Zk,n^-!!)0E!!)02!.k3&!9jIb^Au%J!!'e4
!!'di!<9h$!!'dm!1*Zc^[:+Zj8crO!.k3Y!!98&Xo8;#Xo/5"Xk`sYXfVTk!!'-e!9*tYXlmY'Xh=^d
!.k1Q!36+#rVur!r;Zhuh#RJUm/R-eaoJRE!3>8_!3>ViJcLB&bQ%_,!9X7\!9X4[!9W);s5r\K!9X7\
JcPTH!9WGE!9U`jJcLK)!l"^8!<Bn5!!'dg!<9h)!!Bt9!5HGPZiC*@kMuWXlMuM:JcO-t!3Q5#!3Q2"
!3OuUs/khl"0DP'XnVmJ!!3-#XlmY'Xe5ZG!1X#hX8W)!X8N"uX762U!<9+j!!B8%!3<4%b5_OCk5YL_
e,Y(#JcOs6!9X7\!9X4[!9W#9s5rkP"6KR`k2?<,!!)0K!;c`rk(s(i!4)Y*^]"35^\n-4^Y/Yf!<0b/
!!'e3!!'d!!9*tY^ZXYX^V'W!!.k4M!!'/#!!'/"!!'.S!<0+r!!'/!!!'.C!3Q;%XlmY'XmlCC!.k3n
!!')!!!'(u!!'(Q!<0%p!!'(t!!'(u!.k4H!!'(_!!'(/!.k3)!!;9_!!*)^r;Zi[f`;$6q#CEWqu?`Z
_Z7%D!9WGE!9WSIJcLB&ci='\rVur5r;Zi4ec>`bp](E2!!'e.!.k1P!!'dsj8crf!.k3@!!'/#!!'/"
!!'.k!9O:]XnVkuXT/@'X8pED!3PG'!3O`NJcLB&k5YL_rVur!r;Zhuec>`Np](Ds!!'(X!1*ZcX6foa
!!''V!.k3W!!)0\!!)0[!!)08!;uotk4eoYjo>DDPlTeD!9WGE!9UrpJcLB&rVur5rVur5r;Zi4e,]N`
p](</a8i@C!5I^X!5J%(JcLB&aoDFDrVur#r;Zi"e,]NNp](;rquD<Kq#CDskJ[G'[fD![K`D1T!!!$"
X8N"uX4..LX7uYpX24kD!!'(_!!'(c!.k3&!71]Gk5G>\k5>8[k0sD2k4eoVk4Se,!!3-#k2u^Ek+D^+
!1X#h^]"35^\n-4^[V<`!<9h1!!'d7!6Y?B^ZXYX^XN78!.k46!!'/#!!'/"!!'.L!<91t!!'.Y!1*Zc
XmO+)`;m#s!.k3W!!')!!!'(u!!'(R!;QWpX82erX-<VD!!'(_!!'(5!.k3&!<)ruk5G>\k5>8[k0a80
k5#&Xk/[P*!!)0E!!)0O!.k3&!6P9A^]"35^\n-4^X)u\^\n-4^\\"_!;QTp^ZXYX^UF2p!/1CSXT/>%
!3Q2"!3OTJs/l5"!3O';ZiC*.kJ[G'lMuM:JcO-t!3?)!!3?%u!3=HHs/Z(u!3>bmJcGiP!3>8_!3;am
JcM;@!9X7\!9X4[!9WeOhuNf>r;Zi[WW:3B!9WGE!9Vc2JcLB&k5YLsr;cf2bl@m]^An8Kh>ilBm(`D3
M#`,-ZN(!-r;ceuf`:[F"Ked+!3MFbiW/)B]`<WaJcPcM!3?%urN"0C"KSR'!3=-?XoRRanGn.@JcNpn
!9X4[rT;?)"QnhH!9X.YJcPTHjlX#PJcLB&`;onP_#T&eJcLB&OT>B_o`0RDJcLB&JcOR+ri<%!JcLB&
JcM_LroW&;JcLB&JcLB&o)Jj,!!*#5Q2lL:JcLB&^An>;!!*##aoI"nJcLB&MZ<gZ!!*#!rW%NMP5p17
JcNai!p0I_roV-!JcLB&JcLo5!5JF3s1eC1JcLB&JcLB&g].>VquHc!Y5j.SJcLB&VuQguquHbtirFZ2
JcLB&JcPBB!9X1Zs5o[KJcLB&JcNRd!5HGPJcLB&JcL`0!3Q"rJcLu7JcLB&`W-">^&W`bJcLB&OoPLE
nc47AJcLB&JcOU,!5GE3JcLB&JcMbM!3OuUJcLB&JcLB&oDellO8sk4JcLB&^]4As_uPAhJcLB&N;rsn
pAfdFP5p17JcNgk!3Np7JcLB&JcLu7!3>ViJcLB&JcLB&h>dQ<V>u2JJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLu7JcLB&[f?ECr;cc1ec::%JcLB&K)bnRr;cbtMZA>/JcLB&c2[jFr;cbr^Aric
JcLB&RK*?Mr;ccXo)O@BJcLB&JcOp5s1eL4!5G<0JcLB&JcN(Vs/l5"!3OlRJcLB&JcLB&r;ckur;Zhu
N<#.BJcLB&\,cQkr;Zi[dK"k!JcLB&K`D1h!5JI4!5F9hJcLB&JcO-t!j)I)r;Zi"])[E_JcLB&S,`Vk
!3?%u!3>PgJcLB&JcLB&k5YSG!9X4[!9U'WJcLB&JcN%U!5JL5!5I+cJcLB&JcLB&qu?`!rVur#Mu]%A
JcLB&[f?E/rVur!d/\auJcLB&K)bo6rVur\L&cf*JcLB&c2[jZrW)l2^&W`bJcLB&RK*>irW)kunc47A
JcLB&JcOm4!3?)!r2Z^qJcLB&JcN%U!9X7\r8u`6JcLB&JcM5>!5JI4r4hh'qu?`3rVur5r;Zi4OT:RF
JcLB&e,TKNr;cbtmJm6hrVur#r;Zi"ec::%JcLB&TE"tmr;cbrmJm6frVur!r;ZhuMZA>/JcLB&lMpqI
r;ccXmJm7LrVur\r;Zi[^AricJcLB&\,cQDr;Zi4l2Uh!q#CE0o)O@BJcLB&KE2%Sr;Zi"l2Ugdq#CDs
VuVDLJcLB&cN+!Gr;Zhul2Ugbq#CDqg]2p+JcLB&RfNKNr;Zi[mf<7c!9X(W!9TCDP5p17JcO@%!l"`M
r;Zi4l2Uh!q#CE0ec::%JcLB&U&Y7s!3Q2"!3PMd!3Q%s!3M.ZJcLB&JcP0<!il=%r;Zhul2Ugbq#CDq
^AricJcLB&\Gu]n!9X4[!9WPH!9X(W!9WkQJcLB&JcLE'!5JL5!5Iau!5JL5!5JI4!5GH4JcLB&JcO'r
!3Q5#!3PJc!3Q5#!3Q2"!3P#VJcLB&JcM5>!3?)!!3>Mfqu?_trVur!r;ZhuOT:RFJcLB&e,TL2rVur\
kl:_GrVur\r;Zi[ec::%JcLB&TE"u,rW)l2m/R.$r;cf2M?&5.JcLB&lMpperW)kum/R-gr;ceu^&W`b
JcLB&[f?E/rW)ksm/R-er;cesnc47AJcLB&K)bo6rW)lYm/R.Kr;cfYVZ;;KJcLB&c2[jZrVur5r;Zi4
^AricJcLB&RK*>irVur#r;Zi"o)O@BP5p17JcO:#!3?)!!3?%u!3<X1JcLB&JcMGD!9X7\!9X4[!9WYK
JcLB&JcLB&lMpq"q#CE0U&]cFJcLB&[f?E1q#CDsec::%JcLB&K)bnPq#CDqMZA>/JcLB&c2[k,q#CEW
^AricJcLB&RK*?&q#CE0o)O@BP5p17JcO:#!3Q%s!3Nd3JcLB&JcMGD!3>nq!3>JeJcLB&JcLB&lMpqI
q#CEWU&]cFJcLB&[f?ECrVur5r;Zi4ec::%JcLB&K)bnRrVur#r;Zi"MZA>/JcLB&c2[jFrVur!r;Zhu
^AricJcLB&RK*?MrVur\r;Zi[o)O@BP5p17JcO:#!5JI4rP,iBJcLB&JcMGD!3Q2"rN5DdJcLB&JcLB&
lMppcr;cesT`BZEJcLB&[f?Ejr;cfYeGt1$JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&P5p17JcLB&JcLB&JcLB&JcM2=J,~>

%%EndBinary
grestore
np
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
/DJABXL+Times-Roman*1 uf
/DJABXL+Times-Roman uf
/GLAAAA+Times-Roman uf
/DJABXM+Times-Bold*1 uf
/DJABXM+Times-Bold uf
/GISAAA+Times-Bold uf
/DJABXO+Times-Italic*1 uf
/DJABXO+Times-Italic uf
/WRBBAA+Times-Italic uf
/DJABXN+TT15Et00*1 uf
/DJABXN+TT15Et00 uf
/BUZAAA+TT15Et00 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
